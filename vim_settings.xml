<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/git/web/persofleet/resources/lang/de/validation.php" timestamp="1521107942055">
        <mark key="[" line="2" column="8" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Api/v1/UserController.php" timestamp="1521481254443">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="/a.dummy" timestamp="1520934830984">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/ContactCrudController.php" timestamp="1517241731099">
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Requests/TrackRequest.php" timestamp="1517839596345">
        <mark key="[" line="27" column="42" />
        <mark key="]" line="27" column="14" />
        <mark key="." line="27" column="14" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/StatusCrudController.php" timestamp="1517239648422">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="106" />
        <mark key="." line="23" column="89" />
        <mark key="^" line="23" column="96" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/factories/ImageFactory.php" timestamp="1519831528605">
        <mark key="[" line="14" column="32" />
        <mark key="]" line="14" column="31" />
        <mark key="." line="14" column="31" />
        <mark key="^" line="14" column="31" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/composer.json" timestamp="1520520438271">
        <mark key="[" line="21" column="36" />
        <mark key="]" line="21" column="36" />
        <mark key="." line="21" column="36" />
        <mark key="^" line="21" column="77" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/seeds/UsersTableSeeder.php" timestamp="1521532190757">
        <mark key="[" line="40" column="8" />
        <mark key="]" line="40" column="8" />
        <mark key="." line="40" column="8" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/Image.php" timestamp="1521540799426">
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="0" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/CompanySeeder.php" timestamp="1517242119291">
        <mark key="[" line="32" column="0" />
        <mark key="]" line="32" column="0" />
        <mark key="." line="32" column="0" />
        <mark key="^" line="20" column="7" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/components/scrollable-toolbar/scrollable-toolbar.ts" timestamp="1519810728919">
        <mark key="[" line="27" column="0" />
        <mark key="]" line="27" column="0" />
        <mark key="." line="27" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Auth/MyAccountController.php" timestamp="1516274860964">
        <mark key="[" line="4" column="4" />
        <mark key="]" line="4" column="4" />
        <mark key="." line="4" column="4" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Models/Status.php" timestamp="1517233780684">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="40" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/seeds/DatabaseSeeder.php" timestamp="1520504751147">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Admin/JumpinTypeCrudController.php" timestamp="1521542299895">
        <mark key="[" line="25" column="27" />
        <mark key="]" line="25" column="27" />
        <mark key="." line="25" column="27" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_164000_create_jumpin_participants_table.php" timestamp="1519832916231">
        <mark key="[" line="15" column="41" />
        <mark key="]" line="24" column="62" />
        <mark key="^" line="24" column="32" />
        <mark key="." line="24" column="62" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/factories/TrackFactory.php" timestamp="1520507724720">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
        <mark key="^" line="16" column="33" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/resources/lang/de/validation.php" timestamp="1519820028240">
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_22_144931_create_company_contact_table.php" timestamp="1516715160234">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="21" column="96" />
        <mark key="." line="21" column="74" />
        <mark key="^" line="21" column="74" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/DatabaseSeeder.php" timestamp="1517242335217">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
        <mark key="^" line="21" column="24" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_165722_create_location_hours_table.php" timestamp="1519834082333">
        <mark key="[" line="34" column="30" />
        <mark key="]" line="22" column="27" />
        <mark key="^" line="22" column="27" />
        <mark key="." line="22" column="27" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Admin/FileTypeCrudController.php" timestamp="1517478349757">
        <mark key="[" line="34" column="0" />
        <mark key="]" line="68" column="34" />
        <mark key="." line="34" column="0" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/jumpin/jumpin.module.ts" timestamp="1519814378649">
        <mark key="[" line="11" column="54" />
        <mark key="]" line="11" column="69" />
        <mark key="." line="11" column="56" />
        <mark key="^" line="11" column="55" />
      </file>
      <file name="$USER_HOME$/projects/guitab/.eslintrc.js" timestamp="1521206247570">
        <mark key="[" line="23" column="33" />
        <mark key="]" line="22" column="24" />
        <mark key="." line="22" column="29" />
        <mark key="^" line="19" column="28" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/quickvotes/quickvotes.html" timestamp="1519908971706">
        <mark key="[" line="11" column="32" />
        <mark key="]" line="11" column="49" />
        <mark key="." line="11" column="32" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/resources/lang/de/crud.php" timestamp="1519916851117">
        <mark key="[" line="18" column="11" />
        <mark key="]" line="18" column="12" />
        <mark key="." line="18" column="12" />
        <mark key="^" line="18" column="15" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/Jumpin.php" timestamp="1521540735378">
        <mark key="[" line="69" column="0" />
        <mark key="]" line="69" column="0" />
        <mark key="." line="69" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/composer.json" timestamp="1521533425191">
        <mark key="[" line="48" column="0" />
        <mark key="]" line="48" column="0" />
        <mark key="^" line="47" column="5" />
        <mark key="." line="48" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/js/icon-picker/ionicon3-material.js" timestamp="1521470855067">
        <mark key="[" line="25" column="20" />
        <mark key="]" line="25" column="22" />
        <mark key="^" line="25" column="22" />
        <mark key="." line="25" column="22" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_123005_create_jumpins_table.php" timestamp="1519917047397">
        <mark key="[" line="24" column="29" />
        <mark key="]" line="24" column="29" />
        <mark key="." line="24" column="29" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/views/mails/app/markdown/contact.blade.php" timestamp="1521559923424">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="8" />
        <mark key="^" line="16" column="8" />
        <mark key="." line="16" column="8" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Api/v1/AuthController.php" timestamp="1521558120950">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="19" column="41" />
        <mark key="." line="32" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Http/Transformers/Api/v1/ModuleTransformer.php" timestamp="1517909374473">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="14" column="0" />
        <mark key="." line="14" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Api/v1/CategoryController.php" timestamp="1517910923524">
        <mark key="[" line="13" column="0" />
        <mark key="]" line="13" column="0" />
        <mark key="." line="13" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Http/Controllers/Api/v1/ContactsController.php" timestamp="1521559736699">
        <mark key="[" line="24" column="0" />
        <mark key="]" line="24" column="0" />
        <mark key="." line="24" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Requests/Api/v1/SignupRequest.php" timestamp="1520961270007">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/jump-in/jump-in.html" timestamp="1518709119867">
        <mark key="[" line="17" column="19" />
        <mark key="]" line="21" column="54" />
        <mark key="." line="21" column="54" />
        <mark key="^" line="21" column="54" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Requests/UserRequest.php" timestamp="1517839644170">
        <mark key="[" line="29" column="0" />
        <mark key="]" line="29" column="0" />
        <mark key="." line="29" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_17_134808_create_events_table.php" timestamp="1517308089165">
        <mark key="[" line="21" column="29" />
        <mark key="]" line="24" column="28" />
        <mark key="." line="24" column="28" />
        <mark key="^" line="24" column="28" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/main-view/main-view.html" timestamp="1519811975856">
        <mark key="[" line="10" column="0" />
        <mark key="]" line="10" column="26" />
        <mark key="." line="12" column="38" />
        <mark key="^" line="12" column="46" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/www/build/.ion-diagnostic-typescript.html" timestamp="1518709494621">
        <mark key="[" line="3" column="115" />
        <mark key="]" line="3" column="115" />
        <mark key="." line="3" column="115" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_121405_create_jumpins_table.php" timestamp="1519817308313">
        <mark key="[" line="22" column="41" />
        <mark key="]" line="22" column="43" />
        <mark key="^" line="22" column="43" />
        <mark key="." line="22" column="43" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Services/Backend/PhpInfoService.php" timestamp="1520518988057">
        <mark key="[" line="4" column="20" />
        <mark key="]" line="4" column="5" />
        <mark key="^" line="4" column="5" />
        <mark key="." line="4" column="5" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_165722_create__hours_table.php" timestamp="1519833989663">
        <mark key="[" line="16" column="20" />
        <mark key="]" line="16" column="20" />
        <mark key="." line="16" column="20" />
        <mark key="^" line="16" column="21" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/routes/backpack/permissionmanager.php" timestamp="1517905365073">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="19" column="0" />
        <mark key="^" line="13" column="46" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/guardian/app/Models/Call/Call.php" timestamp="1521469125164">
        <mark key="[" line="119" column="8" />
        <mark key="]" line="119" column="8" />
        <mark key="^" line="121" column="37" />
        <mark key="." line="119" column="8" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_17_124407_create_contacts_table.php" timestamp="1516629402342">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/models/tag.ts" timestamp="1518710235656">
        <mark key="[" line="4" column="25" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/CompaniesSeeder.php" timestamp="1516715407595">
        <mark key="[" line="44" column="24" />
        <mark key="]" line="44" column="24" />
        <mark key="." line="44" column="24" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Validators/UserPasswordValidator.php" timestamp="1521107498994">
        <mark key="[" line="7" column="18" />
        <mark key="]" line="19" column="16" />
        <mark key="." line="19" column="16" />
        <mark key="^" line="19" column="16" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/migrations/2018_02_01_101109_create_file_types_table.php" timestamp="1517476280290">
        <mark key="[" line="16" column="37" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Components/Modules/Controllers/ModuleCrudController.php" timestamp="1521542124893">
        <mark key="[" line="38" column="0" />
        <mark key="]" line="38" column="37" />
        <mark key="." line="141" column="0" />
        <mark key="^" line="140" column="36" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/PriorityCrudController.php" timestamp="1517239708870">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="109" />
        <mark key="." line="23" column="91" />
        <mark key="^" line="23" column="63" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_122932_create_frequencies_table.php" timestamp="1519817896409">
        <mark key="[" line="30" column="30" />
        <mark key="]" line="30" column="30" />
        <mark key="." line="30" column="40" />
        <mark key="^" line="15" column="34" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/Crud/CategoryCrudTest.php" timestamp="1519816466188">
        <mark key="[" line="26" column="0" />
        <mark key="]" line="27" column="53" />
        <mark key="." line="27" column="46" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/phpunit.xml" timestamp="1517389870259">
        <mark key="[" line="11" column="25" />
        <mark key="]" line="11" column="25" />
        <mark key="." line="11" column="25" />
        <mark key="^" line="11" column="7" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Requests/JumpinTypeRequest.php" timestamp="1521539889486">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="64" />
        <mark key="." line="17" column="64" />
        <mark key="^" line="17" column="22" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_17_120000_create_companies_table.php" timestamp="1516619486888">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="20" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/js/icon-picker/persoflicon.js" timestamp="1521473705587">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/Auth/MyAccountController.php" timestamp="1516284858799">
        <mark key="[" line="50" column="9" />
        <mark key="]" line="44" column="0" />
        <mark key="." line="44" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/CrudController.php" timestamp="1516713999845">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="79" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/vendor/wapmorgan/mp3info/src/Mp3Info.php" timestamp="1520519774890">
        <mark key="[" line="165" column="22" />
        <mark key="]" line="165" column="22" />
        <mark key="." line="165" column="22" />
      </file>
      <file name="$USER_HOME$/git/web/hma/routes/backpack/base.php" timestamp="1517904798856">
        <mark key="[" line="12" column="0" />
        <mark key="]" line="31" column="2" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_122919_create_frequencies_table.php" timestamp="1519817433809">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="19" column="35" />
        <mark key="^" line="19" column="34" />
        <mark key="." line="19" column="34" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/.env" timestamp="1521551361929">
        <mark key="[" line="38" column="17" />
        <mark key="]" line="23" column="12" />
        <mark key="." line="23" column="12" />
      </file>
      <file name="$USER_HOME$/git/web/guardian/app/Models/AppUser.php" timestamp="1521541118015">
        <mark key="[" line="280" column="0" />
        <mark key="]" line="284" column="5" />
        <mark key="." line="279" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Models/File.php" timestamp="1517911869224">
        <mark key="[" line="94" column="0" />
        <mark key="]" line="94" column="0" />
        <mark key="." line="94" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/fonts/persoflicons/config.json" timestamp="1521124358464">
        <mark key="[" line="1" column="23" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2014_10_12_000000_create_users_table.php" timestamp="1520960840479">
        <mark key="[" line="22" column="24" />
        <mark key="]" line="22" column="23" />
        <mark key="^" line="22" column="23" />
        <mark key="." line="22" column="23" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/jumpin/jumpin.html" timestamp="1519813454086">
        <mark key="[" line="77" column="25" />
        <mark key="]" line="79" column="20" />
        <mark key="." line="79" column="20" />
        <mark key="^" line="79" column="20" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/jumpin-overview/jumpin-overview.ts" timestamp="1519813240037">
        <mark key="[" line="90" column="0" />
        <mark key="]" line="90" column="0" />
        <mark key="." line="90" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/js/icon-picker/ionicon3.js" timestamp="1521123170001">
        <mark key="[" line="30" column="13" />
        <mark key="]" line="30" column="13" />
        <mark key="." line="30" column="13" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_164000_create_user_jumpins_table.php" timestamp="1519832473876">
        <mark key="[" line="15" column="24" />
        <mark key="]" line="15" column="24" />
        <mark key="." line="15" column="24" />
      </file>
      <file name="$USER_HOME$/projects/guitab/src/renderer/components/LandingPage/SystemInformation.vue" timestamp="1521196054817">
        <mark key="[" line="39" column="31" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Models/Company.php" timestamp="1517233745940">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="40" />
        <mark key="^" line="5" column="39" />
        <mark key="." line="5" column="39" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/factories/PermissionFactory.php" timestamp="1517322037958">
        <mark key="[" line="7" column="30" />
        <mark key="]" line="7" column="29" />
        <mark key="." line="7" column="29" />
        <mark key="^" line="7" column="29" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_03_01_114001_create_jumpin_types_table.php" timestamp="1519901000642">
        <mark key="[" line="15" column="6" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/factories/FrequencyFactory.php" timestamp="1521543031282">
        <mark key="[" line="7" column="65" />
        <mark key="]" line="5" column="17" />
        <mark key="." line="5" column="17" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/Feature/CategoryCrudTest.php" timestamp="1517389431826">
        <mark key="[" line="31" column="15" />
        <mark key="]" line="31" column="15" />
        <mark key="." line="31" column="15" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/factories/CompanyFactory.php" timestamp="1516621363432">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php" timestamp="1517236118888">
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="0" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/seeds/FrequencySeeder.php" timestamp="1521532281008">
        <mark key="[" line="15" column="42" />
        <mark key="]" line="14" column="42" />
        <mark key="." line="15" column="42" />
        <mark key="^" line="14" column="42" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_161310_create_images_table.php" timestamp="1519831168696">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="^" line="19" column="25" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_23_131541_create_job_companies_table.php" timestamp="1517474705405">
        <mark key="[" line="7" column="1" />
      </file>
      <file name="$USER_HOME$/git/web/foodahoo/vendor/backpack/crud/src/PanelTraits/FakeFields.php" timestamp="1517234345682">
        <mark key="[" line="39" column="132" />
        <mark key="]" line="39" column="132" />
        <mark key="^" line="39" column="132" />
        <mark key="." line="39" column="132" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/models/jumpin.ts" timestamp="1519811521332">
        <mark key="[" line="13" column="22" />
        <mark key="]" line="13" column="30" />
        <mark key="." line="13" column="30" />
        <mark key="^" line="13" column="30" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/lang/vendor/backpack/de/base.php" timestamp="1521108039738">
        <mark key="[" line="24" column="0" />
        <mark key="]" line="24" column="0" />
        <mark key="." line="24" column="0" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/models/location.ts" timestamp="1519303997426">
        <mark key="[" line="27" column="8" />
        <mark key="]" line="8" column="0" />
        <mark key="^" line="17" column="28" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Requests/CategoryRequest.php" timestamp="1517839556091">
        <mark key="[" line="27" column="34" />
        <mark key="]" line="27" column="34" />
        <mark key="." line="27" column="34" />
        <mark key="^" line="27" column="18" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/tests/TestCase.php" timestamp="1521540617099">
        <mark key="[" line="27" column="0" />
        <mark key="]" line="27" column="0" />
        <mark key="." line="27" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/resources/lang/de/crud.php" timestamp="1516713192776">
        <mark key="[" line="34" column="23" />
        <mark key="]" line="34" column="23" />
        <mark key="." line="34" column="23" />
        <mark key="^" line="34" column="33" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Models/FileType.php" timestamp="1517488186844">
        <mark key="[" line="34" column="30" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/EventCrudController.php" timestamp="1517310710719">
        <mark key="[" line="44" column="15" />
        <mark key="]" line="83" column="34" />
        <mark key="^" line="83" column="34" />
        <mark key="." line="83" column="34" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/persoflicons/demo.html" timestamp="1521474335217">
        <mark key="[" line="241" column="0" />
        <mark key="]" line="275" column="4" />
        <mark key="." line="299" column="68" />
        <mark key="^" line="299" column="68" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/EventSeeder.php" timestamp="1517242555400">
        <mark key="[" line="27" column="20" />
        <mark key="]" line="26" column="24" />
        <mark key="." line="26" column="24" />
        <mark key="^" line="26" column="24" />
      </file>
      <file name="$USER_HOME$/git/web/hma/vendor/backpack/crud/src/resources/views/fields/select.blade.php" timestamp="1516709545481">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/persoflicons/css/persoflicons-ie7-codes.css" timestamp="1521468090820">
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="1" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/persoflicons/css/animation.css" timestamp="1521472405145">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/UsersTableSeeder.php" timestamp="1516623282870">
        <mark key="[" line="5" column="7" />
        <mark key="]" line="2" column="31" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_24_130321_create_order_contacts_table.php" timestamp="1517236709903">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="55" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/Auth/RegisterController.php" timestamp="1516283495546">
        <mark key="[" line="47" column="27" />
        <mark key="]" line="47" column="27" />
        <mark key="." line="47" column="27" />
      </file>
      <file name="$USER_HOME$/projects/forum/resources/assets/js/app.js" timestamp="1521197638293">
        <mark key="[" line="20" column="33" />
        <mark key="]" line="20" column="33" />
        <mark key="." line="20" column="33" />
      </file>
      <file name="/fragment.ts" timestamp="1519811672081">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/webpack.mix.js" timestamp="1521471828396">
        <mark key="[" line="19" column="46" />
        <mark key="]" line="19" column="46" />
        <mark key="." line="19" column="46" />
        <mark key="^" line="18" column="26" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/JumpinType.php" timestamp="1521542542845">
        <mark key="[" line="58" column="2" />
        <mark key="]" line="61" column="7" />
        <mark key="." line="61" column="7" />
        <mark key="^" line="60" column="76" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Models/Model.php" timestamp="1517236395606">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="10" column="4" />
        <mark key="." line="11" column="0" />
        <mark key="^" line="9" column="38" />
      </file>
      <file name="$USER_HOME$/git/web/hma/tests/Feature/TagTest.php" timestamp="1516620235929">
        <mark key="[" line="28" column="12" />
        <mark key="]" line="28" column="42" />
        <mark key="." line="26" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Admin/RecurrenceCrudController.php" timestamp="1519817761650">
        <mark key="[" line="23" column="43" />
        <mark key="]" line="23" column="43" />
        <mark key="." line="23" column="43" />
        <mark key="^" line="23" column="42" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/components/components.module.ts" timestamp="1519726267378">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/tests/Unit/ContactTest.php" timestamp="1516629471990">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/Frequency.php" timestamp="1521544228025">
        <mark key="[" line="47" column="30" />
        <mark key="]" line="47" column="42" />
        <mark key="." line="47" column="42" />
        <mark key="^" line="47" column="42" />
      </file>
      <file name="$USER_HOME$/git/web/hma/tests/Feature/EventTypeCrudTest.php" timestamp="1517311484088">
        <mark key="[" line="33" column="0" />
        <mark key="]" line="33" column="0" />
        <mark key="." line="33" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1521560012810">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/EventTypeCrudController.php" timestamp="1517311532694">
        <mark key="[" line="21" column="83" />
        <mark key="]" line="40" column="28" />
        <mark key="." line="40" column="28" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Providers/AppServiceProvider.php" timestamp="1521108970117">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/Recurrence.php" timestamp="1519817745600">
        <mark key="[" line="17" column="27" />
        <mark key="]" line="17" column="27" />
        <mark key="." line="17" column="27" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/TrackFile.php" timestamp="1520520858308">
        <mark key="[" line="13" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Models/Company/Company.php" timestamp="1520948517671">
        <mark key="[" line="33" column="0" />
        <mark key="]" line="33" column="0" />
        <mark key="." line="33" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/resources/views/welcome.blade.php" timestamp="1517499866612">
        <mark key="[" line="76" column="0" />
        <mark key="]" line="76" column="0" />
        <mark key="." line="76" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/routes/employee.php" timestamp="1521106032524">
        <mark key="[" line="7" column="99" />
        <mark key="]" line="7" column="120" />
        <mark key="^" line="7" column="120" />
        <mark key="." line="7" column="120" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Requests/FileTypeRequest.php" timestamp="1517839545379">
        <mark key="[" line="27" column="32" />
        <mark key="]" line="27" column="32" />
        <mark key="." line="27" column="32" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/public/.htaccess" timestamp="1517499729488">
        <mark key="[" line="7" column="30" />
        <mark key="]" line="7" column="29" />
        <mark key="." line="7" column="29" />
        <mark key="^" line="7" column="29" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/resources/lang/de/validation.php" timestamp="1519922772094">
        <mark key="[" line="163" column="29" />
        <mark key="]" line="163" column="29" />
        <mark key="." line="163" column="29" />
        <mark key="^" line="163" column="13" />
      </file>
      <file name="$USER_HOME$/git/web/hma/routes/admin.php" timestamp="1517241147386">
        <mark key="[" line="22" column="34" />
        <mark key="]" line="22" column="24" />
        <mark key="." line="22" column="24" />
        <mark key="^" line="22" column="24" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/factories/RoleFactory.php" timestamp="1517829092782">
        <mark key="[" line="8" column="6" />
        <mark key="]" line="8" column="5" />
        <mark key="." line="8" column="5" />
        <mark key="^" line="8" column="5" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/database/seeds/CompanySeeder.php" timestamp="1520851637252">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
        <mark key="^" line="17" column="20" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/seeds/UsersTableSeeder.php" timestamp="1517829103854">
        <mark key="[" line="17" column="11" />
        <mark key="]" line="43" column="38" />
        <mark key="^" line="35" column="47" />
        <mark key="." line="35" column="47" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/Crud/TrackCrudTest.php" timestamp="1520517010736">
        <mark key="[" line="43" column="54" />
        <mark key="]" line="43" column="54" />
        <mark key="." line="43" column="54" />
        <mark key="^" line="36" column="19" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Components/Administration/User/Mail/Created.php" timestamp="1521548548705">
        <mark key="[" line="37" column="41" />
        <mark key="]" line="37" column="28" />
        <mark key="^" line="37" column="28" />
        <mark key="." line="37" column="28" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/.gitignore" timestamp="1517318012856">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="11" column="0" />
        <mark key="^" line="11" column="0" />
        <mark key="." line="11" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Admin/FrequencyCrudController.php" timestamp="1519818194569">
        <mark key="[" line="34" column="0" />
        <mark key="]" line="34" column="0" />
        <mark key="." line="34" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_171600_create_location_jumpins_table.php" timestamp="1519836082337">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="^" line="23" column="74" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/tests/Crud/jumpin.php" timestamp="1519815937999">
        <mark key="[" line="38" column="34" />
        <mark key="]" line="38" column="34" />
        <mark key="." line="38" column="34" />
        <mark key="^" line="38" column="36" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Requests/FileRequest.php" timestamp="1517839437385">
        <mark key="[" line="27" column="46" />
        <mark key="]" line="29" column="51" />
        <mark key="." line="29" column="0" />
        <mark key="^" line="26" column="12" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Transformers/FileTransformer.php" timestamp="1517912471166">
        <mark key="[" line="16" column="5" />
        <mark key="]" line="23" column="28" />
        <mark key="." line="23" column="28" />
        <mark key="^" line="23" column="28" />
      </file>
      <file name="$USER_HOME$/git/web/gsk/app/Models/User.php" timestamp="1516017326665">
        <mark key="[" line="21" column="0" />
        <mark key="]" line="22" column="98" />
        <mark key="." line="21" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/js/icon-picker/persoflicons.js" timestamp="1521470546399">
        <mark key="[" line="24" column="25" />
        <mark key="]" line="24" column="25" />
        <mark key="^" line="32" column="16" />
        <mark key="." line="24" column="25" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/vendor/wfm/apicontroller/src/ApiController.php" timestamp="1521559781748">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/vendor/backpack/base/src/app/Http/Requests/ChangePasswordRequest.php" timestamp="1521105310479">
        <mark key="[" line="13" column="19" />
        <mark key="]" line="30" column="107" />
        <mark key="." line="31" column="67" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Api/ApiV1Controller.php" timestamp="1517910223254">
        <mark key="[" line="39" column="0" />
        <mark key="]" line="39" column="0" />
        <mark key="." line="39" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/factories/JobFactory.php" timestamp="1516714786627">
        <mark key="[" line="15" column="45" />
        <mark key="]" line="19" column="0" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/tests/Feature/StatusCrudTest.php" timestamp="1517238350674">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="20" column="0" />
        <mark key="^" line="33" column="49" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/config/backpack/permissionmanager.php" timestamp="1517905414573">
        <mark key="[" line="36" column="33" />
        <mark key="]" line="36" column="33" />
        <mark key="." line="36" column="37" />
        <mark key="^" line="31" column="37" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/Api/GetCategoriesTest.php" timestamp="1520507370168">
        <mark key="[" line="110" column="0" />
        <mark key="]" line="111" column="115" />
        <mark key="^" line="100" column="41" />
        <mark key="." line="100" column="41" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/factories/UserFactory.php" timestamp="1520961055678">
        <mark key="[" line="25" column="38" />
        <mark key="]" line="25" column="26" />
        <mark key="." line="25" column="26" />
        <mark key="^" line="25" column="26" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Traits/OpeningHoursTrait.php" timestamp="1519834305159">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="0" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Transformers/TrackTransformer.php" timestamp="1520517525997">
        <mark key="[" line="45" column="56" />
        <mark key="]" line="45" column="55" />
        <mark key="." line="45" column="55" />
        <mark key="^" line="45" column="55" />
      </file>
      <file name="$USER_HOME$/git/web/hma/vendor/backpack/crud/src/resources/views/columns/select_multiple.blade.php" timestamp="1516709590273">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/persoflicons/css/persoflicons-ie7.css" timestamp="1521468255605">
        <mark key="[" line="0" column="34" />
        <mark key="]" line="12" column="6" />
        <mark key="." line="12" column="6" />
      </file>
      <file name="$USER_HOME$/git/app/guardian/package.json" timestamp="1519920891013">
        <mark key="[" line="47" column="158" />
        <mark key="]" line="47" column="101" />
        <mark key="^" line="47" column="101" />
        <mark key="." line="47" column="101" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/persoflicons/css/persoflicons.css" timestamp="1521474357976">
        <mark key="[" line="80" column="1" />
        <mark key="]" line="80" column="1" />
        <mark key="." line="45" column="0" />
        <mark key="^" line="14" column="22" />
      </file>
      <file name="$USER_HOME$/git/app/persofleet.app/src/providers/auth/auth.ts" timestamp="1521548314777">
        <mark key="[" line="76" column="32" />
        <mark key="]" line="76" column="7" />
        <mark key="^" line="76" column="7" />
        <mark key="." line="76" column="7" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/JumpinDate.php" timestamp="1521538698433">
        <mark key="[" line="44" column="0" />
        <mark key="]" line="44" column="0" />
        <mark key="^" line="27" column="17" />
        <mark key="." line="44" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Admin/JumpinCrudController.php" timestamp="1521544842534">
        <mark key="[" line="107" column="33" />
        <mark key="]" line="107" column="33" />
        <mark key="." line="107" column="33" />
        <mark key="^" line="108" column="35" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/migrations/2018_02_05_132324_create_files_table.php" timestamp="1517833423901">
        <mark key="[" line="19" column="63" />
        <mark key="]" line="19" column="63" />
        <mark key="." line="19" column="63" />
        <mark key="^" line="18" column="33" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/fonts/persoflicons/css/persoflicons.css" timestamp="1521124323880">
        <mark key="[" line="2" column="19" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/factories/FileFactory.php" timestamp="1517911461328">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="11" column="0" />
        <mark key="^" line="10" column="15" />
        <mark key="." line="11" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/utilities/functions.php" timestamp="1517483296552">
        <mark key="[" line="3" column="1" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/seeds/DataSeeder.php" timestamp="1520504705271">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="19" column="8" />
        <mark key="." line="17" column="26" />
        <mark key="^" line="17" column="26" />
      </file>
      <file name="$USER_HOME$/git/web/gsk/resources/assets/sass/_partial.scss" timestamp="1516008102860">
        <mark key="[" line="50" column="5" />
        <mark key="]" line="16" column="4" />
        <mark key="." line="16" column="4" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/seeds/FileTypeSeeder.php" timestamp="1517482848225">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="16" column="55" />
        <mark key="." line="15" column="44" />
        <mark key="^" line="14" column="49" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/seeds/FileSeeder.php" timestamp="1517482088468">
        <mark key="[" line="7" column="7" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/vendor/backpack/permissionmanager/src/app/Http/Controllers/UserCrudController.php" timestamp="1520936834322">
        <mark key="[" line="26" column="28" />
        <mark key="]" line="26" column="27" />
        <mark key="^" line="26" column="27" />
        <mark key="." line="26" column="27" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Models/EventType.php" timestamp="1517311326670">
        <mark key="[" line="22" column="9" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/main-view/main-view.ts" timestamp="1519811991946">
        <mark key="[" line="64" column="0" />
        <mark key="]" line="67" column="4" />
        <mark key="." line="32" column="27" />
        <mark key="^" line="32" column="27" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/package.json" timestamp="1520948278169">
        <mark key="[" line="8" column="3" />
        <mark key="]" line="8" column="4" />
        <mark key="." line="8" column="4" />
        <mark key="^" line="8" column="4" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/factories/JumpinDateFactory.php" timestamp="1521544708452">
        <mark key="[" line="11" column="59" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="11" column="63" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Controllers/Admin/JobCrudController.php" timestamp="1516716260145">
        <mark key="[" line="87" column="0" />
        <mark key="]" line="120" column="11" />
        <mark key="." line="87" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/factories/EventFactory.php" timestamp="1517308423139">
        <mark key="[" line="17" column="19" />
        <mark key="]" line="10" column="0" />
        <mark key="." line="10" column="0" />
        <mark key="^" line="10" column="28" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Admin/UserCrudController.php" timestamp="1517912364168">
        <mark key="[" line="16" column="0" />
        <mark key="]" line="16" column="0" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" timestamp="1521207508710">
        <mark key="[" line="45" column="29" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Http/Controllers/Auth/ForgotPasswordController.php" timestamp="1521549941761" />
      <file name="$USER_HOME$/git/web/hypno/tests/Unit/UserTest.php" timestamp="1518540590340">
        <mark key="[" line="24" column="0" />
        <mark key="]" line="24" column="0" />
        <mark key="." line="24" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/database/seeds/UserSeeder.php" timestamp="1521111225405">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="19" column="16" />
        <mark key="^" line="19" column="16" />
        <mark key="." line="19" column="16" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/jumpin-overview/jumpin-overview.html" timestamp="1519812918687">
        <mark key="[" line="2" column="19" />
        <mark key="]" line="2" column="62" />
        <mark key="." line="26" column="0" />
        <mark key="^" line="25" column="62" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/tests/Api/SignupTest.php" timestamp="1520873346717">
        <mark key="[" line="37" column="0" />
        <mark key="]" line="37" column="0" />
        <mark key="." line="37" column="0" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/jump-in/jump-in.ts" timestamp="1518709218997">
        <mark key="[" line="14" column="22" />
        <mark key="]" line="14" column="22" />
        <mark key="^" line="21" column="0" />
        <mark key="." line="14" column="22" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/seeds/DatabaseSeeder.php" timestamp="1519904563322">
        <mark key="[" line="19" column="26" />
        <mark key="]" line="19" column="29" />
        <mark key="." line="19" column="29" />
        <mark key="^" line="19" column="29" />
      </file>
      <file name="$USER_HOME$/git/web/hma/vendor/laravel/framework/src/Illuminate/Foundation/Auth/RegistersUsers.php" timestamp="1516268312917">
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="." line="30" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/vendor/backpack/crud/src/resources/views/columns/select.blade.php" timestamp="1516710864896">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Models/Track.php" timestamp="1521474964429">
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="0" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/vendor/backpack/crud/src/CrudTrait.php" timestamp="1517834624888">
        <mark key="[" line="133" column="0" />
        <mark key="]" line="163" column="4" />
        <mark key="^" line="149" column="8" />
        <mark key="." line="149" column="8" />
      </file>
      <file name="$USER_HOME$/git/web/hma/tests/TestCase.php" timestamp="1517318855982">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="16" column="4" />
        <mark key="." line="20" column="42" />
        <mark key="^" line="20" column="42" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/providers/location-service/location-service.ts" timestamp="1519811251949">
        <mark key="[" line="66" column="0" />
        <mark key="]" line="66" column="42" />
        <mark key="." line="89" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/public/css/ionicons.css" timestamp="1521473423763">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="17" />
        <mark key="." line="13" column="435" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/seeds/RolesTableSeeder.php" timestamp="1517829121950">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="70" />
        <mark key="." line="17" column="7" />
        <mark key="^" line="17" column="7" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/migrations/2018_01_31_131109_create_file_types_table.php" timestamp="1517836394467">
        <mark key="[" line="17" column="35" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/Unit/TrackTest.php" timestamp="1520516938222">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="85" />
        <mark key="." line="28" column="81" />
        <mark key="^" line="28" column="81" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/factories/EventTypeFactory.php" timestamp="1517241105082">
        <mark key="[" line="8" column="8" />
        <mark key="]" line="6" column="17" />
        <mark key="." line="6" column="17" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Models/Event.php" timestamp="1517310388962">
        <mark key="[" line="75" column="0" />
        <mark key="]" line="75" column="0" />
        <mark key="." line="75" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/tests/ApiTestCase.php" timestamp="1517910449583">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="14" column="0" />
        <mark key="." line="14" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_03_01_114330_create_jumpin_types_table.php" timestamp="1519901375707">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="20" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Admin/TrackCrudController.php" timestamp="1520517328008">
        <mark key="[" line="67" column="34" />
        <mark key="]" line="103" column="33" />
        <mark key="." line="67" column="42" />
        <mark key="^" line="77" column="55" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/factories/OpenHourFactory.php" timestamp="1519833569479">
        <mark key="[" line="7" column="10" />
        <mark key="]" line="5" column="24" />
        <mark key="." line="5" column="24" />
        <mark key="^" line="5" column="24" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/resources/lang/de/titles.php" timestamp="1520515959514">
        <mark key="[" line="53" column="0" />
        <mark key="]" line="53" column="0" />
        <mark key="." line="53" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_164000_create_jumpin_participations_table.php" timestamp="1519836058455">
        <mark key="[" line="22" column="69" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/projects/guitab/src/renderer/router/index.js" timestamp="1521204936165">
        <mark key="[" line="10" column="24" />
        <mark key="]" line="10" column="23" />
        <mark key="^" line="10" column="23" />
        <mark key="." line="10" column="23" />
      </file>
      <file name="$USER_HOME$/git/web/hma/resources/views/vendor/backpack/base/inc/sidebar.blade.php" timestamp="1517320388785">
        <mark key="[" line="40" column="0" />
        <mark key="]" line="42" column="75" />
        <mark key="." line="59" column="77" />
        <mark key="^" line="59" column="15" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Admin/CategoryCrudController.php" timestamp="1520507210304">
        <mark key="[" line="13" column="0" />
        <mark key="]" line="15" column="6" />
        <mark key="." line="13" column="0" />
        <mark key="^" line="13" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Components/Administration/User/Requests/CreateUserRequest.php" timestamp="1521479336232">
        <mark key="[" line="32" column="35" />
        <mark key="]" line="32" column="11" />
        <mark key="^" line="32" column="11" />
        <mark key="." line="32" column="11" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Http/Requests/CompanyRequest.php" timestamp="1516613007893">
        <mark key="[" line="27" column="0" />
        <mark key="]" line="27" column="0" />
        <mark key="." line="27" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Http/Requests/JumpinRequest.php" timestamp="1521538070081">
        <mark key="[" line="29" column="58" />
        <mark key="]" line="52" column="15" />
        <mark key="." line="52" column="15" />
        <mark key="^" line="52" column="15" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/EventTypeSeeder.php" timestamp="1517241943905">
        <mark key="[" line="15" column="45" />
        <mark key="]" line="15" column="45" />
        <mark key="." line="15" column="45" />
        <mark key="^" line="14" column="31" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Models/User.php" timestamp="1517912179201">
        <mark key="[" line="40" column="0" />
        <mark key="]" line="40" column="0" />
        <mark key="." line="40" column="0" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/providers/special-service/special-service.ts" timestamp="1519731269444">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="0" />
      </file>
      <file name="$USER_HOME$/projects/guitab/.eslintignore" timestamp="1521201096345">
        <mark key="[" line="1" column="14" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Services/Backend/Mp3InfoService.php" timestamp="1520519032192">
        <mark key="[" line="4" column="2" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/lang/de/mail.php" timestamp="1521548628621">
        <mark key="[" line="4" column="9" />
        <mark key="]" line="4" column="8" />
        <mark key="^" line="4" column="8" />
        <mark key="." line="4" column="8" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/vendor/tymon/jwt-auth/src/Commands/JWTGenerateCommand.php" timestamp="1521551623818">
        <mark key="[" line="38" column="20" />
        <mark key="]" line="38" column="20" />
        <mark key="." line="38" column="20" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/resources/lang/de/permissionmanager.php" timestamp="1517906440378">
        <mark key="[" line="26" column="32" />
        <mark key="]" line="26" column="40" />
        <mark key="." line="26" column="32" />
        <mark key="^" line="25" column="37" />
      </file>
      <file name="$USER_HOME$/git/app/persofleet.app/src/providers/api.ts" timestamp="1521558990077">
        <mark key="[" line="8" column="42" />
        <mark key="]" line="8" column="42" />
        <mark key="." line="8" column="42" />
      </file>
      <file name="$USER_HOME$/git/web/hma/app/Models/User.php" timestamp="1517236461631">
        <mark key="[" line="97" column="0" />
        <mark key="]" line="97" column="0" />
        <mark key="." line="97" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/storage/logs/laravel.log" timestamp="1521560078547">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/migrations/2018_03_08_154938_create_track_files_table.php" timestamp="1520520610366">
        <mark key="[" line="20" column="28" />
        <mark key="]" line="20" column="28" />
        <mark key="^" line="19" column="34" />
        <mark key="." line="20" column="28" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/factories/JumpinFactory.php" timestamp="1521533614934">
        <mark key="[" line="14" column="34" />
        <mark key="]" line="14" column="15" />
        <mark key="^" line="14" column="15" />
        <mark key="." line="14" column="15" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/app/Models/OpenHour.php" timestamp="1519834182718">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="20" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_122932_create_recurrences_table.php" timestamp="1519817440819">
        <mark key="[" line="19" column="12" />
        <mark key="]" line="19" column="35" />
        <mark key="^" line="18" column="11" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/resources/views/vendor/backpack/base/inc/sidebar.blade.php" timestamp="1518540900935">
        <mark key="[" line="50" column="0" />
        <mark key="]" line="50" column="0" />
        <mark key="^" line="32" column="15" />
        <mark key="." line="50" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Http/Requests/ChangePasswordRequest.php" timestamp="1521105588515">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="28" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/database/factories/ModelFactory.php" timestamp="1520851088582">
        <mark key="[" line="43" column="32" />
        <mark key="]" line="43" column="33" />
        <mark key="." line="43" column="33" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/pages/search/search.ts" timestamp="1519139409864">
        <mark key="[" line="76" column="0" />
        <mark key="]" line="76" column="0" />
        <mark key="." line="76" column="0" />
      </file>
      <file name="$USER_HOME$/projects/guitab/src/renderer/main.js" timestamp="1521206734860">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="11" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/routes/api.php" timestamp="1521557460055">
        <mark key="[" line="13" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/factories/FileTypeFactory.php" timestamp="1517476421643">
        <mark key="[" line="5" column="17" />
        <mark key="]" line="5" column="17" />
        <mark key="." line="5" column="17" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Scopes/CompanyScope.php" timestamp="1521102043153">
        <mark key="[" line="19" column="5" />
        <mark key="]" line="13" column="32" />
        <mark key="." line="13" column="12" />
      </file>
      <file name="$USER_HOME$/git/web/hma/tests/Feature/JobCrudTest.php" timestamp="1516715073033">
        <mark key="[" line="32" column="44" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
        <mark key="^" line="22" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/assets/persoflicons/config.json" timestamp="1521471432946">
        <mark key="[" line="2" column="22" />
        <mark key="]" line="2" column="22" />
        <mark key="." line="2" column="22" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/Http/Controllers/Admin/FileCrudController.php" timestamp="1517911862393">
        <mark key="[" line="40" column="0" />
        <mark key="]" line="40" column="0" />
        <mark key="." line="40" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/database/factories/CategoryFactory.php" timestamp="1520505221478">
        <mark key="[" line="8" column="37" />
        <mark key="]" line="5" column="17" />
        <mark key="." line="5" column="17" />
        <mark key="^" line="4" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/migrations/2018_01_17_134306_create_jobs_table.php" timestamp="1516711153623">
        <mark key="[" line="24" column="0" />
        <mark key="]" line="24" column="0" />
        <mark key="." line="24" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/seeds/JumpinTypeSeeder.php" timestamp="1521543463496">
        <mark key="[" line="18" column="75" />
        <mark key="]" line="22" column="75" />
        <mark key="." line="22" column="37" />
        <mark key="^" line="25" column="7" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Http/Controllers/Api/v1/AuthController.php" timestamp="1521558164472">
        <mark key="[" line="21" column="61" />
        <mark key="]" line="21" column="61" />
        <mark key="." line="21" column="61" />
        <mark key="^" line="23" column="44" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_150914_create_jumpin_dates_table.php" timestamp="1521545210223">
        <mark key="[" line="24" column="73" />
        <mark key="]" line="25" column="77" />
        <mark key="." line="25" column="78" />
        <mark key="^" line="25" column="77" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/lang/de/passwords.php" timestamp="1521108612470">
        <mark key="[" line="10" column="22" />
        <mark key="]" line="10" column="22" />
        <mark key="^" line="5" column="25" />
        <mark key="." line="10" column="22" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Components/Administration/User/Controllers/AccountController.php" timestamp="1521108898351">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/tests/Unit/UserUnitTest.php" timestamp="1519832406827">
        <mark key="[" line="31" column="34" />
        <mark key="]" line="31" column="34" />
        <mark key="." line="31" column="34" />
        <mark key="^" line="31" column="16" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/vendor/fzaninotto/faker/src/Faker/Provider/DateTime.php" timestamp="1517408869754">
        <mark key="[" line="10" column="26" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/resources/views/vendor/backpack/base/inc/sidebar.blade.php" timestamp="1519916897507">
        <mark key="[" line="60" column="51" />
        <mark key="]" line="60" column="52" />
        <mark key="." line="60" column="52" />
        <mark key="^" line="51" column="40" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/resources/views/vendor/backpack/base/inc/sidebar.blade.php" timestamp="1521478670505">
        <mark key="[" line="39" column="48" />
        <mark key="]" line="34" column="25" />
        <mark key="^" line="34" column="25" />
        <mark key="." line="34" column="25" />
      </file>
      <file name="$USER_HOME$/git/web/gsk/database/migrations/2018_01_15_125717_create_user_roles_table.php" timestamp="1516017627385">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="50" column="1" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hma/database/seeds/JobsTableSeeder.php" timestamp="1516702289486">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="14" column="35" />
        <mark key="." line="14" column="9" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/resources/lang/vendor/backpack/de/permissionmanager.php" timestamp="1517906504314">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php" timestamp="1517908908558">
        <mark key="[" line="252" column="0" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/database/seeds/JumpinSeeder.php" timestamp="1521532464954">
        <mark key="[" line="29" column="69" />
        <mark key="]" line="29" column="74" />
        <mark key="." line="29" column="74" />
        <mark key="^" line="29" column="74" />
      </file>
      <file name="$USER_HOME$/git/web/hypno/app/File.php" timestamp="1517833326117">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="41" column="5" />
        <mark key="." line="19" column="0" />
        <mark key="^" line="14" column="3" />
      </file>
      <file name="$USER_HOME$/git/web/jumpin/routes/admin.php" timestamp="1519902782837">
        <mark key="[" line="19" column="40" />
        <mark key="]" line="19" column="53" />
        <mark key="^" line="17" column="0" />
        <mark key="." line="19" column="0" />
      </file>
      <file name="$USER_HOME$/projects/guitab/src/renderer/store/index.js" timestamp="1521206686297">
        <mark key="[" line="7" column="40" />
        <mark key="]" line="7" column="33" />
        <mark key="." line="7" column="33" />
        <mark key="^" line="7" column="25" />
      </file>
      <file name="$USER_HOME$/git/web/persofleet/app/Http/Controllers/Employee/Auth/ForgotPasswordController.php" timestamp="1521550861816">
        <mark key="[" line="40" column="33" />
        <mark key="]" line="40" column="42" />
        <mark key="." line="40" column="42" />
        <mark key="^" line="40" column="42" />
      </file>
      <file name="$USER_HOME$/git/app/jumpin/src/models/category.ts" timestamp="1519721785312">
        <mark key="[" line="6" column="23" />
        <mark key="]" line="2" column="19" />
        <mark key="^" line="2" column="19" />
        <mark key="." line="2" column="19" />
      </file>
    </filemarks>
    <jumps>
      <jump line="0" column="0" filename="$USER_HOME$/git/app/jumpin/config.xml" />
      <jump line="78" column="8" filename="$USER_HOME$/git/app/foodahoo/config.xml" />
      <jump line="52" column="40" filename="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Admin/LocationCrudController.php" />
      <jump line="5" column="8" filename="$USER_HOME$/git/web/jumpin/tests/Unit/JumpinUnitTest.php" />
      <jump line="5" column="0" filename="$USER_HOME$/git/web/jumpin/database/migrations/2018_02_28_165722_create_open_hours_table.php" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/jumpin/app/Models/Hour.php" />
      <jump line="103" column="0" filename="$USER_HOME$/git/web/foodahoo/app/Http/Controllers/Admin/MarketCrudController.php" />
      <jump line="22" column="0" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinTypeCrudTest.php" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/jumpin/database/factories/JumpinTypeFactory.php" />
      <jump line="23" column="13" filename="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Admin/JumpinTypeCrudController.php" />
      <jump line="150" column="8" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="179" column="0" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="223" column="34" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="18" column="18" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="52" column="46" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="76" column="9" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="95" column="9" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="115" column="8" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="140" column="34" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="175" column="16" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="173" column="23" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="40" column="88" filename="$USER_HOME$/git/web/persofleet/app/Models/Modules/Module.php" />
      <jump line="24" column="51" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinTypeCrudTest.php" />
      <jump line="25" column="8" filename="$USER_HOME$/git/app/jumpin/config.xml" />
      <jump line="102" column="35" filename="$USER_HOME$/git/app/jumpin/config.xml" />
      <jump line="63" column="40" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="56" column="37" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="54" column="20" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="117" column="26" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="71" column="31" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="77" column="0" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="111" column="29" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="26" column="19" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="45" column="13" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="115" column="26" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="32" column="19" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="124" column="9" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="102" column="43" filename="$USER_HOME$/git/app/guardian/package.json" />
      <jump line="177" column="18" filename="$USER_HOME$/git/web/hypno/vendor/fzaninotto/faker/src/Faker/Generator.php" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/hypno/app/Http/Controllers/Admin/TrackCrudController.php" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/persofleet/app/Models/Company/Subdomain.php" />
      <jump line="115" column="19" filename="$USER_HOME$/git/web/guardian/app/Http/Controllers/Api/v1/AuthController.php" />
      <jump line="85" column="35" filename="$USER_HOME$/git/web/guardian/app/Http/Controllers/Api/v1/AuthController.php" />
      <jump line="42" column="0" filename="$USER_HOME$/git/web/guardian/app/Http/Controllers/Api/v1/UserController.php" />
      <jump line="160" column="4" filename="$USER_HOME$/git/web/persofleet/app/Models/Company/Company.php" />
      <jump line="33" column="89" filename="$USER_HOME$/git/web/persofleet/app/Models/Company/Company.php" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/persofleet/app/Http/Controllers/Api/v1/AuthController.php" />
      <jump line="29" column="6" filename="$USER_HOME$/git/web/persofleet/app/Models/Company/Subdomain.php" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/persofleet/resources/views/vendor/backpack/base/inc/sidebar.blade.php" />
      <jump line="41" column="15" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/User/Requests/ChangePasswordRequest.php" />
      <jump line="6" column="0" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/User/Requests/ChangePasswordRequest.php" />
      <jump line="65" column="23" filename="$USER_HOME$/git/web/persofleet/vendor/laravel/framework/src/Illuminate/Foundation/Http/FormRequest.php" />
      <jump line="45" column="51" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/User/Requests/ChangePasswordRequest.php" />
      <jump line="193" column="7" filename="$USER_HOME$/git/web/persofleet/app/Components/Modules/Controllers/ModuleCrudController.php" />
      <jump line="29" column="15" filename="$USER_HOME$/git/web/persofleet/resources/assets/js/icon-picker/persoflicon.js" />
      <jump line="28" column="14" filename="$USER_HOME$/git/web/persofleet/resources/assets/js/icon-picker/persoflicon.js" />
      <jump line="2" column="42" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="3" column="32" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="10" column="11" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="30" column="27" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="28" column="0" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="125" column="4" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="13" column="0" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="15" column="3" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="137" column="2" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="119" column="21" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="126" column="15" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="142" column="40" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="163" column="3" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="74" column="12" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="36" column="11" filename="$USER_HOME$/projects/guitab/.electron-vue/webpack.renderer.config.js" />
      <jump line="33" column="0" filename="$USER_HOME$/projects/guitab/src/renderer/main.js" />
      <jump line="32" column="0" filename="$USER_HOME$/projects/guitab/src/renderer/main.js" />
      <jump line="13507" column="20" filename="$USER_HOME$/projects/guitab/package-lock.json" />
      <jump line="4" column="19" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="41" column="18" filename="$USER_HOME$/projects/guitab/src/renderer/components/MainGrid.vue" />
      <jump line="42" column="0" filename="$USER_HOME$/projects/guitab/src/renderer/components/LandingPage.vue" />
      <jump line="8" column="0" filename="$USER_HOME$/git/web/jumpin/app/Http/Requests/AppUserRequest.php" />
      <jump line="35" column="18" filename="$USER_HOME$/git/web/jumpin/app/Http/Controllers/Api/v1/AuthController.php" />
      <jump line="1" column="0" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinTypeCrudTest.php" />
      <jump line="64" column="4" filename="$USER_HOME$/git/web/jumpin/tests/Unit/JumpinUnitTest.php" />
      <jump line="72" column="8" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="4" column="0" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="46" column="0" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="66" column="12" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="38" column="17" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="85" column="38" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="68" column="21" filename="$USER_HOME$/git/web/jumpin/tests/Crud/JumpinCrudTest.php" />
      <jump line="29" column="4" filename="$USER_HOME$/git/web/jumpin/app/Models/LocationType.php" />
      <jump line="77" column="0" filename="$USER_HOME$/git/web/jumpin/app/Models/User.php" />
      <jump line="86" column="0" filename="$USER_HOME$/git/web/jumpin/app/Models/User.php" />
      <jump line="31" column="0" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/Company/Controllers/CompanyCrudController.php" />
      <jump line="179" column="35" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/Company/Controllers/CompanyCrudController.php" />
      <jump line="180" column="24" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/Company/Controllers/CompanyCrudController.php" />
      <jump line="167" column="30" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/Company/Controllers/CompanyCrudController.php" />
      <jump line="178" column="35" filename="$USER_HOME$/git/web/persofleet/app/Components/Administration/Company/Controllers/CompanyCrudController.php" />
      <jump line="44" column="44" filename="$USER_HOME$/git/web/jumpin/tests/Unit/JumpinUnitTest.php" />
      <jump line="320" column="0" filename="$USER_HOME$/git/web/persofleet/storage/logs/laravel.log" />
      <jump line="4207" column="0" filename="$USER_HOME$/git/web/persofleet/storage/logs/laravel.log" />
      <jump line="0" column="0" filename="$USER_HOME$/git/web/persofleet/storage/logs/laravel.log" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="-" type="4">
        <text encoding="base64">IA==</text>
      </register>
      <register name="/" type="4">
        <text>eager</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICBpZiAoZmlsdGVyX3ZhcigkY3JlZGVudGlhbHNbJ2lkZW50aWZpZXInXSwgRklMVEVSX1ZBTElEQVRFX0VNQUlMKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgJGNyZWRlbnRpYWxzWydlbWFpbCddID0gJGNyZWRlbnRpYWxzWydpZGVudGlmaWVyJ107CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJGNyZWRlbnRpYWxzWyduYW1lJ10gPSAkY3JlZGVudGlhbHNbJ2lkZW50aWZpZXInXTsKICAgICAgICB9CiAgICAgICAgdW5zZXQoJGNyZWRlbnRpYWxzWydpZGVudGlmaWVyJ10pOwo=</text>
      </register>
      <register name="1" type="4">
        <text encoding="base64">WzIwMTgtMDMtMTUgMTI6MjI6MDZdIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8NzUyYzkwOTdiNDU3NThmY2QzNWJmZGE0MGYyNGNiMGFAcGVyc29mbGVldC50ZXN0PgpEYXRlOiBUaHUsIDE1IE1hciAyMDE4IDEyOjIyOjA2ICswMTAwClN1YmplY3Q6IENvbnRhY3QgU2VuZApGcm9tOiBQZXJzb0ZsZWV0IDxpbmZvQHBlcnNvZmxlZXQuZGU+ClRvOiBzaW1vbmx1ZHdpZ0BsaXZlLmRlCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjExMTI5MjZfYTgyY2IxM2JlMDg4MmY4NGE4NDYyNDM2NzQxYTQ0MGFfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Lb250YWt0YXVmbmFobWU8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5EZXIgQmVudXR6ZXIgc2x1ZHdpZyBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+YXdkYXdkPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5hd2Rhd2QyPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5XZWl0ZXJlIEluZm9ybWF0aW9uZW46PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5FbWFpbDogPGEgaHJlZj0ibWFpbHRvOnNpbW9uLmx1ZHdpZ0B3ZWJmYWN0b3IuZGUiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+c2ltb24ubHVkd2lnQHdlYmZhY3Rvci5kZTwvYT48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlRlbGVmb246IDEtNjQzLTU3Ny0yMzk3PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5GaXJtYTogR2l3ZHVsIFNvbHV0aW9uczwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgojIEtvbnRha3RhdWZuYWhtZQoKRGVyIEJlbnV0emVyIHNsdWR3aWcgaGF0IGZvbGdlbmRlcyBnZXNjaHJpZWJlbjoKCmF3ZGF3ZAoKYXdkYXdkMgoKV2VpdGVyZSBJbmZvcm1hdGlvbmVuOgoKRW1haWw6IDxzaW1vbi5sdWR3aWdAd2ViZmFjdG9yLmRlPgoKVGVsZWZvbjogMS02NDMtNTc3LTIzOTcgIApbMjAxOC0wMy0xOSAxODowNDo0NF0gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDwzY2VkYzYwMzFhNGQ1ZTQ2MmI2OWI5MDY2YWUwY2UwYUBwZXJzb2ZsZWV0LnRlc3Q+CkRhdGU6IE1vbiwgMTkgTWFyIDIwMTggMTg6MDQ6NDQgKzAxMDAKU3ViamVjdDogQ3JlYXRlZApGcm9tOiBzdXBwb3J0QHBlcnNvZmxlZXQuZGUKVG86IG1hdXJpY2Uuc3dpbW1Ad2ViZmFjdG9yLmRlCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE0NzkwODRfOGRlZTE4YWE4YzM2YTM5NWU5M2NkM2JkNTdkMDZlZWVfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5FaW4gbmV1ZXIgTnV0emVyIHd1cmRlIGFuZ2VsZWd0LjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+TnV0emVybmFtZTo8L3N0cm9uZz4gdHVzZXI8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPlBhc3N3b3J0Ojwvc3Ryb25nPiByNHhWTHU3NUZuPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCltQZXJzb0ZsZWV0XShodHRwOi8vcGVyc29mbGVldC50ZXN0KQoKRWluIG5ldWVyIE51dHplciB3dXJkZSBhbmdlbGVndC4KCioqTnV0emVybmFtZToqKiB0dXNlcgoKKipQYXNzd29ydDoqKiByNHhWTHU3NUZuCgrCqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgClsyMDE4LTAzLTE5IDE4OjA2OjI1XSBsb2NhbC5ERUJVRzogTWVzc2FnZS1JRDogPDczNGE3YzIyNjc1NjM0NGQ2N2FiMDU3YjA2MGY3NTdmQHBlcnNvZmxlZXQudGVzdD4KRGF0ZTogTW9uLCAxOSBNYXIgMjAxOCAxODowNjoyNSArMDEwMApTdWJqZWN0OiBDcmVhdGVkCkZyb206IHN1cHBvcnRAcGVyc29mbGVldC5kZQpUbzogbWF1cmljZS5zd2ltbUB3ZWJmYWN0b3IuZGUKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvYWx0ZXJuYXRpdmU7CiBib3VuZGFyeT0iXz1fc3dpZnRfMTUyMTQ3OTE4NV9kY2M2MTU0NTQ2MjI4NzI4N2EwYjgzYjAwZjQ0NDZlZF89XyIKCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFRyYW5zaXRpb25hbC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgo8aGVhZD4KPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0YyRjRGNjsgY29sb3I6ICM3NDc4N0U7IGhlaWdodDogMTAwJTsgbGluZS1oZWlnaHQ6IDEuNDsgbWFyZ2luOiAwOyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7Ij4KPHN0eWxlPgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgICAuaW5uZXItYm9keSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQoKICAgICAgICAuZm9vdGVyIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9CgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsKICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9Cjwvc3R5bGU+Cjx0YWJsZSBjbGFzcz0id3JhcHBlciIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjhmYTsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJjb250ZW50IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+Cjx0cj4KPHRkIGNsYXNzPSJoZWFkZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDI1cHggMDsgdGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL3BlcnNvZmxlZXQudGVzdCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICNiYmJmYzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgdGV4dC1zaGFkb3c6IDAgMXB4IDAgd2hpdGU7Ij4KICAgICAgICAgICAgUGVyc29GbGVldAogICAgICAgIDwvYT4KICAgIDwvdGQ+CjwvdHI+CjwhLS0gRW1haWwgQm9keSAtLT48dHI+Cjx0ZCBjbGFzcz0iYm9keSIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFREVGRjI7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iaW5uZXItYm9keSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPgo8IS0tIEJvZHkgY29udGVudCAtLT48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkVpbiBuZXVlciBOdXR6ZXIgd3VyZGUgYW5nZWxlZ3QuPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij48c3Ryb25nIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij5OdXR6ZXJuYW1lOjwvc3Ryb25nPiBhYXdkPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij48c3Ryb25nIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij5QYXNzd29ydDo8L3N0cm9uZz4gKU9keVkkbXJncTwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgpbUGVyc29GbGVldF0oaHR0cDovL3BlcnNvZmxlZXQudGVzdCkKCkVpbiBuZXVlciBOdXR6ZXIgd3VyZGUgYW5nZWxlZ3QuCgoqKk51dHplcm5hbWU6KiogYWF3ZAoKKipQYXNzd29ydDoqKiApT2R5WSRtcmdxCgrCqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgClsyMDE4LTAzLTIwIDEzOjIzOjM5XSBsb2NhbC5ERUJVRzogTWVzc2FnZS1JRDogPGMzYTYyNjNkYmNhODllNjY1NmYwNTA5NTdmZmFmOTc0QHBlcnNvZmxlZXQudGVzdD4KRGF0ZTogVHVlLCAyMCBNYXIgMjAxOCAxMzoyMzozOSArMDEwMApTdWJqZWN0OiBOZXVlciBOdXR6ZXIgYW5nZWxlZ3QKRnJvbTogc3VwcG9ydEBwZXJzb2ZsZWV0LmRlClRvOiBtYXVyaWNlLnN3aW1tQHdlYmZhY3Rvci5kZQpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsKIGJvdW5kYXJ5PSJfPV9zd2lmdF8xNTIxNTQ4NjE5XzMxYzA5MTMwZWYzZTYxZTc0YmRhZmU1M2FmYmEyNmE0Xz1fIgoKPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CjxoZWFkPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGNEY2OyBjb2xvcjogIzc0Nzg3RTsgaGVpZ2h0OiAxMDAlOyBsaW5lLWhlaWdodDogMS40OyBtYXJnaW46IDA7IHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsiPgo8c3R5bGU+CiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgICAgIC5pbm5lci1ib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CgogICAgICAgIC5mb290ZXIgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KCiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICAgICAgIC5idXR0b24gewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KPC9zdHlsZT4KPHRhYmxlIGNsYXNzPSJ3cmFwcGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmOGZhOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNvbnRlbnQiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KPHRyPgo8dGQgY2xhc3M9ImhlYWRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMjVweCAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICA8YSBocmVmPSJodHRwOi8vcGVyc29mbGVldC50ZXN0IiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogI2JiYmZjMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsiPgogICAgICAgICAgICBQZXJzb0ZsZWV0CiAgICAgICAgPC9hPgogICAgPC90ZD4KPC90cj4KPCEtLSBFbWFpbCBCb2R5IC0tPjx0cj4KPHRkIGNsYXNzPSJib2R5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0VERUZGMjsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNFREVGRjI7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJpbm5lci1ib2R5IiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+CjwhLS0gQm9keSBjb250ZW50IC0tPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+RWluIG5ldWVyIE51dHplciB3dXJkZSBhbmdlbGVndC48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPjxzdHJvbmcgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPk51dHplcm5hbWU6PC9zdHJvbmc+IHRvbWF0ZTwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+PHN0cm9uZyBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+UGFzc3dvcnQ6PC9zdHJvbmc+IHY3OUBqNG5yS1A8L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgpbUGVyc29GbGVldF0oaHR0cDovL3BlcnNvZmxlZXQudGVzdCkKCkVpbiBuZXVlciBOdXR6ZXIgd3VyZGUgYW5nZWxlZ3QuCgoqKk51dHplcm5hbWU6KiogdG9tYXRlCgoqKlBhc3N3b3J0OioqIHY3OUBqNG5yS1AKCsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICAKWzIwMTgtMDMtMjAgMTM6MzU6NDJdIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8MDJiNzhjOTVmMjk4OGNlMWE5ZmQzNjBhM2RmNWE2ZWFAcGVyc29mbGVldC50ZXN0PgpEYXRlOiBUdWUsIDIwIE1hciAyMDE4IDEzOjM1OjQyICswMTAwClN1YmplY3Q6IFJlc2V0IFBhc3N3b3JkIE5vdGlmaWNhdGlvbgpGcm9tOiBQZXJzb0ZsZWV0IDxpbmZvQHBlcnNvZmxlZXQuZGU+ClRvOiBvbGl2ZXIuemllZ2xlckB3ZWJmYWN0b3IuZGUKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvYWx0ZXJuYXRpdmU7CiBib3VuZGFyeT0iXz1fc3dpZnRfMTUyMTU0OTM0Ml8xNGRjNjVmYzQ5OWRkOGM0ZjQ3ZWJhYzllN2RiMjBkNl89XyIKCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFRyYW5zaXRpb25hbC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgo8aGVhZD4KPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0YyRjRGNjsgY29sb3I6ICM3NDc4N0U7IGhlaWdodDogMTAwJTsgbGluZS1oZWlnaHQ6IDEuNDsgbWFyZ2luOiAwOyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7Ij4KPHN0eWxlPgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgICAuaW5uZXItYm9keSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQoKICAgICAgICAuZm9vdGVyIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9CgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsKICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9Cjwvc3R5bGU+Cjx0YWJsZSBjbGFzcz0id3JhcHBlciIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjhmYTsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJjb250ZW50IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+Cjx0cj4KPHRkIGNsYXNzPSJoZWFkZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDI1cHggMDsgdGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL3BlcnNvZmxlZXQudGVzdCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICNiYmJmYzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgdGV4dC1zaGFkb3c6IDAgMXB4IDAgd2hpdGU7Ij4KICAgICAgICAgICAgUGVyc29GbGVldAogICAgICAgIDwvYT4KICAgIDwvdGQ+CjwvdHI+CjwhLS0gRW1haWwgQm9keSAtLT48dHI+Cjx0ZCBjbGFzcz0iYm9keSIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFREVGRjI7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iaW5uZXItYm9keSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPgo8IS0tIEJvZHkgY29udGVudCAtLT48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzJGMzEzMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkhlbGxvITwvaDE+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPllvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4gQ2xpY2sgdGhlIGJ1dHRvbiBiZWxvdyB0byByZXNldCB5b3VyIHBhc3N3b3JkOjwvcD4KPHRhYmxlIGNsYXNzPSJhY3Rpb24iIGFsaWduPSJjZW50ZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMzBweCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij48dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzFiMmY5MGFmNzc2MTQ5ODBhZjdlNDk4ODFmMGI0MzA3ZTliODdlNDBiODkxYTQ4ZTM5MjU4OTllMWZhODIxMjUiIGNsYXNzPSJidXR0b24gYnV0dG9uLWJsdWUiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXItcmFkaXVzOiAzcHg7IGJveC1zaGFkb3c6IDAgMnB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTYpOyBjb2xvcjogI0ZGRjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsgYmFja2dyb3VuZC1jb2xvcjogIzMwOTdEMTsgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAjMzA5N0QxOyBib3JkZXItcmlnaHQ6IDE4cHggc29saWQgIzMwOTdEMTsgYm9yZGVyLWJvdHRvbTogMTBweCBzb2xpZCAjMzA5N0QxOyBib3JkZXItbGVmdDogMThweCBzb2xpZCAjMzA5N0QxOyI+UmVzZXQgUGFzc3dvcmQ8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+SWYgeW91IGRpZCBub3QgcmVxdWVzdCBhIHBhc3N3b3JkIHJlc2V0LCBubyBmdXJ0aGVyIGFjdGlvbiBpcyByZXF1aXJlZC48L3A+CjwhLS0gU2FsdXRhdGlvbiAtLT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+UmVnYXJkcyw8YnI+UGVyc29GbGVldDwvcD4KPCEtLSBTdWJjb3B5IC0tPgo8dGFibGUgY2xhc3M9InN1YmNvcHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW4tdG9wOiAyNXB4OyBwYWRkaW5nLXRvcDogMjVweDsiPjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsgZm9udC1zaXplOiAxMnB4OyI+SWYgeW914oCZcmUgaGF2aW5nIHRyb3VibGUgY2xpY2tpbmcgdGhlICJSZXNldCBQYXNzd29yZCIgYnV0dG9uLCBjb3B5IGFuZCBwYXN0ZSB0aGUgVVJMIGJlbG93CmludG8geW91ciB3ZWIgYnJvd3NlcjogPGEgaHJlZj0iaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMWIyZjkwYWY3NzYxNDk4MGFmN2U0OTg4MWYwYjQzMDdlOWI4N2U0MGI4OTFhNDhlMzkyNTg5OWUxZmE4MjEyNSIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMzODY5RDQ7Ij48L2E+PGEgaHJlZj0iaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMWIyZjkwYWY3NzYxNDk4MGFmN2U0OTg4MWYwYjQzMDdlOWI4N2U0MGI4OTFhNDhlMzkyNTg5OWUxZmE4MjEyNSIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMzODY5RDQ7Ij5odHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8xYjJmOTBhZjc3NjE0OTgwYWY3ZTQ5ODgxZjBiNDMwN2U5Yjg3ZTQwYjg5MWE0OGUzOTI1ODk5ZTFmYTgyMTI1PC9hPjwvcD4KICAgICAgICA8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KPC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICA8dGFibGUgY2xhc3M9ImZvb3RlciIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgY29sb3I6ICNBRUFFQUU7IGZvbnQtc2l6ZTogMTJweDsgdGV4dC1hbGlnbjogY2VudGVyOyI+wqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLjwvcD4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KPC90cj4KPC90YWJsZT4KPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC9ib2R5Pgo8L2h0bWw+CgpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLTgKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogcXVvdGVkLXByaW50YWJsZQoKW1BlcnNvRmxlZXRdKGh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QpCgojIEhlbGxvIQoKWW91IGFyZSByZWNlaXZpbmcgdGhpcyBlbWFpbCBiZWNhdXNlIHdlIHJlY2VpdmVkIGEgcGFzc3dvcmQgcmVzZXQgcmVxdWVzdCBmb3IgeW91ciBhY2NvdW50LiBDbGljayB0aGUgYnV0dG9uIGJlbG93IHRvIHJlc2V0IHlvdXIgcGFzc3dvcmQ6CgpSZXNldCBQYXNzd29yZDogaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMWIyZjkwYWY3NzYxNDk4MGFmN2U0OTg4MWYwYjQzMDdlOWI4N2U0MGI4OTFhNDhlMzkyNTg5OWUxZmE4MjEyNQoKSWYgeW91IGRpZCBub3QgcmVxdWVzdCBhIHBhc3N3b3JkIHJlc2V0LCBubyBmdXJ0aGVyIGFjdGlvbiBpcyByZXF1aXJlZC4KClJlZ2FyZHMsUGVyc29GbGVldAoKSWYgeW914oCZcmUgaGF2aW5nIHRyb3VibGUgY2xpY2tpbmcgdGhlICJSZXNldCBQYXNzd29yZCIgYnV0dG9uLCBjb3B5IGFuZCBwYXN0ZSB0aGUgVVJMIGJlbG93CmludG8geW91ciB3ZWIgYnJvd3NlcjogW2h0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzFiMmY5MGFmNzc2MTQ5ODBhZjdlNDk4ODFmMGI0MzA3ZTliODdlNDBiODkxYTQ4ZTM5MjU4OTllMWZhODIxMjVdKGh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzFiMmY5MGFmNzc2MTQ5ODBhZjdlNDk4ODFmMGI0MzA3ZTliODdlNDBiODkxYTQ4ZTM5MjU4OTllMWZhODIxMjUpCgrCqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgClsyMDE4LTAzLTIwIDEzOjM2OjI5XSBsb2NhbC5ERUJVRzogTWVzc2FnZS1JRDogPDA3YWMxMDFhMDkzZTcwMjIzMTQzZTc0MzkxNDBjNGYxQHBlcnNvZmxlZXQudGVzdD4KRGF0ZTogVHVlLCAyMCBNYXIgMjAxOCAxMzozNjoyOSArMDEwMApTdWJqZWN0OiBSZXNldCBQYXNzd29yZCBOb3RpZmljYXRpb24KRnJvbTogUGVyc29GbGVldCA8aW5mb0BwZXJzb2ZsZWV0LmRlPgpUbzogYmVyZ2hhZXVzZXJAcGVyc29mbGVldC5kZQpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsKIGJvdW5kYXJ5PSJfPV9zd2lmdF8xNTIxNTQ5Mzg5XzE3YmI5ZWNlMWU5NDQyZjRhYzU1N2RkMzA4NzkwYjhjXz1fIgoKPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CjxoZWFkPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGNEY2OyBjb2xvcjogIzc0Nzg3RTsgaGVpZ2h0OiAxMDAlOyBsaW5lLWhlaWdodDogMS40OyBtYXJnaW46IDA7IHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsiPgo8c3R5bGU+CiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgICAgIC5pbm5lci1ib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CgogICAgICAgIC5mb290ZXIgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KCiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICAgICAgIC5idXR0b24gewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KPC9zdHlsZT4KPHRhYmxlIGNsYXNzPSJ3cmFwcGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmOGZhOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNvbnRlbnQiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KPHRyPgo8dGQgY2xhc3M9ImhlYWRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMjVweCAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICA8YSBocmVmPSJodHRwOi8vcGVyc29mbGVldC50ZXN0IiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogI2JiYmZjMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsiPgogICAgICAgICAgICBQZXJzb0ZsZWV0CiAgICAgICAgPC9hPgogICAgPC90ZD4KPC90cj4KPCEtLSBFbWFpbCBCb2R5IC0tPjx0cj4KPHRkIGNsYXNzPSJib2R5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0VERUZGMjsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNFREVGRjI7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJpbm5lci1ib2R5IiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+CjwhLS0gQm9keSBjb250ZW50IC0tPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMkYzMTMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+SGVsbG8hPC9oMT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+WW91IGFyZSByZWNlaXZpbmcgdGhpcyBlbWFpbCBiZWNhdXNlIHdlIHJlY2VpdmVkIGEgcGFzc3dvcmQgcmVzZXQgcmVxdWVzdCBmb3IgeW91ciBhY2NvdW50LiBDbGljayB0aGUgYnV0dG9uIGJlbG93IHRvIHJlc2V0IHlvdXIgcGFzc3dvcmQ6PC9wPgo8dGFibGUgY2xhc3M9ImFjdGlvbiIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAzMHB4IGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMTUwODgwOWVlMzZjMDg0NTdjNjk0ZTNkNWYzNTNhZDgzODBkZGY2YTNhM2FjYmNiYzJjOGYzNjcxMzdkMjdiZSIgY2xhc3M9ImJ1dHRvbiBidXR0b24tYmx1ZSIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJvcmRlci1yYWRpdXM6IDNweDsgYm94LXNoYWRvdzogMCAycHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNik7IGNvbG9yOiAjRkZGOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyBiYWNrZ3JvdW5kLWNvbG9yOiAjMzA5N0QxOyBib3JkZXItdG9wOiAxMHB4IHNvbGlkICMzMDk3RDE7IGJvcmRlci1yaWdodDogMThweCBzb2xpZCAjMzA5N0QxOyBib3JkZXItYm90dG9tOiAxMHB4IHNvbGlkICMzMDk3RDE7IGJvcmRlci1sZWZ0OiAxOHB4IHNvbGlkICMzMDk3RDE7Ij5SZXNldCBQYXNzd29yZDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5JZiB5b3UgZGlkIG5vdCByZXF1ZXN0IGEgcGFzc3dvcmQgcmVzZXQsIG5vIGZ1cnRoZXIgYWN0aW9uIGlzIHJlcXVpcmVkLjwvcD4KPCEtLSBTYWx1dGF0aW9uIC0tPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5SZWdhcmRzLDxicj5QZXJzb0ZsZWV0PC9wPgo8IS0tIFN1YmNvcHkgLS0+Cjx0YWJsZSBjbGFzcz0ic3ViY29weSIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNFREVGRjI7IG1hcmdpbi10b3A6IDI1cHg7IHBhZGRpbmctdG9wOiAyNXB4OyI+PHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyBmb250LXNpemU6IDEycHg7Ij5JZiB5b3XigJlyZSBoYXZpbmcgdHJvdWJsZSBjbGlja2luZyB0aGUgIlJlc2V0IFBhc3N3b3JkIiBidXR0b24sIGNvcHkgYW5kIHBhc3RlIHRoZSBVUkwgYmVsb3cKaW50byB5b3VyIHdlYiBicm93c2VyOiA8YSBocmVmPSJodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8xNTA4ODA5ZWUzNmMwODQ1N2M2OTRlM2Q1ZjM1M2FkODM4MGRkZjZhM2EzYWNiY2JjMmM4ZjM2NzEzN2QyN2JlIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzM4NjlENDsiPjwvYT48YSBocmVmPSJodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8xNTA4ODA5ZWUzNmMwODQ1N2M2OTRlM2Q1ZjM1M2FkODM4MGRkZjZhM2EzYWNiY2JjMmM4ZjM2NzEzN2QyN2JlIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzM4NjlENDsiPmh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzE1MDg4MDllZTM2YzA4NDU3YzY5NGUzZDVmMzUzYWQ4MzgwZGRmNmEzYTNhY2JjYmMyYzhmMzY3MTM3ZDI3YmU8L2E+PC9wPgogICAgICAgIDwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgpbUGVyc29GbGVldF0oaHR0cDovL3BlcnNvZmxlZXQudGVzdCkKCiMgSGVsbG8hCgpZb3UgYXJlIHJlY2VpdmluZyB0aGlzIGVtYWlsIGJlY2F1c2Ugd2UgcmVjZWl2ZWQgYSBwYXNzd29yZCByZXNldCByZXF1ZXN0IGZvciB5b3VyIGFjY291bnQuIENsaWNrIHRoZSBidXR0b24gYmVsb3cgdG8gcmVzZXQgeW91ciBwYXNzd29yZDoKClJlc2V0IFBhc3N3b3JkOiBodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8xNTA4ODA5ZWUzNmMwODQ1N2M2OTRlM2Q1ZjM1M2FkODM4MGRkZjZhM2EzYWNiY2JjMmM4ZjM2NzEzN2QyN2JlCgpJZiB5b3UgZGlkIG5vdCByZXF1ZXN0IGEgcGFzc3dvcmQgcmVzZXQsIG5vIGZ1cnRoZXIgYWN0aW9uIGlzIHJlcXVpcmVkLgoKUmVnYXJkcyxQZXJzb0ZsZWV0CgpJZiB5b3XigJlyZSBoYXZpbmcgdHJvdWJsZSBjbGlja2luZyB0aGUgIlJlc2V0IFBhc3N3b3JkIiBidXR0b24sIGNvcHkgYW5kIHBhc3RlIHRoZSBVUkwgYmVsb3cKaW50byB5b3VyIHdlYiBicm93c2VyOiBbaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMTUwODgwOWVlMzZjMDg0NTdjNjk0ZTNkNWYzNTNhZDgzODBkZGY2YTNhM2FjYmNiYzJjOGYzNjcxMzdkMjdiZV0oaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMTUwODgwOWVlMzZjMDg0NTdjNjk0ZTNkNWYzNTNhZDgzODBkZGY2YTNhM2FjYmNiYzJjOGYzNjcxMzdkMjdiZSkKCsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICAKWzIwMTgtMDMtMjAgMTM6MzY6MzddIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8OWU5MmExMTY4NDAyOTdmZGU5MDc1MmI3ZGM1YzA1NjZAcGVyc29mbGVldC50ZXN0PgpEYXRlOiBUdWUsIDIwIE1hciAyMDE4IDEzOjM2OjM3ICswMTAwClN1YmplY3Q6IFJlc2V0IFBhc3N3b3JkIE5vdGlmaWNhdGlvbgpGcm9tOiBQZXJzb0ZsZWV0IDxpbmZvQHBlcnNvZmxlZXQuZGU+ClRvOiBrcmlzdGluQGJld3Vzc3Rlc3Nlbi5pbmZvCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NDkzOTdfNGRlMzU5ODliNjMwMjEzNDJiYzgxNGEyNDU5NTllNzJfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5IZWxsbyE8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Zb3UgYXJlIHJlY2VpdmluZyB0aGlzIGVtYWlsIGJlY2F1c2Ugd2UgcmVjZWl2ZWQgYSBwYXNzd29yZCByZXNldCByZXF1ZXN0IGZvciB5b3VyIGFjY291bnQuIENsaWNrIHRoZSBidXR0b24gYmVsb3cgdG8gcmVzZXQgeW91ciBwYXNzd29yZDo8L3A+Cjx0YWJsZSBjbGFzcz0iYWN0aW9uIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDMwcHggYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+PHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC83MDBjYmE4YTZmZmRjOThiOWM4ODhhNTNjNzFhNTU5NjUxNmFlMGRlYjFkNTNmMjBmZGQ5NjQwY2RhMzIwNjIzIiBjbGFzcz0iYnV0dG9uIGJ1dHRvbi1ibHVlIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyLXJhZGl1czogM3B4OyBib3gtc2hhZG93OiAwIDJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE2KTsgY29sb3I6ICNGRkY7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGJhY2tncm91bmQtY29sb3I6ICMzMDk3RDE7IGJvcmRlci10b3A6IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLXJpZ2h0OiAxOHB4IHNvbGlkICMzMDk3RDE7IGJvcmRlci1ib3R0b206IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLWxlZnQ6IDE4cHggc29saWQgIzMwOTdEMTsiPlJlc2V0IFBhc3N3b3JkPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuPC9wPgo8IS0tIFNhbHV0YXRpb24gLS0+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlJlZ2FyZHMsPGJyPlBlcnNvRmxlZXQ8L3A+CjwhLS0gU3ViY29weSAtLT4KPHRhYmxlIGNsYXNzPSJzdWJjb3B5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luLXRvcDogMjVweDsgcGFkZGluZy10b3A6IDI1cHg7Ij48dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7IGZvbnQtc2l6ZTogMTJweDsiPklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IDxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzcwMGNiYThhNmZmZGM5OGI5Yzg4OGE1M2M3MWE1NTk2NTE2YWUwZGViMWQ1M2YyMGZkZDk2NDBjZGEzMjA2MjMiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzcwMGNiYThhNmZmZGM5OGI5Yzg4OGE1M2M3MWE1NTk2NTE2YWUwZGViMWQ1M2YyMGZkZDk2NDBjZGEzMjA2MjMiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+aHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvNzAwY2JhOGE2ZmZkYzk4YjljODg4YTUzYzcxYTU1OTY1MTZhZTBkZWIxZDUzZjIwZmRkOTY0MGNkYTMyMDYyMzwvYT48L3A+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCltQZXJzb0ZsZWV0XShodHRwOi8vcGVyc29mbGVldC50ZXN0KQoKIyBIZWxsbyEKCllvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4gQ2xpY2sgdGhlIGJ1dHRvbiBiZWxvdyB0byByZXNldCB5b3VyIHBhc3N3b3JkOgoKUmVzZXQgUGFzc3dvcmQ6IGh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzcwMGNiYThhNmZmZGM5OGI5Yzg4OGE1M2M3MWE1NTk2NTE2YWUwZGViMWQ1M2YyMGZkZDk2NDBjZGEzMjA2MjMKCklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuCgpSZWdhcmRzLFBlcnNvRmxlZXQKCklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IFtodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC83MDBjYmE4YTZmZmRjOThiOWM4ODhhNTNjNzFhNTU5NjUxNmFlMGRlYjFkNTNmMjBmZGQ5NjQwY2RhMzIwNjIzXShodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC83MDBjYmE4YTZmZmRjOThiOWM4ODhhNTNjNzFhNTU5NjUxNmFlMGRlYjFkNTNmMjBmZGQ5NjQwY2RhMzIwNjIzKQoKwqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLgogIApbMjAxOC0wMy0yMCAxMzozNzowMF0gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDxiNzg4MTczNzZhMTVlZWI0NGYwMTI1ZWZhZWVkNzkyMUBwZXJzb2ZsZWV0LnRlc3Q+CkRhdGU6IFR1ZSwgMjAgTWFyIDIwMTggMTM6Mzc6MDAgKzAxMDAKU3ViamVjdDogUmVzZXQgUGFzc3dvcmQgTm90aWZpY2F0aW9uCkZyb206IFBlcnNvRmxlZXQgPGluZm9AcGVyc29mbGVldC5kZT4KVG86IG9saXZlci56aWVnbGVyQHpvdXRhcHBzLmRlCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NDk0MjBfY2RkMmU5ZDVmMmJiZmYzYTc0Y2Y2NzZjMDQ3YWE3ZjlfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5IZWxsbyE8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Zb3UgYXJlIHJlY2VpdmluZyB0aGlzIGVtYWlsIGJlY2F1c2Ugd2UgcmVjZWl2ZWQgYSBwYXNzd29yZCByZXNldCByZXF1ZXN0IGZvciB5b3VyIGFjY291bnQuIENsaWNrIHRoZSBidXR0b24gYmVsb3cgdG8gcmVzZXQgeW91ciBwYXNzd29yZDo8L3A+Cjx0YWJsZSBjbGFzcz0iYWN0aW9uIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDMwcHggYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+PHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8zNjM2ZDFlMjU4Y2E2NjgwODAwZGRlODNjZWU5MTRmMGNkNTU1NDQ5YjE3NDJjMjllYjRkOGI1NzlkMDZmYzAyIiBjbGFzcz0iYnV0dG9uIGJ1dHRvbi1ibHVlIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyLXJhZGl1czogM3B4OyBib3gtc2hhZG93OiAwIDJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE2KTsgY29sb3I6ICNGRkY7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGJhY2tncm91bmQtY29sb3I6ICMzMDk3RDE7IGJvcmRlci10b3A6IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLXJpZ2h0OiAxOHB4IHNvbGlkICMzMDk3RDE7IGJvcmRlci1ib3R0b206IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLWxlZnQ6IDE4cHggc29saWQgIzMwOTdEMTsiPlJlc2V0IFBhc3N3b3JkPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuPC9wPgo8IS0tIFNhbHV0YXRpb24gLS0+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlJlZ2FyZHMsPGJyPlBlcnNvRmxlZXQ8L3A+CjwhLS0gU3ViY29weSAtLT4KPHRhYmxlIGNsYXNzPSJzdWJjb3B5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luLXRvcDogMjVweDsgcGFkZGluZy10b3A6IDI1cHg7Ij48dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7IGZvbnQtc2l6ZTogMTJweDsiPklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IDxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzM2MzZkMWUyNThjYTY2ODA4MDBkZGU4M2NlZTkxNGYwY2Q1NTU0NDliMTc0MmMyOWViNGQ4YjU3OWQwNmZjMDIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzM2MzZkMWUyNThjYTY2ODA4MDBkZGU4M2NlZTkxNGYwY2Q1NTU0NDliMTc0MmMyOWViNGQ4YjU3OWQwNmZjMDIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+aHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMzYzNmQxZTI1OGNhNjY4MDgwMGRkZTgzY2VlOTE0ZjBjZDU1NTQ0OWIxNzQyYzI5ZWI0ZDhiNTc5ZDA2ZmMwMjwvYT48L3A+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCltQZXJzb0ZsZWV0XShodHRwOi8vcGVyc29mbGVldC50ZXN0KQoKIyBIZWxsbyEKCllvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4gQ2xpY2sgdGhlIGJ1dHRvbiBiZWxvdyB0byByZXNldCB5b3VyIHBhc3N3b3JkOgoKUmVzZXQgUGFzc3dvcmQ6IGh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzM2MzZkMWUyNThjYTY2ODA4MDBkZGU4M2NlZTkxNGYwY2Q1NTU0NDliMTc0MmMyOWViNGQ4YjU3OWQwNmZjMDIKCklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuCgpSZWdhcmRzLFBlcnNvRmxlZXQKCklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IFtodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8zNjM2ZDFlMjU4Y2E2NjgwODAwZGRlODNjZWU5MTRmMGNkNTU1NDQ5YjE3NDJjMjllYjRkOGI1NzlkMDZmYzAyXShodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8zNjM2ZDFlMjU4Y2E2NjgwODAwZGRlODNjZWU5MTRmMGNkNTU1NDQ5YjE3NDJjMjllYjRkOGI1NzlkMDZmYzAyKQoKwqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLgogIApbMjAxOC0wMy0yMCAxMzozNzo0NF0gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDw5ZDQ5ODNmZDBiYWNlZDFhMzBlODFlOGVhMGZmODJlOUBwZXJzb2ZsZWV0LnRlc3Q+CkRhdGU6IFR1ZSwgMjAgTWFyIDIwMTggMTM6Mzc6NDQgKzAxMDAKU3ViamVjdDogUmVzZXQgUGFzc3dvcmQgTm90aWZpY2F0aW9uCkZyb206IFBlcnNvRmxlZXQgPGluZm9AcGVyc29mbGVldC5kZT4KVG86IG9saXZlci56aWVnbGVyQHpvdXRhcHBzLmRlCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NDk0NjRfYmYzMWYzNDQ0MDBkYjkyODViMWFkODVkYzYzNzQxODdfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5IZWxsbyE8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Zb3UgYXJlIHJlY2VpdmluZyB0aGlzIGVtYWlsIGJlY2F1c2Ugd2UgcmVjZWl2ZWQgYSBwYXNzd29yZCByZXNldCByZXF1ZXN0IGZvciB5b3VyIGFjY291bnQuIENsaWNrIHRoZSBidXR0b24gYmVsb3cgdG8gcmVzZXQgeW91ciBwYXNzd29yZDo8L3A+Cjx0YWJsZSBjbGFzcz0iYWN0aW9uIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDMwcHggYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+PHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC85MjM2NGNlMDY2OGFiMzA5M2E0NmI0ZTVhZjA4NDVhMWYzMjQzYTViODM4ZmJkNThkNjIyMmQxYmU5NTI3ODU2IiBjbGFzcz0iYnV0dG9uIGJ1dHRvbi1ibHVlIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyLXJhZGl1czogM3B4OyBib3gtc2hhZG93OiAwIDJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE2KTsgY29sb3I6ICNGRkY7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGJhY2tncm91bmQtY29sb3I6ICMzMDk3RDE7IGJvcmRlci10b3A6IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLXJpZ2h0OiAxOHB4IHNvbGlkICMzMDk3RDE7IGJvcmRlci1ib3R0b206IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLWxlZnQ6IDE4cHggc29saWQgIzMwOTdEMTsiPlJlc2V0IFBhc3N3b3JkPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuPC9wPgo8IS0tIFNhbHV0YXRpb24gLS0+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlJlZ2FyZHMsPGJyPlBlcnNvRmxlZXQ8L3A+CjwhLS0gU3ViY29weSAtLT4KPHRhYmxlIGNsYXNzPSJzdWJjb3B5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luLXRvcDogMjVweDsgcGFkZGluZy10b3A6IDI1cHg7Ij48dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7IGZvbnQtc2l6ZTogMTJweDsiPklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IDxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzkyMzY0Y2UwNjY4YWIzMDkzYTQ2YjRlNWFmMDg0NWExZjMyNDNhNWI4MzhmYmQ1OGQ2MjIyZDFiZTk1Mjc4NTYiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzkyMzY0Y2UwNjY4YWIzMDkzYTQ2YjRlNWFmMDg0NWExZjMyNDNhNWI4MzhmYmQ1OGQ2MjIyZDFiZTk1Mjc4NTYiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+aHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvOTIzNjRjZTA2NjhhYjMwOTNhNDZiNGU1YWYwODQ1YTFmMzI0M2E1YjgzOGZiZDU4ZDYyMjJkMWJlOTUyNzg1NjwvYT48L3A+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCltQZXJzb0ZsZWV0XShodHRwOi8vcGVyc29mbGVldC50ZXN0KQoKIyBIZWxsbyEKCllvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4gQ2xpY2sgdGhlIGJ1dHRvbiBiZWxvdyB0byByZXNldCB5b3VyIHBhc3N3b3JkOgoKUmVzZXQgUGFzc3dvcmQ6IGh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzkyMzY0Y2UwNjY4YWIzMDkzYTQ2YjRlNWFmMDg0NWExZjMyNDNhNWI4MzhmYmQ1OGQ2MjIyZDFiZTk1Mjc4NTYKCklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuCgpSZWdhcmRzLFBlcnNvRmxlZXQKCklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IFtodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC85MjM2NGNlMDY2OGFiMzA5M2E0NmI0ZTVhZjA4NDVhMWYzMjQzYTViODM4ZmJkNThkNjIyMmQxYmU5NTI3ODU2XShodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC85MjM2NGNlMDY2OGFiMzA5M2E0NmI0ZTVhZjA4NDVhMWYzMjQzYTViODM4ZmJkNThkNjIyMmQxYmU5NTI3ODU2KQoKwqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLgogIApbMjAxOC0wMy0yMCAxMzozNzo0N10gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDwwOWI3NzNlZTg2NGJjMDZiOWQwNmZhMWZhMmQ4YzgyNEBwZXJzb2ZsZWV0LnRlc3Q+CkRhdGU6IFR1ZSwgMjAgTWFyIDIwMTggMTM6Mzc6NDcgKzAxMDAKU3ViamVjdDogUmVzZXQgUGFzc3dvcmQgTm90aWZpY2F0aW9uCkZyb206IFBlcnNvRmxlZXQgPGluZm9AcGVyc29mbGVldC5kZT4KVG86IG9saXZlci56aWVnbGVyQHpvdXRhcHBzLmRlCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NDk0NjdfNjE0YzY3NzJhYjQ0OWFhNDU5MDY4ZmI1MDk5N2Y4MWRfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5IZWxsbyE8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Zb3UgYXJlIHJlY2VpdmluZyB0aGlzIGVtYWlsIGJlY2F1c2Ugd2UgcmVjZWl2ZWQgYSBwYXNzd29yZCByZXNldCByZXF1ZXN0IGZvciB5b3VyIGFjY291bnQuIENsaWNrIHRoZSBidXR0b24gYmVsb3cgdG8gcmVzZXQgeW91ciBwYXNzd29yZDo8L3A+Cjx0YWJsZSBjbGFzcz0iYWN0aW9uIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDMwcHggYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+PHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC82YTJkMmQ3ODk2MTk0MmVhYmE0MWIxOWI4NmZmYmVmMjFiYzZiZDEwMTI5YzIxNDU2YmEwNDc2M2Y0OWM4MGVlIiBjbGFzcz0iYnV0dG9uIGJ1dHRvbi1ibHVlIiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyLXJhZGl1czogM3B4OyBib3gtc2hhZG93OiAwIDJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE2KTsgY29sb3I6ICNGRkY7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7IGJhY2tncm91bmQtY29sb3I6ICMzMDk3RDE7IGJvcmRlci10b3A6IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLXJpZ2h0OiAxOHB4IHNvbGlkICMzMDk3RDE7IGJvcmRlci1ib3R0b206IDEwcHggc29saWQgIzMwOTdEMTsgYm9yZGVyLWxlZnQ6IDE4cHggc29saWQgIzMwOTdEMTsiPlJlc2V0IFBhc3N3b3JkPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuPC9wPgo8IS0tIFNhbHV0YXRpb24gLS0+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlJlZ2FyZHMsPGJyPlBlcnNvRmxlZXQ8L3A+CjwhLS0gU3ViY29weSAtLT4KPHRhYmxlIGNsYXNzPSJzdWJjb3B5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luLXRvcDogMjVweDsgcGFkZGluZy10b3A6IDI1cHg7Ij48dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7IGZvbnQtc2l6ZTogMTJweDsiPklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IDxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzZhMmQyZDc4OTYxOTQyZWFiYTQxYjE5Yjg2ZmZiZWYyMWJjNmJkMTAxMjljMjE0NTZiYTA0NzYzZjQ5YzgwZWUiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+PC9hPjxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzZhMmQyZDc4OTYxOTQyZWFiYTQxYjE5Yjg2ZmZiZWYyMWJjNmJkMTAxMjljMjE0NTZiYTA0NzYzZjQ5YzgwZWUiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+aHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvNmEyZDJkNzg5NjE5NDJlYWJhNDFiMTliODZmZmJlZjIxYmM2YmQxMDEyOWMyMTQ1NmJhMDQ3NjNmNDljODBlZTwvYT48L3A+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCltQZXJzb0ZsZWV0XShodHRwOi8vcGVyc29mbGVldC50ZXN0KQoKIyBIZWxsbyEKCllvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4gQ2xpY2sgdGhlIGJ1dHRvbiBiZWxvdyB0byByZXNldCB5b3VyIHBhc3N3b3JkOgoKUmVzZXQgUGFzc3dvcmQ6IGh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzZhMmQyZDc4OTYxOTQyZWFiYTQxYjE5Yjg2ZmZiZWYyMWJjNmJkMTAxMjljMjE0NTZiYTA0NzYzZjQ5YzgwZWUKCklmIHlvdSBkaWQgbm90IHJlcXVlc3QgYSBwYXNzd29yZCByZXNldCwgbm8gZnVydGhlciBhY3Rpb24gaXMgcmVxdWlyZWQuCgpSZWdhcmRzLFBlcnNvRmxlZXQKCklmIHlvdeKAmXJlIGhhdmluZyB0cm91YmxlIGNsaWNraW5nIHRoZSAiUmVzZXQgUGFzc3dvcmQiIGJ1dHRvbiwgY29weSBhbmQgcGFzdGUgdGhlIFVSTCBiZWxvdwppbnRvIHlvdXIgd2ViIGJyb3dzZXI6IFtodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC82YTJkMmQ3ODk2MTk0MmVhYmE0MWIxOWI4NmZmYmVmMjFiYzZiZDEwMTI5YzIxNDU2YmEwNDc2M2Y0OWM4MGVlXShodHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC82YTJkMmQ3ODk2MTk0MmVhYmE0MWIxOWI4NmZmYmVmMjFiYzZiZDEwMTI5YzIxNDU2YmEwNDc2M2Y0OWM4MGVlKQoKwqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLgogIApbMjAxOC0wMy0yMCAxMzozODoxNF0gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDwwNGZkZjdmOTY1ZDNhMmU5Nzc5ZjVlYTZmYzE1ZTkxN0BwZXJzb2ZsZWV0LnRlc3Q+CkRhdGU6IFR1ZSwgMjAgTWFyIDIwMTggMTM6Mzg6MTQgKzAxMDAKU3ViamVjdDogUmVzZXQgUGFzc3dvcmQgTm90aWZpY2F0aW9uCkZyb206IFBlcnNvRmxlZXQgPGluZm9AcGVyc29mbGVldC5kZT4KVG86IGZ0ZXN0QHBlcnNvZmxlZXQuZGUKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvYWx0ZXJuYXRpdmU7CiBib3VuZGFyeT0iXz1fc3dpZnRfMTUyMTU0OTQ5NF8zY2U4OTAyNTlkNzY3MzFiMDY5Y2I3MGI1Y2UzZTcxYl89XyIKCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFRyYW5zaXRpb25hbC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgo8aGVhZD4KPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0YyRjRGNjsgY29sb3I6ICM3NDc4N0U7IGhlaWdodDogMTAwJTsgbGluZS1oZWlnaHQ6IDEuNDsgbWFyZ2luOiAwOyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7Ij4KPHN0eWxlPgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgICAuaW5uZXItYm9keSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQoKICAgICAgICAuZm9vdGVyIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9CgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsKICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9Cjwvc3R5bGU+Cjx0YWJsZSBjbGFzcz0id3JhcHBlciIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjhmYTsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJjb250ZW50IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+Cjx0cj4KPHRkIGNsYXNzPSJoZWFkZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDI1cHggMDsgdGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL3BlcnNvZmxlZXQudGVzdCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICNiYmJmYzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgdGV4dC1zaGFkb3c6IDAgMXB4IDAgd2hpdGU7Ij4KICAgICAgICAgICAgUGVyc29GbGVldAogICAgICAgIDwvYT4KICAgIDwvdGQ+CjwvdHI+CjwhLS0gRW1haWwgQm9keSAtLT48dHI+Cjx0ZCBjbGFzcz0iYm9keSIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFREVGRjI7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iaW5uZXItYm9keSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPgo8IS0tIEJvZHkgY29udGVudCAtLT48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzJGMzEzMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkhlbGxvITwvaDE+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPllvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4gQ2xpY2sgdGhlIGJ1dHRvbiBiZWxvdyB0byByZXNldCB5b3VyIHBhc3N3b3JkOjwvcD4KPHRhYmxlIGNsYXNzPSJhY3Rpb24iIGFsaWduPSJjZW50ZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMzBweCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij48dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzM5ZmRiZDIxYTJjZmEyZjEzOTBjOWM4MmRkODU0ZGZhYjljZjI5ZWJmYjIxN2Q4NmVkMDAxYWViOTlkOGViNTkiIGNsYXNzPSJidXR0b24gYnV0dG9uLWJsdWUiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXItcmFkaXVzOiAzcHg7IGJveC1zaGFkb3c6IDAgMnB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTYpOyBjb2xvcjogI0ZGRjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsgYmFja2dyb3VuZC1jb2xvcjogIzMwOTdEMTsgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAjMzA5N0QxOyBib3JkZXItcmlnaHQ6IDE4cHggc29saWQgIzMwOTdEMTsgYm9yZGVyLWJvdHRvbTogMTBweCBzb2xpZCAjMzA5N0QxOyBib3JkZXItbGVmdDogMThweCBzb2xpZCAjMzA5N0QxOyI+UmVzZXQgUGFzc3dvcmQ8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+SWYgeW91IGRpZCBub3QgcmVxdWVzdCBhIHBhc3N3b3JkIHJlc2V0LCBubyBmdXJ0aGVyIGFjdGlvbiBpcyByZXF1aXJlZC48L3A+CjwhLS0gU2FsdXRhdGlvbiAtLT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+UmVnYXJkcyw8YnI+UGVyc29GbGVldDwvcD4KPCEtLSBTdWJjb3B5IC0tPgo8dGFibGUgY2xhc3M9InN1YmNvcHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW4tdG9wOiAyNXB4OyBwYWRkaW5nLXRvcDogMjVweDsiPjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsgZm9udC1zaXplOiAxMnB4OyI+SWYgeW914oCZcmUgaGF2aW5nIHRyb3VibGUgY2xpY2tpbmcgdGhlICJSZXNldCBQYXNzd29yZCIgYnV0dG9uLCBjb3B5IGFuZCBwYXN0ZSB0aGUgVVJMIGJlbG93CmludG8geW91ciB3ZWIgYnJvd3NlcjogPGEgaHJlZj0iaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMzlmZGJkMjFhMmNmYTJmMTM5MGM5YzgyZGQ4NTRkZmFiOWNmMjllYmZiMjE3ZDg2ZWQwMDFhZWI5OWQ4ZWI1OSIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMzODY5RDQ7Ij48L2E+PGEgaHJlZj0iaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMzlmZGJkMjFhMmNmYTJmMTM5MGM5YzgyZGQ4NTRkZmFiOWNmMjllYmZiMjE3ZDg2ZWQwMDFhZWI5OWQ4ZWI1OSIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMzODY5RDQ7Ij5odHRwczovL3BlcnNvZmxlZXQudGVzdC9wYXNzd29yZC9yZXNldC8zOWZkYmQyMWEyY2ZhMmYxMzkwYzljODJkZDg1NGRmYWI5Y2YyOWViZmIyMTdkODZlZDAwMWFlYjk5ZDhlYjU5PC9hPjwvcD4KICAgICAgICA8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KPC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICA8dGFibGUgY2xhc3M9ImZvb3RlciIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgY29sb3I6ICNBRUFFQUU7IGZvbnQtc2l6ZTogMTJweDsgdGV4dC1hbGlnbjogY2VudGVyOyI+wqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLjwvcD4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KPC90cj4KPC90YWJsZT4KPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC9ib2R5Pgo8L2h0bWw+CgpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLTgKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogcXVvdGVkLXByaW50YWJsZQoKW1BlcnNvRmxlZXRdKGh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QpCgojIEhlbGxvIQoKWW91IGFyZSByZWNlaXZpbmcgdGhpcyBlbWFpbCBiZWNhdXNlIHdlIHJlY2VpdmVkIGEgcGFzc3dvcmQgcmVzZXQgcmVxdWVzdCBmb3IgeW91ciBhY2NvdW50LiBDbGljayB0aGUgYnV0dG9uIGJlbG93IHRvIHJlc2V0IHlvdXIgcGFzc3dvcmQ6CgpSZXNldCBQYXNzd29yZDogaHR0cHM6Ly9wZXJzb2ZsZWV0LnRlc3QvcGFzc3dvcmQvcmVzZXQvMzlmZGJkMjFhMmNmYTJmMTM5MGM5YzgyZGQ4NTRkZmFiOWNmMjllYmZiMjE3ZDg2ZWQwMDFhZWI5OWQ4ZWI1OQoKSWYgeW91IGRpZCBub3QgcmVxdWVzdCBhIHBhc3N3b3JkIHJlc2V0LCBubyBmdXJ0aGVyIGFjdGlvbiBpcyByZXF1aXJlZC4KClJlZ2FyZHMsUGVyc29GbGVldAoKSWYgeW914oCZcmUgaGF2aW5nIHRyb3VibGUgY2xpY2tpbmcgdGhlICJSZXNldCBQYXNzd29yZCIgYnV0dG9uLCBjb3B5IGFuZCBwYXN0ZSB0aGUgVVJMIGJlbG93CmludG8geW91ciB3ZWIgYnJvd3NlcjogW2h0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzM5ZmRiZDIxYTJjZmEyZjEzOTBjOWM4MmRkODU0ZGZhYjljZjI5ZWJmYjIxN2Q4NmVkMDAxYWViOTlkOGViNTldKGh0dHBzOi8vcGVyc29mbGVldC50ZXN0L3Bhc3N3b3JkL3Jlc2V0LzM5ZmRiZDIxYTJjZmEyZjEzOTBjOWM4MmRkODU0ZGZhYjljZjI5ZWJmYjIxN2Q4NmVkMDAxYWViOTlkOGViNTkpCgrCqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgClsyMDE4LTAzLTIwIDE0OjAzOjExXSBsb2NhbC5ERUJVRzogTWVzc2FnZS1JRDogPDAyMmIwODk5NjhjMTQ2MjlmMDg0NWY3YWY4YTA5NmRjQHBlcnNvZmxlZXQudGVzdD4KRGF0ZTogVHVlLCAyMCBNYXIgMjAxOCAxNDowMzoxMSArMDEwMApTdWJqZWN0OiBTZW5kIFBhc3N3b3JkIFJlc2V0CkZyb206IHN1cHBvcnRAcGVyc29mbGVldC5jb20KVG86IHNsdWR3aWcgPHNpbW9uLmx1ZHdpZ0B3ZWJmYWN0b3IuZGU+Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NTA5OTFfYjI5MGVjZDE3OGNiZDcxODY4N2Y2NzM0MTBhYWU3NGJfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5QYXNzd29ydCB6dXLDvGNrc2V0emVuPC9oMT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+SGllciBpc3QgRGVpbiBDb2RlIHVtIERlaW4gUGFzc3dvcnQgenVyw7xjayB6dSBzZXR6ZW4uPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5HaWIgZGllc2VuIENvZGUgaW4gZGVyIEFwcCBlaW4sIGRhbWl0IER1IGVpbiBuZXVlcyBQYXNzd29ydCB2ZXJnZWJlbiBrYW5uc3QuPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5jekcwPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5HcsO8w59lLDxicj4KRGVpbiBQZXJzb0ZsZWV0LVRlYW08L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KPC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICA8dGFibGUgY2xhc3M9ImZvb3RlciIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgY29sb3I6ICNBRUFFQUU7IGZvbnQtc2l6ZTogMTJweDsgdGV4dC1hbGlnbjogY2VudGVyOyI+wqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLjwvcD4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KPC90cj4KPC90YWJsZT4KPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC9ib2R5Pgo8L2h0bWw+CgpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLTgKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogcXVvdGVkLXByaW50YWJsZQoKW1BlcnNvRmxlZXRdKGh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QpCgojIFBhc3N3b3J0IHp1csO8Y2tzZXR6ZW4KCkhpZXIgaXN0IERlaW4gQ29kZSB1bSBEZWluIFBhc3N3b3J0IHp1csO8Y2sgenUgc2V0emVuLgoKR2liIGRpZXNlbiBDb2RlIGluIGRlciBBcHAgZWluLCBkYW1pdCBEdSBlaW4gbmV1ZXMgUGFzc3dvcnQgdmVyZ2ViZW4ga2FubnN0LgoKY3pHMAoKR3LDvMOfZSwKRGVpbiBQZXJzb0ZsZWV0LVRlYW0KCsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICAKWzIwMTgtMDMtMjAgMTQ6MDg6MDhdIGxvY2FsLkVSUk9SOiBDb21tYW5kICJqd3Q6c2VjcmV0IiBpcyBub3QgZGVmaW5lZC4KCkRpZCB5b3UgbWVhbiB0aGlzPwogICAgand0OmdlbmVyYXRlIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcRXhjZXB0aW9uXFxDb21tYW5kTm90Rm91bmRFeGNlcHRpb24oY29kZTogMCk6IENvbW1hbmQgXCJqd3Q6c2VjcmV0XCIgaXMgbm90IGRlZmluZWQuCgpEaWQgeW91IG1lYW4gdGhpcz8KICAgIGp3dDpnZW5lcmF0ZSBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHA6NTc2KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDE5Nyk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPmZpbmQoJ2p3dDpzZWNyZXQnKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoMTIyKTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+ZG9SdW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29uc29sZS9BcHBsaWNhdGlvbi5waHAoODgpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9Db25zb2xlL0tlcm5lbC5waHAoMTIxKTogSWxsdW1pbmF0ZVxcQ29uc29sZVxcQXBwbGljYXRpb24tPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FydGlzYW4oMzcpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxDb25zb2xlXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzUge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNDowODoxMl0gbG9jYWwuRVJST1I6IE1ldGhvZCBUeW1vblxKV1RBdXRoXENvbW1hbmRzXEpXVEdlbmVyYXRlQ29tbWFuZDo6aGFuZGxlKCkgZG9lcyBub3QgZXhpc3QgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoUmVmbGVjdGlvbkV4Y2VwdGlvbihjb2RlOiAwKTogTWV0aG9kIFR5bW9uXFxKV1RBdXRoXFxDb21tYW5kc1xcSldUR2VuZXJhdGVDb21tYW5kOjpoYW5kbGUoKSBkb2VzIG5vdCBleGlzdCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHA6MTM1KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDEzNSk6IFJlZmxlY3Rpb25NZXRob2QtPl9fY29uc3RydWN0KE9iamVjdChUeW1vblxcSldUQXV0aFxcQ29tbWFuZHNcXEpXVEdlbmVyYXRlQ29tbWFuZCksICdoYW5kbGUnKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoMTE1KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Z2V0Q2FsbFJlZmxlY3RvcihBcnJheSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDI5KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Z2V0TWV0aG9kRGVwZW5kZW5jaWVzKE9iamVjdChJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbiksIEFycmF5LCBBcnJheSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDg3KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6SWxsdW1pbmF0ZVxcQ29udGFpbmVyXFx7Y2xvc3VyZX0oKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoMzEpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpjYWxsQm91bmRNZXRob2QoT2JqZWN0KElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEFwcGxpY2F0aW9uKSwgQXJyYXksIE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQ29udGFpbmVyLnBocCg1NDkpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpjYWxsKE9iamVjdChJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbiksIEFycmF5LCBBcnJheSwgTlVMTCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db25zb2xlL0NvbW1hbmQucGhwKDE4MCk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQ29udGFpbmVyLT5jYWxsKEFycmF5KQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9Db21tYW5kL0NvbW1hbmQucGhwKDI0MCk6IElsbHVtaW5hdGVcXENvbnNvbGVcXENvbW1hbmQtPmV4ZWN1dGUoT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChJbGx1bWluYXRlXFxDb25zb2xlXFxPdXRwdXRTdHlsZSkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29uc29sZS9Db21tYW5kLnBocCgxNjcpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXENvbW1hbmRcXENvbW1hbmQtPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KElsbHVtaW5hdGVcXENvbnNvbGVcXE91dHB1dFN0eWxlKSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDg1OCk6IElsbHVtaW5hdGVcXENvbnNvbGVcXENvbW1hbmQtPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCgyMTYpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5kb1J1bkNvbW1hbmQoT2JqZWN0KFR5bW9uXFxKV1RBdXRoXFxDb21tYW5kc1xcSldUR2VuZXJhdGVDb21tYW5kKSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoMTIyKTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+ZG9SdW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDg4KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0NvbnNvbGUvS2VybmVsLnBocCgxMjEpOiBJbGx1bWluYXRlXFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FydGlzYW4oMzcpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxDb25zb2xlXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzE1IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTQ6MDg6MjRdIGxvY2FsLkVSUk9SOiBNZXRob2QgVHltb25cSldUQXV0aFxDb21tYW5kc1xKV1RHZW5lcmF0ZUNvbW1hbmQ6OmhhbmRsZSgpIGRvZXMgbm90IGV4aXN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKFJlZmxlY3Rpb25FeGNlcHRpb24oY29kZTogMCk6IE1ldGhvZCBUeW1vblxcSldUQXV0aFxcQ29tbWFuZHNcXEpXVEdlbmVyYXRlQ29tbWFuZDo6aGFuZGxlKCkgZG9lcyBub3QgZXhpc3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwOjEzNSkKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCgxMzUpOiBSZWZsZWN0aW9uTWV0aG9kLT5fX2NvbnN0cnVjdChPYmplY3QoVHltb25cXEpXVEF1dGhcXENvbW1hbmRzXFxKV1RHZW5lcmF0ZUNvbW1hbmQpLCAnaGFuZGxlJykKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDExNSk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OmdldENhbGxSZWZsZWN0b3IoQXJyYXkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCgyOSk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OmdldE1ldGhvZERlcGVuZGVuY2llcyhPYmplY3QoSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQXBwbGljYXRpb24pLCBBcnJheSwgQXJyYXkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCg4Nyk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OklsbHVtaW5hdGVcXENvbnRhaW5lclxce2Nsb3N1cmV9KCkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDMxKTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Y2FsbEJvdW5kTWV0aG9kKE9iamVjdChJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbiksIEFycmF5LCBPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0NvbnRhaW5lci5waHAoNTQ5KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Y2FsbChPYmplY3QoSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQXBwbGljYXRpb24pLCBBcnJheSwgQXJyYXksIE5VTEwpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29uc29sZS9Db21tYW5kLnBocCgxODApOiBJbGx1bWluYXRlXFxDb250YWluZXJcXENvbnRhaW5lci0+Y2FsbChBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQ29tbWFuZC9Db21tYW5kLnBocCgyNDApOiBJbGx1bWluYXRlXFxDb25zb2xlXFxDb21tYW5kLT5leGVjdXRlKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoSWxsdW1pbmF0ZVxcQ29uc29sZVxcT3V0cHV0U3R5bGUpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnNvbGUvQ29tbWFuZC5waHAoMTY3KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxDb21tYW5kXFxDb21tYW5kLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChJbGx1bWluYXRlXFxDb25zb2xlXFxPdXRwdXRTdHlsZSkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCg4NTgpOiBJbGx1bWluYXRlXFxDb25zb2xlXFxDb21tYW5kLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoMjE2KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+ZG9SdW5Db21tYW5kKE9iamVjdChUeW1vblxcSldUQXV0aFxcQ29tbWFuZHNcXEpXVEdlbmVyYXRlQ29tbWFuZCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDEyMik6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPmRvUnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db25zb2xlL0FwcGxpY2F0aW9uLnBocCg4OCk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9Db25zb2xlL0tlcm5lbC5waHAoMTIxKTogSWxsdW1pbmF0ZVxcQ29uc29sZVxcQXBwbGljYXRpb24tPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcnRpc2FuKDM3KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQ29uc29sZVxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxNSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE0OjA4OjI4XSBsb2NhbC5FUlJPUjogQ29tbWFuZCAiand0IiBpcyBub3QgZGVmaW5lZC4KCkRpZCB5b3UgbWVhbiB0aGlzPwogICAgand0OmdlbmVyYXRlIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcRXhjZXB0aW9uXFxDb21tYW5kTm90Rm91bmRFeGNlcHRpb24oY29kZTogMCk6IENvbW1hbmQgXCJqd3RcIiBpcyBub3QgZGVmaW5lZC4KCkRpZCB5b3UgbWVhbiB0aGlzPwogICAgand0OmdlbmVyYXRlIGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocDo1NzYpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9Db21tYW5kL0hlbHBDb21tYW5kLnBocCg3MCk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPmZpbmQoJ2p3dCcpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0NvbW1hbmQvQ29tbWFuZC5waHAoMjQwKTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxDb21tYW5kXFxIZWxwQ29tbWFuZC0+ZXhlY3V0ZShPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDg1OCk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQ29tbWFuZFxcQ29tbWFuZC0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoMjE2KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+ZG9SdW5Db21tYW5kKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXENvbW1hbmRcXEhlbHBDb21tYW5kKSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCgxMjIpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5kb1J1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db25zb2xlL0FwcGxpY2F0aW9uLnBocCg4OCk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0NvbnNvbGUvS2VybmVsLnBocCgxMjEpOiBJbGx1bWluYXRlXFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXJ0aXNhbigzNyk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXENvbnNvbGVcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojOCB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE0OjA4OjMyXSBsb2NhbC5FUlJPUjogTWV0aG9kIFR5bW9uXEpXVEF1dGhcQ29tbWFuZHNcSldUR2VuZXJhdGVDb21tYW5kOjpoYW5kbGUoKSBkb2VzIG5vdCBleGlzdCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChSZWZsZWN0aW9uRXhjZXB0aW9uKGNvZGU6IDApOiBNZXRob2QgVHltb25cXEpXVEF1dGhcXENvbW1hbmRzXFxKV1RHZW5lcmF0ZUNvbW1hbmQ6OmhhbmRsZSgpIGRvZXMgbm90IGV4aXN0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocDoxMzUpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoMTM1KTogUmVmbGVjdGlvbk1ldGhvZC0+X19jb25zdHJ1Y3QoT2JqZWN0KFR5bW9uXFxKV1RBdXRoXFxDb21tYW5kc1xcSldUR2VuZXJhdGVDb21tYW5kKSwgJ2hhbmRsZScpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCgxMTUpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpnZXRDYWxsUmVmbGVjdG9yKEFycmF5KQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoMjkpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpnZXRNZXRob2REZXBlbmRlbmNpZXMoT2JqZWN0KElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEFwcGxpY2F0aW9uKSwgQXJyYXksIEFycmF5KQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoODcpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpJbGx1bWluYXRlXFxDb250YWluZXJcXHtjbG9zdXJlfSgpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCgzMSk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OmNhbGxCb3VuZE1ldGhvZChPYmplY3QoSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQXBwbGljYXRpb24pLCBBcnJheSwgT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Db250YWluZXIucGhwKDU0OSk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OmNhbGwoT2JqZWN0KElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEFwcGxpY2F0aW9uKSwgQXJyYXksIEFycmF5LCBOVUxMKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnNvbGUvQ29tbWFuZC5waHAoMTgwKTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxDb250YWluZXItPmNhbGwoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0NvbW1hbmQvQ29tbWFuZC5waHAoMjQwKTogSWxsdW1pbmF0ZVxcQ29uc29sZVxcQ29tbWFuZC0+ZXhlY3V0ZShPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KElsbHVtaW5hdGVcXENvbnNvbGVcXE91dHB1dFN0eWxlKSkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db25zb2xlL0NvbW1hbmQucGhwKDE2Nyk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQ29tbWFuZFxcQ29tbWFuZC0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoSWxsdW1pbmF0ZVxcQ29uc29sZVxcT3V0cHV0U3R5bGUpKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoODU4KTogSWxsdW1pbmF0ZVxcQ29uc29sZVxcQ29tbWFuZC0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDIxNik6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPmRvUnVuQ29tbWFuZChPYmplY3QoVHltb25cXEpXVEF1dGhcXENvbW1hbmRzXFxKV1RHZW5lcmF0ZUNvbW1hbmQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCgxMjIpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5kb1J1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29uc29sZS9BcHBsaWNhdGlvbi5waHAoODgpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vQ29uc29sZS9LZXJuZWwucGhwKDEyMSk6IElsbHVtaW5hdGVcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXJ0aXNhbigzNyk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXENvbnNvbGVcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTUge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNDowODo0MV0gbG9jYWwuRVJST1I6IE1ldGhvZCBUeW1vblxKV1RBdXRoXENvbW1hbmRzXEpXVEdlbmVyYXRlQ29tbWFuZDo6aGFuZGxlKCkgZG9lcyBub3QgZXhpc3QgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoUmVmbGVjdGlvbkV4Y2VwdGlvbihjb2RlOiAwKTogTWV0aG9kIFR5bW9uXFxKV1RBdXRoXFxDb21tYW5kc1xcSldUR2VuZXJhdGVDb21tYW5kOjpoYW5kbGUoKSBkb2VzIG5vdCBleGlzdCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHA6MTM1KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDEzNSk6IFJlZmxlY3Rpb25NZXRob2QtPl9fY29uc3RydWN0KE9iamVjdChUeW1vblxcSldUQXV0aFxcQ29tbWFuZHNcXEpXVEdlbmVyYXRlQ29tbWFuZCksICdoYW5kbGUnKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoMTE1KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Z2V0Q2FsbFJlZmxlY3RvcihBcnJheSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDI5KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Z2V0TWV0aG9kRGVwZW5kZW5jaWVzKE9iamVjdChJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbiksIEFycmF5LCBBcnJheSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDg3KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6SWxsdW1pbmF0ZVxcQ29udGFpbmVyXFx7Y2xvc3VyZX0oKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnRhaW5lci9Cb3VuZE1ldGhvZC5waHAoMzEpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpjYWxsQm91bmRNZXRob2QoT2JqZWN0KElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEFwcGxpY2F0aW9uKSwgQXJyYXksIE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQ29udGFpbmVyLnBocCg1NDkpOiBJbGx1bWluYXRlXFxDb250YWluZXJcXEJvdW5kTWV0aG9kOjpjYWxsKE9iamVjdChJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbiksIEFycmF5LCBBcnJheSwgTlVMTCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db25zb2xlL0NvbW1hbmQucGhwKDE4MCk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQ29udGFpbmVyLT5jYWxsKEFycmF5KQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9Db21tYW5kL0NvbW1hbmQucGhwKDI0MCk6IElsbHVtaW5hdGVcXENvbnNvbGVcXENvbW1hbmQtPmV4ZWN1dGUoT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChJbGx1bWluYXRlXFxDb25zb2xlXFxPdXRwdXRTdHlsZSkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29uc29sZS9Db21tYW5kLnBocCgxNjcpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXENvbW1hbmRcXENvbW1hbmQtPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KElsbHVtaW5hdGVcXENvbnNvbGVcXE91dHB1dFN0eWxlKSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDg1OCk6IElsbHVtaW5hdGVcXENvbnNvbGVcXENvbW1hbmQtPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCgyMTYpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5kb1J1bkNvbW1hbmQoT2JqZWN0KFR5bW9uXFxKV1RBdXRoXFxDb21tYW5kc1xcSldUR2VuZXJhdGVDb21tYW5kKSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoMTIyKTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+ZG9SdW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDg4KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0NvbnNvbGUvS2VybmVsLnBocCgxMjEpOiBJbGx1bWluYXRlXFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FydGlzYW4oMzcpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxDb25zb2xlXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzE1IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTQ6MDk6NDFdIGxvY2FsLkVSUk9SOiBNZXRob2QgVHltb25cSldUQXV0aFxDb21tYW5kc1xKV1RHZW5lcmF0ZUNvbW1hbmQ6OmhhbmRsZSgpIGRvZXMgbm90IGV4aXN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKFJlZmxlY3Rpb25FeGNlcHRpb24oY29kZTogMCk6IE1ldGhvZCBUeW1vblxcSldUQXV0aFxcQ29tbWFuZHNcXEpXVEdlbmVyYXRlQ29tbWFuZDo6aGFuZGxlKCkgZG9lcyBub3QgZXhpc3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwOjEzNSkKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCgxMzUpOiBSZWZsZWN0aW9uTWV0aG9kLT5fX2NvbnN0cnVjdChPYmplY3QoVHltb25cXEpXVEF1dGhcXENvbW1hbmRzXFxKV1RHZW5lcmF0ZUNvbW1hbmQpLCAnaGFuZGxlJykKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDExNSk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OmdldENhbGxSZWZsZWN0b3IoQXJyYXkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCgyOSk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OmdldE1ldGhvZERlcGVuZGVuY2llcyhPYmplY3QoSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQXBwbGljYXRpb24pLCBBcnJheSwgQXJyYXkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0JvdW5kTWV0aG9kLnBocCg4Nyk6IElsbHVtaW5hdGVcXENvbnRhaW5lclxcQm91bmRNZXRob2Q6OklsbHVtaW5hdGVcXENvbnRhaW5lclxce2Nsb3N1cmV9KCkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db250YWluZXIvQm91bmRNZXRob2QucGhwKDMxKTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Y2FsbEJvdW5kTWV0aG9kKE9iamVjdChJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxBcHBsaWNhdGlvbiksIEFycmF5LCBPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29udGFpbmVyL0NvbnRhaW5lci5waHAoNTQ5KTogSWxsdW1pbmF0ZVxcQ29udGFpbmVyXFxCb3VuZE1ldGhvZDo6Y2FsbChPYmplY3QoSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQXBwbGljYXRpb24pLCBBcnJheSwgQXJyYXksIE5VTEwpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQ29uc29sZS9Db21tYW5kLnBocCgxODApOiBJbGx1bWluYXRlXFxDb250YWluZXJcXENvbnRhaW5lci0+Y2FsbChBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQ29tbWFuZC9Db21tYW5kLnBocCgyNDApOiBJbGx1bWluYXRlXFxDb25zb2xlXFxDb21tYW5kLT5leGVjdXRlKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoSWxsdW1pbmF0ZVxcQ29uc29sZVxcT3V0cHV0U3R5bGUpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnNvbGUvQ29tbWFuZC5waHAoMTY3KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxDb21tYW5kXFxDb21tYW5kLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChJbGx1bWluYXRlXFxDb25zb2xlXFxPdXRwdXRTdHlsZSkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCg4NTgpOiBJbGx1bWluYXRlXFxDb25zb2xlXFxDb21tYW5kLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL3N5bWZvbnkvY29uc29sZS9BcHBsaWNhdGlvbi5waHAoMjE2KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+ZG9SdW5Db21tYW5kKE9iamVjdChUeW1vblxcSldUQXV0aFxcQ29tbWFuZHNcXEpXVEdlbmVyYXRlQ29tbWFuZCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDEyMik6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPmRvUnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Db25zb2xlL0FwcGxpY2F0aW9uLnBocCg4OCk6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9Db25zb2xlL0tlcm5lbC5waHAoMTIxKTogSWxsdW1pbmF0ZVxcQ29uc29sZVxcQXBwbGljYXRpb24tPnJ1bihPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxJbnB1dFxcQXJndklucHV0KSwgT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcT3V0cHV0XFxDb25zb2xlT3V0cHV0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcnRpc2FuKDM3KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQ29uc29sZVxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiMxNSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE0OjA5OjUwXSBsb2NhbC5FUlJPUjogQ29tbWFuZCAiand0OnNlY3JldCIgaXMgbm90IGRlZmluZWQuCgpEaWQgeW91IG1lYW4gdGhpcz8KICAgIGp3dDpnZW5lcmF0ZSB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEV4Y2VwdGlvblxcQ29tbWFuZE5vdEZvdW5kRXhjZXB0aW9uKGNvZGU6IDApOiBDb21tYW5kIFwiand0OnNlY3JldFwiIGlzIG5vdCBkZWZpbmVkLgoKRGlkIHlvdSBtZWFuIHRoaXM/CiAgICBqd3Q6Z2VuZXJhdGUgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwOjU3NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3Ivc3ltZm9ueS9jb25zb2xlL0FwcGxpY2F0aW9uLnBocCgxOTcpOiBTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5maW5kKCdqd3Q6c2VjcmV0JykKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9zeW1mb255L2NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDEyMik6IFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcQXBwbGljYXRpb24tPmRvUnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0NvbnNvbGUvQXBwbGljYXRpb24ucGhwKDg4KTogU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxBcHBsaWNhdGlvbi0+cnVuKE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXElucHV0XFxBcmd2SW5wdXQpLCBPYmplY3QoU3ltZm9ueVxcQ29tcG9uZW50XFxDb25zb2xlXFxPdXRwdXRcXENvbnNvbGVPdXRwdXQpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vQ29uc29sZS9LZXJuZWwucGhwKDEyMSk6IElsbHVtaW5hdGVcXENvbnNvbGVcXEFwcGxpY2F0aW9uLT5ydW4oT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcnRpc2FuKDM3KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQ29uc29sZVxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KFN5bWZvbnlcXENvbXBvbmVudFxcQ29uc29sZVxcSW5wdXRcXEFyZ3ZJbnB1dCksIE9iamVjdChTeW1mb255XFxDb21wb25lbnRcXENvbnNvbGVcXE91dHB1dFxcQ29uc29sZU91dHB1dCkpCiM1IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTQ6MTQ6MzddIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8ZWYzMmRmYjBlZjlkYTUzMjY0YmJkMmYxNDIzNmIyNjNAc3dpZnQuZ2VuZXJhdGVkPgpEYXRlOiBUdWUsIDIwIE1hciAyMDE4IDE0OjE0OjM3ICswMTAwClN1YmplY3Q6IFNlbmQgUGFzc3dvcmQgUmVzZXQKRnJvbTogc3VwcG9ydEBwZXJzb2ZsZWV0LmNvbQpUbzogc2x1ZHdpZyA8c2ltb24ubHVkd2lnQHdlYmZhY3Rvci5kZT4KTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvYWx0ZXJuYXRpdmU7CiBib3VuZGFyeT0iXz1fc3dpZnRfMTUyMTU1MTY3N182ZDYyYzBkNmZjYjNiMzNhMzMwYTU0MGZhYmI2MzEwZV89XyIKCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFRyYW5zaXRpb25hbC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgo8aGVhZD4KPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0YyRjRGNjsgY29sb3I6ICM3NDc4N0U7IGhlaWdodDogMTAwJTsgbGluZS1oZWlnaHQ6IDEuNDsgbWFyZ2luOiAwOyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7Ij4KPHN0eWxlPgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgICAuaW5uZXItYm9keSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQoKICAgICAgICAuZm9vdGVyIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9CgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsKICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9Cjwvc3R5bGU+Cjx0YWJsZSBjbGFzcz0id3JhcHBlciIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjhmYTsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJjb250ZW50IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+Cjx0cj4KPHRkIGNsYXNzPSJoZWFkZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDI1cHggMDsgdGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL3BlcnNvZmxlZXQudGVzdCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICNiYmJmYzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgdGV4dC1zaGFkb3c6IDAgMXB4IDAgd2hpdGU7Ij4KICAgICAgICAgICAgUGVyc29GbGVldAogICAgICAgIDwvYT4KICAgIDwvdGQ+CjwvdHI+CjwhLS0gRW1haWwgQm9keSAtLT48dHI+Cjx0ZCBjbGFzcz0iYm9keSIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFREVGRjI7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iaW5uZXItYm9keSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPgo8IS0tIEJvZHkgY29udGVudCAtLT48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzJGMzEzMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlBhc3N3b3J0IHp1csO8Y2tzZXR6ZW48L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5IaWVyIGlzdCBEZWluIENvZGUgdW0gRGVpbiBQYXNzd29ydCB6dXLDvGNrIHp1IHNldHplbi48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkdpYiBkaWVzZW4gQ29kZSBpbiBkZXIgQXBwIGVpbiwgZGFtaXQgRHUgZWluIG5ldWVzIFBhc3N3b3J0IHZlcmdlYmVuIGthbm5zdC48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkZsVkI8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkdyw7zDn2UsPGJyPgpEZWluIFBlcnNvRmxlZXQtVGVhbTwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgpbUGVyc29GbGVldF0oaHR0cDovL3BlcnNvZmxlZXQudGVzdCkKCiMgUGFzc3dvcnQgenVyw7xja3NldHplbgoKSGllciBpc3QgRGVpbiBDb2RlIHVtIERlaW4gUGFzc3dvcnQgenVyw7xjayB6dSBzZXR6ZW4uCgpHaWIgZGllc2VuIENvZGUgaW4gZGVyIEFwcCBlaW4sIGRhbWl0IER1IGVpbiBuZXVlcyBQYXNzd29ydCB2ZXJnZWJlbiBrYW5uc3QuCgpGbFZCCgpHcsO8w59lLApEZWluIFBlcnNvRmxlZXQtVGVhbQoKwqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLgogIApbMjAxOC0wMy0yMCAxNDoxNDo0OF0gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDxmNzUxNDg3OWY3MjJmZmI4MDM0ZDQ5ZTVkZDE1YTE2ZkBzd2lmdC5nZW5lcmF0ZWQ+CkRhdGU6IFR1ZSwgMjAgTWFyIDIwMTggMTQ6MTQ6NDggKzAxMDAKU3ViamVjdDogU2VuZCBQYXNzd29yZCBSZXNldApGcm9tOiBzdXBwb3J0QHBlcnNvZmxlZXQuY29tClRvOiBzbHVkd2lnIDxzaW1vbi5sdWR3aWdAd2ViZmFjdG9yLmRlPgpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsKIGJvdW5kYXJ5PSJfPV9zd2lmdF8xNTIxNTUxNjg4Xzc1MzlmNTlkMzRlOTAwNzBkODhkYjk5OThmY2NkYWQ0Xz1fIgoKPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CjxoZWFkPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGNEY2OyBjb2xvcjogIzc0Nzg3RTsgaGVpZ2h0OiAxMDAlOyBsaW5lLWhlaWdodDogMS40OyBtYXJnaW46IDA7IHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsiPgo8c3R5bGU+CiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgICAgIC5pbm5lci1ib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CgogICAgICAgIC5mb290ZXIgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KCiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICAgICAgIC5idXR0b24gewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KPC9zdHlsZT4KPHRhYmxlIGNsYXNzPSJ3cmFwcGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmOGZhOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNvbnRlbnQiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KPHRyPgo8dGQgY2xhc3M9ImhlYWRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMjVweCAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICA8YSBocmVmPSJodHRwOi8vcGVyc29mbGVldC50ZXN0IiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogI2JiYmZjMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsiPgogICAgICAgICAgICBQZXJzb0ZsZWV0CiAgICAgICAgPC9hPgogICAgPC90ZD4KPC90cj4KPCEtLSBFbWFpbCBCb2R5IC0tPjx0cj4KPHRkIGNsYXNzPSJib2R5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0VERUZGMjsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNFREVGRjI7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJpbm5lci1ib2R5IiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+CjwhLS0gQm9keSBjb250ZW50IC0tPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMkYzMTMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+UGFzc3dvcnQgenVyw7xja3NldHplbjwvaDE+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkhpZXIgaXN0IERlaW4gQ29kZSB1bSBEZWluIFBhc3N3b3J0IHp1csO8Y2sgenUgc2V0emVuLjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+R2liIGRpZXNlbiBDb2RlIGluIGRlciBBcHAgZWluLCBkYW1pdCBEdSBlaW4gbmV1ZXMgUGFzc3dvcnQgdmVyZ2ViZW4ga2FubnN0LjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+a3NlTzwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+R3LDvMOfZSw8YnI+CkRlaW4gUGVyc29GbGVldC1UZWFtPC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCltQZXJzb0ZsZWV0XShodHRwOi8vcGVyc29mbGVldC50ZXN0KQoKIyBQYXNzd29ydCB6dXLDvGNrc2V0emVuCgpIaWVyIGlzdCBEZWluIENvZGUgdW0gRGVpbiBQYXNzd29ydCB6dXLDvGNrIHp1IHNldHplbi4KCkdpYiBkaWVzZW4gQ29kZSBpbiBkZXIgQXBwIGVpbiwgZGFtaXQgRHUgZWluIG5ldWVzIFBhc3N3b3J0IHZlcmdlYmVuIGthbm5zdC4KCmtzZU8KCkdyw7zDn2UsCkRlaW4gUGVyc29GbGVldC1UZWFtCgrCqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCiAgClsyMDE4LTAzLTIwIDE0OjE2OjA2XSBsb2NhbC5ERUJVRzogTWVzc2FnZS1JRDogPGI3ZTFiZjkyODY2MWQ2MTAxZmZkMTQxOWU5NDE5NzYwQHN3aWZ0LmdlbmVyYXRlZD4KRGF0ZTogVHVlLCAyMCBNYXIgMjAxOCAxNDoxNjowNiArMDEwMApTdWJqZWN0OiBTZW5kIFBhc3N3b3JkIFJlc2V0CkZyb206IHN1cHBvcnRAcGVyc29mbGVldC5jb20KVG86IHNsdWR3aWcgPHNpbW9uLmx1ZHdpZ0B3ZWJmYWN0b3IuZGU+Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NTE3NjZfZDc1ZmEzMjI0YTRhOTdjYjZiN2MwZWVhNjdjZjUzNzFfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5QYXNzd29ydCB6dXLDvGNrc2V0emVuPC9oMT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+SGllciBpc3QgRGVpbiBDb2RlIHVtIERlaW4gUGFzc3dvcnQgenVyw7xjayB6dSBzZXR6ZW4uPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5HaWIgZGllc2VuIENvZGUgaW4gZGVyIEFwcCBlaW4sIGRhbWl0IER1IGVpbiBuZXVlcyBQYXNzd29ydCB2ZXJnZWJlbiBrYW5uc3QuPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5sbzhSPC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5HcsO8w59lLDxicj4KRGVpbiBQZXJzb0ZsZWV0LVRlYW08L3A+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KPC90YWJsZT4KPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICA8dGFibGUgY2xhc3M9ImZvb3RlciIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgY29sb3I6ICNBRUFFQUU7IGZvbnQtc2l6ZTogMTJweDsgdGV4dC1hbGlnbjogY2VudGVyOyI+wqkgMjAxOCBQZXJzb0ZsZWV0LiBBbGwgcmlnaHRzIHJlc2VydmVkLjwvcD4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+PC90YWJsZT4KPC90ZD4KPC90cj4KPC90YWJsZT4KPC90ZD4KICAgIDwvdHI+PC90YWJsZT4KPC9ib2R5Pgo8L2h0bWw+CgpDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9dXRmLTgKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogcXVvdGVkLXByaW50YWJsZQoKW1BlcnNvRmxlZXRdKGh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QpCgojIFBhc3N3b3J0IHp1csO8Y2tzZXR6ZW4KCkhpZXIgaXN0IERlaW4gQ29kZSB1bSBEZWluIFBhc3N3b3J0IHp1csO8Y2sgenUgc2V0emVuLgoKR2liIGRpZXNlbiBDb2RlIGluIGRlciBBcHAgZWluLCBkYW1pdCBEdSBlaW4gbmV1ZXMgUGFzc3dvcnQgdmVyZ2ViZW4ga2FubnN0LgoKbG84UgoKR3LDvMOfZSwKRGVpbiBQZXJzb0ZsZWV0LVRlYW0KCsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICAKWzIwMTgtMDMtMjAgMTQ6NTA6MDNdIGxvY2FsLkVSUk9SOiBDYWxsIHRvIGEgbWVtYmVyIGZ1bmN0aW9uIGxvYWQoKSBvbiBudWxsIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKFN5bWZvbnlcXENvbXBvbmVudFxcRGVidWdcXEV4Y2VwdGlvblxcRmF0YWxUaHJvd2FibGVFcnJvcihjb2RlOiAwKTogQ2FsbCB0byBhIG1lbWJlciBmdW5jdGlvbiBsb2FkKCkgb24gbnVsbCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocDoyMikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDYgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzQ3IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTQ6NTU6MzBdIGxvY2FsLkVSUk9SOiBUeXBlIGVycm9yOiBBcmd1bWVudCAxIHBhc3NlZCB0byBBcHBcSHR0cFxNaWRkbGV3YXJlXFJlamVjdElmSW5hY3RpdmU6OmlzSW5hY3RpdmUoKSBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIEFwcFxNb2RlbHNcVXNlciwgaW5zdGFuY2Ugb2YgSWxsdW1pbmF0ZVxEYXRhYmFzZVxFbG9xdWVudFxDb2xsZWN0aW9uIGdpdmVuLCBjYWxsZWQgaW4gL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAgb24gbGluZSAyNyB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IoY29kZTogMCk6IFR5cGUgZXJyb3I6IEFyZ3VtZW50IDEgcGFzc2VkIHRvIEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZTo6aXNJbmFjdGl2ZSgpIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgQXBwXFxNb2RlbHNcXFVzZXIsIGluc3RhbmNlIG9mIElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQ29sbGVjdGlvbiBnaXZlbiwgY2FsbGVkIGluIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwIG9uIGxpbmUgMjcgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHA6NTcpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgyNyk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZS0+aXNJbmFjdGl2ZShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxDb2xsZWN0aW9uKSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDcgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzQ4IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTQ6NTc6MDRdIGxvY2FsLkVSUk9SOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoRXJyb3JFeGNlcHRpb24oY29kZTogMCk6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL01vZGVscy9Db21wYW55L1N1YmRvbWFpbi5waHA6MTQ2KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwKDE0Nik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEJvb3RzdHJhcFxcSGFuZGxlRXhjZXB0aW9ucy0+aGFuZGxlRXJyb3IoOCwgJ1RyeWluZyB0byBnZXQgcC4uLicsICcvaG9tZS9zaW1vbi9naXQuLi4nLCAxNDYsIEFycmF5KQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL1Njb3Blcy9Db21wYW55U2NvcGUucGhwKDE0KTogQXBwXFxNb2RlbHNcXENvbXBhbnlcXFN1YmRvbWFpbjo6Y3VycmVudCgpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI2KTogQXBwXFxTY29wZXNcXENvbXBhbnlTY29wZS0+YXBwbHkoT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlciksIE9iamVjdChBcHBcXE1vZGVsc1xcQ29tcGFueVxcQ29tcGFueSkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTUzKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5JbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyKSkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5MjgpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmNhbGxTY29wZShPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDU4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5hcHBseVNjb3BlcygpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNTQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldChBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9SZWxhdGlvbnMvUmVsYXRpb24ucGhwKDE0Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcUmVsYXRpb25zXFxSZWxhdGlvbi0+Z2V0KCkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg1MjcpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldEVhZ2VyKCkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg0OTYpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmVhZ2VyTG9hZFJlbGF0aW9uKEFycmF5LCAnY29tcGFueScsIE9iamVjdChDbG9zdXJlKSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDY0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbnMoQXJyYXkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0NvbmNlcm5zL0J1aWxkc1F1ZXJpZXMucGhwKDc3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgyNCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Zmlyc3QoKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzU3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1OSAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNjAge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNDo1NzoxOV0gbG9jYWwuRVJST1I6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocDoxNDYpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL01vZGVscy9Db21wYW55L1N1YmRvbWFpbi5waHAoMTQ2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQm9vdHN0cmFwXFxIYW5kbGVFeGNlcHRpb25zLT5oYW5kbGVFcnJvcig4LCAnVHJ5aW5nIHRvIGdldCBwLi4uJywgJy9ob21lL3NpbW9uL2dpdC4uLicsIDE0NiwgQXJyYXkpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvU2NvcGVzL0NvbXBhbnlTY29wZS5waHAoMTQpOiBBcHBcXE1vZGVsc1xcQ29tcGFueVxcU3ViZG9tYWluOjpjdXJyZW50KCkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5MjYpOiBBcHBcXFNjb3Blc1xcQ29tcGFueVNjb3BlLT5hcHBseShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyKSwgT2JqZWN0KEFwcFxcTW9kZWxzXFxDb21wYW55XFxDb21wYW55KSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5NTMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPklsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyOCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Y2FsbFNjb3BlKE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg0NTgpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmFwcGx5U2NvcGVzKCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9SZWxhdGlvbnMvUmVsYXRpb24ucGhwKDE1NCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Z2V0KEFycmF5KQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTQzKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXQoKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDUyNyk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcUmVsYXRpb25zXFxSZWxhdGlvbi0+Z2V0RWFnZXIoKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ5Nik6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZWFnZXJMb2FkUmVsYXRpb24oQXJyYXksICdjb21wYW55JywgT2JqZWN0KENsb3N1cmUpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg0NjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmVhZ2VyTG9hZFJlbGF0aW9ucyhBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvQ29uY2VybnMvQnVpbGRzUXVlcmllcy5waHAoNzcpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldChBcnJheSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5maXJzdCgpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU5IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM2MCB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE0OjU4OjE2XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ2NCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZWFnZXJMb2FkUmVsYXRpb25zKEFycmF5KQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldCgpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE0OjU4OjQ0XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ2NCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZWFnZXJMb2FkUmVsYXRpb25zKEFycmF5KQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldCgpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE0OjU4OjU0XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ2NCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZWFnZXJMb2FkUmVsYXRpb25zKEFycmF5KQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldCgpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjAwOjQ4XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ2NCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZWFnZXJMb2FkUmVsYXRpb25zKEFycmF5KQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldCgpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjAxOjExXSBsb2NhbC5FUlJPUjogTWV0aG9kIHdpdGggZG9lcyBub3QgZXhpc3QuIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEJhZE1ldGhvZENhbGxFeGNlcHRpb24oY29kZTogMCk6IE1ldGhvZCB3aXRoIGRvZXMgbm90IGV4aXN0LiBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1N1cHBvcnQvVHJhaXRzL01hY3JvYWJsZS5waHA6OTYpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgyNCk6IElsbHVtaW5hdGVcXFN1cHBvcnRcXENvbGxlY3Rpb24tPl9fY2FsbCgnd2l0aCcsIEFycmF5KQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNDgge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNTowMTozNF0gbG9jYWwuRVJST1I6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocDoxNDYpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL01vZGVscy9Db21wYW55L1N1YmRvbWFpbi5waHAoMTQ2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQm9vdHN0cmFwXFxIYW5kbGVFeGNlcHRpb25zLT5oYW5kbGVFcnJvcig4LCAnVHJ5aW5nIHRvIGdldCBwLi4uJywgJy9ob21lL3NpbW9uL2dpdC4uLicsIDE0NiwgQXJyYXkpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvU2NvcGVzL0NvbXBhbnlTY29wZS5waHAoMTQpOiBBcHBcXE1vZGVsc1xcQ29tcGFueVxcU3ViZG9tYWluOjpjdXJyZW50KCkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5MjYpOiBBcHBcXFNjb3Blc1xcQ29tcGFueVNjb3BlLT5hcHBseShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyKSwgT2JqZWN0KEFwcFxcTW9kZWxzXFxDb21wYW55XFxDb21wYW55KSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5NTMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPklsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyOCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Y2FsbFNjb3BlKE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg0NTgpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmFwcGx5U2NvcGVzKCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9SZWxhdGlvbnMvUmVsYXRpb24ucGhwKDE1NCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Z2V0KEFycmF5KQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTQzKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXQoKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDUyNyk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcUmVsYXRpb25zXFxSZWxhdGlvbi0+Z2V0RWFnZXIoKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ5Nik6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZWFnZXJMb2FkUmVsYXRpb24oQXJyYXksICdjb21wYW55JywgT2JqZWN0KENsb3N1cmUpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg0NjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmVhZ2VyTG9hZFJlbGF0aW9ucyhBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvQ29uY2VybnMvQnVpbGRzUXVlcmllcy5waHAoNzcpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldChBcnJheSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5maXJzdCgpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU5IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM2MCB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjAzOjE0XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L01vZGVsLnBocCgzNzQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmVhZ2VyTG9hZFJlbGF0aW9ucyhBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+bG9hZCgnY29tcGFueScpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjAzOjU2XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L01vZGVsLnBocCgzNzQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmVhZ2VyTG9hZFJlbGF0aW9ucyhBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+bG9hZCgnY29tcGFueScpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjA3OjA5XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0NvbmNlcm5zL0J1aWxkc1F1ZXJpZXMucGhwKDc3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL0JlbG9uZ3NUby5waHAoODEpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmZpcnN0KCkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9Db25jZXJucy9IYXNBdHRyaWJ1dGVzLnBocCg0MTMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcQmVsb25nc1RvLT5nZXRSZXN1bHRzKCkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9Db25jZXJucy9IYXNBdHRyaWJ1dGVzLnBocCgzOTMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXE1vZGVsLT5nZXRSZWxhdGlvbnNoaXBGcm9tTWV0aG9kKCdjb21wYW55JykKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQ29uY2VybnMvSGFzQXR0cmlidXRlcy5waHAoMzIzKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+Z2V0UmVsYXRpb25WYWx1ZSgnY29tcGFueScpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L01vZGVsLnBocCgxMzYwKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+Z2V0QXR0cmlidXRlKCdjb21wYW55JykKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+X19nZXQoJ2NvbXBhbnknKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzU3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1OSAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNjAge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNTowNzozM10gbG9jYWwuRVJST1I6IFByb3BlcnR5IFtjb21wYW55XSBkb2VzIG5vdCBleGlzdCBvbiB0aGlzIGNvbGxlY3Rpb24gaW5zdGFuY2UuIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEV4Y2VwdGlvbihjb2RlOiAwKTogUHJvcGVydHkgW2NvbXBhbnldIGRvZXMgbm90IGV4aXN0IG9uIHRoaXMgY29sbGVjdGlvbiBpbnN0YW5jZS4gYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9TdXBwb3J0L0NvbGxlY3Rpb24ucGhwOjE3NjYpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgyNik6IElsbHVtaW5hdGVcXFN1cHBvcnRcXENvbGxlY3Rpb24tPl9fZ2V0KCdjb21wYW55JykKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDcgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzQ4IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6MDc6NDNdIGxvY2FsLkVSUk9SOiBNZXRob2QgY29tcGFueSBkb2VzIG5vdCBleGlzdC4geyJleGNlcHRpb24iOiJbb2JqZWN0XSAoQmFkTWV0aG9kQ2FsbEV4Y2VwdGlvbihjb2RlOiAwKTogTWV0aG9kIGNvbXBhbnkgZG9lcyBub3QgZXhpc3QuIGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvU3VwcG9ydC9UcmFpdHMvTWFjcm9hYmxlLnBocDo5NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI2KTogSWxsdW1pbmF0ZVxcU3VwcG9ydFxcQ29sbGVjdGlvbi0+X19jYWxsKCdjb21wYW55JywgQXJyYXkpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ3IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM0OCB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjA4OjQ1XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXQoKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzI0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTQgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzU1IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6MTA6NDBdIGxvY2FsLkVSUk9SOiBDbGFzcyAnQXBwXEh0dHBcTWlkZGxld2FyZVxDb21wYW55JyBub3QgZm91bmQgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoU3ltZm9ueVxcQ29tcG9uZW50XFxEZWJ1Z1xcRXhjZXB0aW9uXFxGYXRhbFRocm93YWJsZUVycm9yKGNvZGU6IDApOiBDbGFzcyAnQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxDb21wYW55JyBub3QgZm91bmQgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHA6MjMpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM0NyB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjEwOjU0XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0NvbmNlcm5zL0J1aWxkc1F1ZXJpZXMucGhwKDc3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoMjg5KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5maXJzdChBcnJheSkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9Nb2RlbC5waHAoMTQ1NSk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZmluZCgxNykKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9Nb2RlbC5waHAoMTQ2Nyk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcTW9kZWwtPl9fY2FsbCgnZmluZCcsIEFycmF5KQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXE1vZGVsOjpfX2NhbGxTdGF0aWMoJ2ZpbmQnLCBBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM1NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTcgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzU4IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6MTM6MTFdIGxvY2FsLkVSUk9SOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoRXJyb3JFeGNlcHRpb24oY29kZTogMCk6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL01vZGVscy9Db21wYW55L1N1YmRvbWFpbi5waHA6MTQ2KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwKDE0Nik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEJvb3RzdHJhcFxcSGFuZGxlRXhjZXB0aW9ucy0+aGFuZGxlRXJyb3IoOCwgJ1RyeWluZyB0byBnZXQgcC4uLicsICcvaG9tZS9zaW1vbi9naXQuLi4nLCAxNDYsIEFycmF5KQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL1Njb3Blcy9Db21wYW55U2NvcGUucGhwKDE0KTogQXBwXFxNb2RlbHNcXENvbXBhbnlcXFN1YmRvbWFpbjo6Y3VycmVudCgpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI2KTogQXBwXFxTY29wZXNcXENvbXBhbnlTY29wZS0+YXBwbHkoT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlciksIE9iamVjdChBcHBcXE1vZGVsc1xcQ29tcGFueVxcQ29tcGFueSkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTUzKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5JbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyKSkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5MjgpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmNhbGxTY29wZShPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDU4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5hcHBseVNjb3BlcygpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvQ29uY2VybnMvQnVpbGRzUXVlcmllcy5waHAoNzcpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldChBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCgyODkpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmZpcnN0KEFycmF5KQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L01vZGVsLnBocCgxNDU1KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5maW5kKDE3KQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L01vZGVsLnBocCgxNDY3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+X19jYWxsKCdmaW5kJywgQXJyYXkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgyNCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcTW9kZWw6Ol9fY2FsbFN0YXRpYygnZmluZCcsIEFycmF5KQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzI0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzU1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNTgge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNToxNDoxOF0gbG9jYWwuRVJST1I6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocDoxNDYpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL01vZGVscy9Db21wYW55L1N1YmRvbWFpbi5waHAoMTQ2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQm9vdHN0cmFwXFxIYW5kbGVFeGNlcHRpb25zLT5oYW5kbGVFcnJvcig4LCAnVHJ5aW5nIHRvIGdldCBwLi4uJywgJy9ob21lL3NpbW9uL2dpdC4uLicsIDE0NiwgQXJyYXkpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvU2NvcGVzL0NvbXBhbnlTY29wZS5waHAoMTQpOiBBcHBcXE1vZGVsc1xcQ29tcGFueVxcU3ViZG9tYWluOjpjdXJyZW50KCkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5MjYpOiBBcHBcXFNjb3Blc1xcQ29tcGFueVNjb3BlLT5hcHBseShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyKSwgT2JqZWN0KEFwcFxcTW9kZWxzXFxDb21wYW55XFxDb21wYW55KSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5NTMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPklsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyOCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Y2FsbFNjb3BlKE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg0NTgpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmFwcGx5U2NvcGVzKCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9Db25jZXJucy9CdWlsZHNRdWVyaWVzLnBocCg3Nyk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Z2V0KEFycmF5KQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDI4OSk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Zmlyc3QoQXJyYXkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvTW9kZWwucGhwKDE0NTUpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmZpbmQoMTcpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvTW9kZWwucGhwKDE0NjcpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXE1vZGVsLT5fX2NhbGwoJ2ZpbmQnLCBBcnJheSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbDo6X19jYWxsU3RhdGljKCdmaW5kJywgQXJyYXkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0OSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU3IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OCB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjE0OjMxXSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0NvbmNlcm5zL0J1aWxkc1F1ZXJpZXMucGhwKDc3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoMjg5KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5maXJzdChBcnJheSkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9Nb2RlbC5waHAoMTQ1NSk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+ZmluZCgxNykKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9Nb2RlbC5waHAoMTQ2Nyk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcTW9kZWwtPl9fY2FsbCgnZmluZCcsIEFycmF5KQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjYpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXE1vZGVsOjpfX2NhbGxTdGF0aWMoJ2ZpbmQnLCBBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM1NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTcgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzU4IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6MTQ6NTBdIGxvY2FsLkVSUk9SOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoRXJyb3JFeGNlcHRpb24oY29kZTogMCk6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL01vZGVscy9Db21wYW55L1N1YmRvbWFpbi5waHA6MTQ2KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwKDE0Nik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEJvb3RzdHJhcFxcSGFuZGxlRXhjZXB0aW9ucy0+aGFuZGxlRXJyb3IoOCwgJ1RyeWluZyB0byBnZXQgcC4uLicsICcvaG9tZS9zaW1vbi9naXQuLi4nLCAxNDYsIEFycmF5KQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL1Njb3Blcy9Db21wYW55U2NvcGUucGhwKDE0KTogQXBwXFxNb2RlbHNcXENvbXBhbnlcXFN1YmRvbWFpbjo6Y3VycmVudCgpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI2KTogQXBwXFxTY29wZXNcXENvbXBhbnlTY29wZS0+YXBwbHkoT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlciksIE9iamVjdChBcHBcXE1vZGVsc1xcQ29tcGFueVxcQ29tcGFueSkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTUzKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5JbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyKSkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9FbG9xdWVudC9CdWlsZGVyLnBocCg5MjgpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmNhbGxTY29wZShPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDU4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5hcHBseVNjb3BlcygpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvQ29uY2VybnMvQnVpbGRzUXVlcmllcy5waHAoNzcpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmdldChBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMjYpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmZpcnN0KCkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0OSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1NSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjE1OjI1XSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9Nb2RlbHMvQ29tcGFueS9TdWJkb21haW4ucGhwOjE0NikKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvTW9kZWxzL0NvbXBhbnkvU3ViZG9tYWluLnBocCgxNDYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdUcnlpbmcgdG8gZ2V0IHAuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMTQ2LCBBcnJheSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TY29wZXMvQ29tcGFueVNjb3BlLnBocCgxNCk6IEFwcFxcTW9kZWxzXFxDb21wYW55XFxTdWJkb21haW46OmN1cnJlbnQoKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDkyNik6IEFwcFxcU2NvcGVzXFxDb21wYW55U2NvcGUtPmFwcGx5KE9iamVjdChJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXIpLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbXBhbnlcXENvbXBhbnkpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDk1Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+SWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlcikpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoOTI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5jYWxsU2NvcGUoT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ1OCk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+YXBwbHlTY29wZXMoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L1JlbGF0aW9ucy9SZWxhdGlvbi5waHAoMTU0KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvUmVsYXRpb25zL1JlbGF0aW9uLnBocCgxNDMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXFJlbGF0aW9uc1xcUmVsYXRpb24tPmdldCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNTI3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxSZWxhdGlvbnNcXFJlbGF0aW9uLT5nZXRFYWdlcigpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvRWxvcXVlbnQvQnVpbGRlci5waHAoNDk2KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5lYWdlckxvYWRSZWxhdGlvbihBcnJheSwgJ2NvbXBhbnknLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L01vZGVsLnBocCgzNzQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcRWxvcXVlbnRcXEJ1aWxkZXItPmVhZ2VyTG9hZFJlbGF0aW9ucyhBcnJheSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwKDI4KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxNb2RlbC0+bG9hZCgnY29tcGFueScpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjIxOjQ5XSBsb2NhbC5FUlJPUjogQ2FsbCB0byBhIG1lbWJlciBmdW5jdGlvbiBsb2FkKCkgb24gbnVsbCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IoY29kZTogMCk6IENhbGwgdG8gYSBtZW1iZXIgZnVuY3Rpb24gbG9hZCgpIG9uIG51bGwgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHA6MjIpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM0NyB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjM0OjQ1XSBsb2NhbC5FUlJPUjogVW5kZWZpbmVkIHZhcmlhYmxlOiBlcnJvckNvZGUgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoRXJyb3JFeGNlcHRpb24oY29kZTogMCk6IFVuZGVmaW5lZCB2YXJpYWJsZTogZXJyb3JDb2RlIGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwOjMzKQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMzMpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdVbmRlZmluZWQgdmFyaWEuLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMzMsIEFycmF5KQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDM3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNDgge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNTozNTozNF0gbG9jYWwuRVJST1I6IFR5cGUgZXJyb3I6IEFyZ3VtZW50IDEgcGFzc2VkIHRvIEFwcFxIdHRwXE1pZGRsZXdhcmVcUmVqZWN0SWZJbmFjdGl2ZTo6aXNJbmFjdGl2ZSgpIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgQXBwXE1vZGVsc1xVc2VyLCBudWxsIGdpdmVuLCBjYWxsZWQgaW4gL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAgb24gbGluZSAzNCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IoY29kZTogMCk6IFR5cGUgZXJyb3I6IEFyZ3VtZW50IDEgcGFzc2VkIHRvIEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZTo6aXNJbmFjdGl2ZSgpIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgQXBwXFxNb2RlbHNcXFVzZXIsIG51bGwgZ2l2ZW4sIGNhbGxlZCBpbiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCBvbiBsaW5lIDM0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1JlamVjdElmSW5hY3RpdmUucGhwOjczKQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMzQpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmlzSW5hY3RpdmUoTlVMTCkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDcgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzQ4IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6NDc6NDNdIGxvY2FsLkVSUk9SOiBDYWxsIHRvIHVuZGVmaW5lZCBtZXRob2QgQXBwXEh0dHBcTWlkZGxld2FyZVxSZWplY3RJZkluYWN0aXZlOjpnZXRSZXF1ZXN0Qm9keSgpIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKFN5bWZvbnlcXENvbXBvbmVudFxcRGVidWdcXEV4Y2VwdGlvblxcRmF0YWxUaHJvd2FibGVFcnJvcihjb2RlOiAwKTogQ2FsbCB0byB1bmRlZmluZWQgbWV0aG9kIEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZTo6Z2V0UmVxdWVzdEJvZHkoKSBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocDozNCkKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcUmVqZWN0SWZJbmFjdGl2ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDYgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzQ3IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6NDg6NThdIGxvY2FsLkVSUk9SOiBhcnJheV9pbnRlcnNlY3Rfa2V5KCk6IEFyZ3VtZW50ICMxIGlzIG5vdCBhbiBhcnJheSB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogYXJyYXlfaW50ZXJzZWN0X2tleSgpOiBBcmd1bWVudCAjMSBpcyBub3QgYW4gYXJyYXkgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9TdXBwb3J0L0Fyci5waHA6MzczKQpbc3RhY2t0cmFjZV0KIzAgW2ludGVybmFsIGZ1bmN0aW9uXTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcQm9vdHN0cmFwXFxIYW5kbGVFeGNlcHRpb25zLT5oYW5kbGVFcnJvcigyLCAnYXJyYXlfaW50ZXJzZWN0Li4uJywgJy9ob21lL3NpbW9uL2dpdC4uLicsIDM3MywgQXJyYXkpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvU3VwcG9ydC9BcnIucGhwKDM3Myk6IGFycmF5X2ludGVyc2VjdF9rZXkoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBBcnJheSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9TdXBwb3J0L2hlbHBlcnMucGhwKDIwMCk6IElsbHVtaW5hdGVcXFN1cHBvcnRcXEFycjo6b25seShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIEFycmF5KQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgzNCk6IGFycmF5X29ubHkoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBBcnJheSkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM0OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTAgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzUxIHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTU6NDk6MTJdIGxvY2FsLkVSUk9SOiBTUUxTVEFURVs0MlMyMl06IENvbHVtbiBub3QgZm91bmQ6IDEwNTQgVW5rbm93biBjb2x1bW4gJ3VzZXJuYW1lJyBpbiAnd2hlcmUgY2xhdXNlJyAoU1FMOiBzZWxlY3QgKiBmcm9tIGB1c2Vyc2Agd2hlcmUgYHVzZXJuYW1lYCA9IHNsdWR3aWcgbGltaXQgMSkgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXFF1ZXJ5RXhjZXB0aW9uKGNvZGU6IDQyUzIyKTogU1FMU1RBVEVbNDJTMjJdOiBDb2x1bW4gbm90IGZvdW5kOiAxMDU0IFVua25vd24gY29sdW1uICd1c2VybmFtZScgaW4gJ3doZXJlIGNsYXVzZScgKFNRTDogc2VsZWN0ICogZnJvbSBgdXNlcnNgIHdoZXJlIGB1c2VybmFtZWAgPSBzbHVkd2lnIGxpbWl0IDEpIGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRGF0YWJhc2UvQ29ubmVjdGlvbi5waHA6NjY0LCBEb2N0cmluZVxcREJBTFxcRHJpdmVyXFxQRE9FeGNlcHRpb24oY29kZTogNDJTMjIpOiBTUUxTVEFURVs0MlMyMl06IENvbHVtbiBub3QgZm91bmQ6IDEwNTQgVW5rbm93biBjb2x1bW4gJ3VzZXJuYW1lJyBpbiAnd2hlcmUgY2xhdXNlJyBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2RvY3RyaW5lL2RiYWwvbGliL0RvY3RyaW5lL0RCQUwvRHJpdmVyL1BET0Nvbm5lY3Rpb24ucGhwOjc5LCBQRE9FeGNlcHRpb24oY29kZTogNDJTMjIpOiBTUUxTVEFURVs0MlMyMl06IENvbHVtbiBub3QgZm91bmQ6IDEwNTQgVW5rbm93biBjb2x1bW4gJ3VzZXJuYW1lJyBpbiAnd2hlcmUgY2xhdXNlJyBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2RvY3RyaW5lL2RiYWwvbGliL0RvY3RyaW5lL0RCQUwvRHJpdmVyL1BET0Nvbm5lY3Rpb24ucGhwOjc3KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9Db25uZWN0aW9uLnBocCg2MjQpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcQ29ubmVjdGlvbi0+cnVuUXVlcnlDYWxsYmFjaygnc2VsZWN0ICogZnJvbSBgLi4uJywgQXJyYXksIE9iamVjdChDbG9zdXJlKSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9Db25uZWN0aW9uLnBocCgzMzMpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcQ29ubmVjdGlvbi0+cnVuKCdzZWxlY3QgKiBmcm9tIGAuLi4nLCBBcnJheSwgT2JqZWN0KENsb3N1cmUpKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL1F1ZXJ5L0J1aWxkZXIucGhwKDE3MDUpOiBJbGx1bWluYXRlXFxEYXRhYmFzZVxcQ29ubmVjdGlvbi0+c2VsZWN0KCdzZWxlY3QgKiBmcm9tIGAuLi4nLCBBcnJheSwgdHJ1ZSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9EYXRhYmFzZS9RdWVyeS9CdWlsZGVyLnBocCgxNjkwKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXFF1ZXJ5XFxCdWlsZGVyLT5ydW5TZWxlY3QoKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ3OSk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxRdWVyeVxcQnVpbGRlci0+Z2V0KEFycmF5KQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0Vsb3F1ZW50L0J1aWxkZXIucGhwKDQ2Myk6IElsbHVtaW5hdGVcXERhdGFiYXNlXFxFbG9xdWVudFxcQnVpbGRlci0+Z2V0TW9kZWxzKEFycmF5KQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0RhdGFiYXNlL0NvbmNlcm5zL0J1aWxkc1F1ZXJpZXMucGhwKDc3KTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5nZXQoQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQXV0aC9FbG9xdWVudFVzZXJQcm92aWRlci5waHAoMTIxKTogSWxsdW1pbmF0ZVxcRGF0YWJhc2VcXEVsb3F1ZW50XFxCdWlsZGVyLT5maXJzdCgpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQXV0aC9TZXNzaW9uR3VhcmQucGhwKDM1MSk6IElsbHVtaW5hdGVcXEF1dGhcXEVsb3F1ZW50VXNlclByb3ZpZGVyLT5yZXRyaWV2ZUJ5Q3JlZGVudGlhbHMoQXJyYXkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvQXV0aC9BdXRoTWFuYWdlci5waHAoMjk0KTogSWxsdW1pbmF0ZVxcQXV0aFxcU2Vzc2lvbkd1YXJkLT5hdHRlbXB0KEFycmF5KQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9TdXBwb3J0L0ZhY2FkZXMvRmFjYWRlLnBocCgyMjEpOiBJbGx1bWluYXRlXFxBdXRoXFxBdXRoTWFuYWdlci0+X19jYWxsKCdhdHRlbXB0JywgQXJyYXkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9SZWplY3RJZkluYWN0aXZlLnBocCgzNCk6IElsbHVtaW5hdGVcXFN1cHBvcnRcXEZhY2FkZXNcXEZhY2FkZTo6X19jYWxsU3RhdGljKCdhdHRlbXB0JywgQXJyYXkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFJlamVjdElmSW5hY3RpdmUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1OSB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE1OjUwOjIyXSBsb2NhbC5FUlJPUjogVHlwZSBlcnJvcjogQXJndW1lbnQgMSBwYXNzZWQgdG8gSWxsdW1pbmF0ZVxBdXRoXFNlc3Npb25HdWFyZDo6bG9naW4oKSBtdXN0IGltcGxlbWVudCBpbnRlcmZhY2UgSWxsdW1pbmF0ZVxDb250cmFjdHNcQXV0aFxBdXRoZW50aWNhdGFibGUsIGFycmF5IGdpdmVuLCBjYWxsZWQgaW4gL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9BdXRoL0F1dGhNYW5hZ2VyLnBocCBvbiBsaW5lIDI5NCB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChTeW1mb255XFxDb21wb25lbnRcXERlYnVnXFxFeGNlcHRpb25cXEZhdGFsVGhyb3dhYmxlRXJyb3IoY29kZTogMCk6IFR5cGUgZXJyb3I6IEFyZ3VtZW50IDEgcGFzc2VkIHRvIElsbHVtaW5hdGVcXEF1dGhcXFNlc3Npb25HdWFyZDo6bG9naW4oKSBtdXN0IGltcGxlbWVudCBpbnRlcmZhY2UgSWxsdW1pbmF0ZVxcQ29udHJhY3RzXFxBdXRoXFxBdXRoZW50aWNhdGFibGUsIGFycmF5IGdpdmVuLCBjYWxsZWQgaW4gL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9BdXRoL0F1dGhNYW5hZ2VyLnBocCBvbiBsaW5lIDI5NCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0F1dGgvU2Vzc2lvbkd1YXJkLnBocDo0MDcpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0F1dGgvQXV0aE1hbmFnZXIucGhwKDI5NCk6IElsbHVtaW5hdGVcXEF1dGhcXFNlc3Npb25HdWFyZC0+bG9naW4oQXJyYXkpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvU3VwcG9ydC9GYWNhZGVzL0ZhY2FkZS5waHAoMjIxKTogSWxsdW1pbmF0ZVxcQXV0aFxcQXV0aE1hbmFnZXItPl9fY2FsbCgnbG9naW4nLCBBcnJheSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvUmVqZWN0SWZJbmFjdGl2ZS5waHAoMzYpOiBJbGx1bWluYXRlXFxTdXBwb3J0XFxGYWNhZGVzXFxGYWNhZGU6Ol9fY2FsbFN0YXRpYygnbG9naW4nLCBBcnJheSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxSZWplY3RJZkluYWN0aXZlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0OSAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNTAge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNjowOToyNl0gbG9jYWwuRVJST1I6IFVuZGVmaW5lZCBpbmRleDogaWRlbnRpZmllciB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVW5kZWZpbmVkIGluZGV4OiBpZGVudGlmaWVyIGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9Db250cm9sbGVycy9BcGkvdjEvQXV0aENvbnRyb2xsZXIucGhwOjI0KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL0NvbnRyb2xsZXJzL0FwaS92MS9BdXRoQ29udHJvbGxlci5waHAoMjQpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxCb290c3RyYXBcXEhhbmRsZUV4Y2VwdGlvbnMtPmhhbmRsZUVycm9yKDgsICdVbmRlZmluZWQgaW5kZXguLi4nLCAnL2hvbWUvc2ltb24vZ2l0Li4uJywgMjQsIEFycmF5KQojMSBbaW50ZXJuYWwgZnVuY3Rpb25dOiBBcHBcXEh0dHBcXENvbnRyb2xsZXJzXFxBcGlcXHYxXFxBdXRoQ29udHJvbGxlci0+bG9naW4oKQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvQ29udHJvbGxlci5waHAoNTQpOiBjYWxsX3VzZXJfZnVuY19hcnJheShBcnJheSwgQXJyYXkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Db250cm9sbGVyRGlzcGF0Y2hlci5waHAoNDUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxDb250cm9sbGVyLT5jYWxsQWN0aW9uKCdsb2dpbicsIEFycmF5KQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGUucGhwKDIxMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXENvbnRyb2xsZXJEaXNwYXRjaGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoQXBwXFxIdHRwXFxDb250cm9sbGVyc1xcQXBpXFx2MVxcQXV0aENvbnRyb2xsZXIpLCAnbG9naW4nKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGUucGhwKDE2OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlLT5ydW5Db250cm9sbGVyKCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjU4KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUtPnJ1bigpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoMzcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUyIC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM1MyB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE2OjIwOjMyXSBsb2NhbC5FUlJPUjogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IChWaWV3OiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcmVzb3VyY2VzL3ZpZXdzL21haWxzL2FwcC9tYXJrZG93bi9jb250YWN0LmJsYWRlLnBocCkgeyJleGNlcHRpb24iOiJbb2JqZWN0XSAoRXJyb3JFeGNlcHRpb24oY29kZTogMCk6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCAoVmlldzogL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3Jlc291cmNlcy92aWV3cy9tYWlscy9hcHAvbWFya2Rvd24vY29udGFjdC5ibGFkZS5waHApIGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9zdG9yYWdlL2ZyYW1ld29yay92aWV3cy9kYWNkYzczYjU0YjI1ODdjYWFhMWI1YTNiZmUyNzFmYjk5YWY3ZWIyLnBocDoxOSwgRXJyb3JFeGNlcHRpb24oY29kZTogMCk6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvc3RvcmFnZS9mcmFtZXdvcmsvdmlld3MvZGFjZGM3M2I1NGIyNTg3Y2FhYTFiNWEzYmZlMjcxZmI5OWFmN2ViMi5waHA6MTkpCltzdGFja3RyYWNlXQojMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1ZpZXcvRW5naW5lcy9QaHBFbmdpbmUucGhwKDQ1KTogSWxsdW1pbmF0ZVxcVmlld1xcRW5naW5lc1xcQ29tcGlsZXJFbmdpbmUtPmhhbmRsZVZpZXdFeGNlcHRpb24oT2JqZWN0KEVycm9yRXhjZXB0aW9uKSwgMSkKIzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L0VuZ2luZXMvQ29tcGlsZXJFbmdpbmUucGhwKDU5KTogSWxsdW1pbmF0ZVxcVmlld1xcRW5naW5lc1xcUGhwRW5naW5lLT5ldmFsdWF0ZVBhdGgoJy9ob21lL3NpbW9uL2dpdC4uLicsIEFycmF5KQojMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1ZpZXcvVmlldy5waHAoMTM3KTogSWxsdW1pbmF0ZVxcVmlld1xcRW5naW5lc1xcQ29tcGlsZXJFbmdpbmUtPmdldCgnL2hvbWUvc2ltb24vZ2l0Li4uJywgQXJyYXkpCiMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9WaWV3LnBocCgxMjApOiBJbGx1bWluYXRlXFxWaWV3XFxWaWV3LT5nZXRDb250ZW50cygpCiM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9WaWV3LnBocCg4NSk6IElsbHVtaW5hdGVcXFZpZXdcXFZpZXctPnJlbmRlckNvbnRlbnRzKCkKIzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01hcmtkb3duLnBocCg2MSk6IElsbHVtaW5hdGVcXFZpZXdcXFZpZXctPnJlbmRlcigpCiM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYWlsYWJsZS5waHAoMjE3KTogSWxsdW1pbmF0ZVxcTWFpbFxcTWFya2Rvd24tPnJlbmRlcignbWFpbHMuYXBwLm1hcmtkLi4uJywgQXJyYXkpCiM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYWlsYWJsZS5waHAoMTg5KTogSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGFibGUtPmJ1aWxkTWFya2Rvd25WaWV3KCkKIzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxhYmxlLnBocCgxMTkpOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsYWJsZS0+YnVpbGRWaWV3KCkKIzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxlci5waHAoMjUwKTogSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGFibGUtPnNlbmQoT2JqZWN0KElsbHVtaW5hdGVcXE1haWxcXE1haWxlcikpCiMxMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGVyLnBocCgyMDUpOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsZXItPnNlbmRNYWlsYWJsZShPYmplY3QoQXBwXFxNYWlsXFxDb250YWN0U2VuZCkpCiMxMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvUGVuZGluZ01haWwucGhwKDk5KTogSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGVyLT5zZW5kKE9iamVjdChBcHBcXE1haWxcXENvbnRhY3RTZW5kKSkKIzEyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvU2VydmljZXMvQ29udGFjdFNlcnZpY2UucGhwKDI5KTogSWxsdW1pbmF0ZVxcTWFpbFxcUGVuZGluZ01haWwtPnNlbmQoT2JqZWN0KEFwcFxcTWFpbFxcQ29udGFjdFNlbmQpKQojMTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL0NvbnRyb2xsZXJzL0FwaS92MS9Db250YWN0c0NvbnRyb2xsZXIucGhwKDUxKTogQXBwXFxTZXJ2aWNlc1xcQ29udGFjdFNlcnZpY2UtPnNlbmRDb250YWN0TWFpbCgnc3VwcG9ydEBwZXJzb2ZsLi4uJywgT2JqZWN0KEFwcFxcTW9kZWxzXFxDb250YWN0KSkKIzE0IFtpbnRlcm5hbCBmdW5jdGlvbl06IEFwcFxcSHR0cFxcQ29udHJvbGxlcnNcXEFwaVxcdjFcXENvbnRhY3RzQ29udHJvbGxlci0+Y3JlYXRlKCkKIzE1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Db250cm9sbGVyLnBocCg1NCk6IGNhbGxfdXNlcl9mdW5jX2FycmF5KEFycmF5LCBBcnJheSkKIzE2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Db250cm9sbGVyRGlzcGF0Y2hlci5waHAoNDUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxDb250cm9sbGVyLT5jYWxsQWN0aW9uKCdjcmVhdGUnLCBBcnJheSkKIzE3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZS5waHAoMjEyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcQ29udHJvbGxlckRpc3BhdGNoZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChBcHBcXEh0dHBcXENvbnRyb2xsZXJzXFxBcGlcXHYxXFxDb250YWN0c0NvbnRyb2xsZXIpLCAnY3JlYXRlJykKIzE4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZS5waHAoMTY5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUtPnJ1bkNvbnRyb2xsZXIoKQojMTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjU4KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUtPnJ1bigpCiMyMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVBcGlWMS5waHAoMjYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEFwcFxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVBcGlWMS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlQ29ycy5waHAoNTkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVDb3JzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1N1YnN0aXR1dGVCaW5kaW5ncy5waHAoNDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFN1YnN0aXR1dGVCaW5kaW5ncy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9UaHJvdHRsZVJlcXVlc3RzLnBocCg1Nyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcVGhyb3R0bGVSZXF1ZXN0cy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpLCA2MCwgJzEnKQojMzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY2MCk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiMzNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MzUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlV2l0aGluU3RhY2soT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjAxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSkpCiMzNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg1OTApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoVG9Sb3V0ZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE3Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+SWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1kZWJ1Z2Jhci9zcmMvTWlkZGxld2FyZS9JbmplY3REZWJ1Z2Jhci5waHAoNjUpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxEZWJ1Z2JhclxcTWlkZGxld2FyZVxcSW5qZWN0RGVidWdiYXItPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9maWRlbG9wZXIvcHJveHkvc3JjL1RydXN0UHJveGllcy5waHAoNTYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEZpZGVsb3BlclxcUHJveHlcXFRydXN0UHJveGllcy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVmFsaWRhdGVQb3N0U2l6ZS5waHAoMjcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzUzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlUG9zdFNpemUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzU0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9DaGVja0Zvck1haW50ZW5hbmNlTW9kZS5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXENoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVQcmVmbGlnaHQucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1OSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlUHJlZmxpZ2h0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM2MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNTEpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojNjMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxMTYpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPnNlbmRSZXF1ZXN0VGhyb3VnaFJvdXRlcihPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcHVibGljL2luZGV4LnBocCg1NSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzY1IC9ob21lL3NpbW9uLy5jb21wb3Nlci92ZW5kb3IvY3ByaWVnby92YWxldC1saW51eC9zZXJ2ZXIucGhwKDIwNCk6IHJlcXVpcmUoJy9ob21lL3NpbW9uL2dpdC4uLicpCiM2NiB7bWFpbn0KIn0gClsyMDE4LTAzLTIwIDE2OjIyOjQzXSBsb2NhbC5ERUJVRzogTWVzc2FnZS1JRDogPDQxYzg2MGJiMDBhMmYxNGUwZjljYzcyY2NmYWQ1ZTk1QHN3aWZ0LmdlbmVyYXRlZD4KRGF0ZTogVHVlLCAyMCBNYXIgMjAxOCAxNjoyMjo0MyArMDEwMApTdWJqZWN0OiBDb250YWN0IFNlbmQKRnJvbTogUGVyc29GbGVldCA8aW5mb0BwZXJzb2ZsZWV0LmRlPgpUbzogc3VwcG9ydEBwZXJzb2ZsZWV0LmNvbQpNSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsKIGJvdW5kYXJ5PSJfPV9zd2lmdF8xNTIxNTU5MzYzX2ZlYjdlYjZmYjM4N2NiZTQ1YWVjNmRhMmYyNDc4Njk1Xz1fIgoKPCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CjxoZWFkPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGNEY2OyBjb2xvcjogIzc0Nzg3RTsgaGVpZ2h0OiAxMDAlOyBsaW5lLWhlaWdodDogMS40OyBtYXJnaW46IDA7IHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsiPgo8c3R5bGU+CiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgICAgIC5pbm5lci1ib2R5IHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CgogICAgICAgIC5mb290ZXIgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KCiAgICBAbWVkaWEgIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCkgewogICAgICAgIC5idXR0b24gewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KPC9zdHlsZT4KPHRhYmxlIGNsYXNzPSJ3cmFwcGVyIiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmOGZhOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+PHRyPgo8dGQgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImNvbnRlbnQiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KPHRyPgo8dGQgY2xhc3M9ImhlYWRlciIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMjVweCAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICA8YSBocmVmPSJodHRwOi8vcGVyc29mbGVldC50ZXN0IiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogI2JiYmZjMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB0ZXh0LXNoYWRvdzogMCAxcHggMCB3aGl0ZTsiPgogICAgICAgICAgICBQZXJzb0ZsZWV0CiAgICAgICAgPC9hPgogICAgPC90ZD4KPC90cj4KPCEtLSBFbWFpbCBCb2R5IC0tPjx0cj4KPHRkIGNsYXNzPSJib2R5IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0VERUZGMjsgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNFREVGRjI7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJpbm5lci1ib2R5IiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB3aWR0aDogNTcwcHg7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDU3MHB4OyI+CjwhLS0gQm9keSBjb250ZW50IC0tPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMkYzMTMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+S29udGFrdGF1Zm5haG1lPC9oMT4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+V2VpdGVyZSBJbmZvcm1hdGlvbmVuOjwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgojIEtvbnRha3RhdWZuYWhtZQoKRGVyIEJlbnV0emVyIHRlc3QgaGF0IGZvbGdlbmRlcyBnZXNjaHJpZWJlbjoKCnRlc3QKCnRlc3QKCldlaXRlcmUgSW5mb3JtYXRpb25lbjoKCkVtYWlsOiA8PgoKVGVsZWZvbjogMDEyMzQ1NjIzNTQgIApbMjAxOC0wMy0yMCAxNjoyNDowNl0gbG9jYWwuRVJST1I6IFRyeWluZyB0byBnZXQgcHJvcGVydHkgb2Ygbm9uLW9iamVjdCAoVmlldzogL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3Jlc291cmNlcy92aWV3cy9tYWlscy9hcHAvbWFya2Rvd24vY29udGFjdC5ibGFkZS5waHApIHsiZXhjZXB0aW9uIjoiW29iamVjdF0gKEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgKFZpZXc6IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9yZXNvdXJjZXMvdmlld3MvbWFpbHMvYXBwL21hcmtkb3duL2NvbnRhY3QuYmxhZGUucGhwKSBhdCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvc3RvcmFnZS9mcmFtZXdvcmsvdmlld3MvZGFjZGM3M2I1NGIyNTg3Y2FhYTFiNWEzYmZlMjcxZmI5OWFmN2ViMi5waHA6MTksIEVycm9yRXhjZXB0aW9uKGNvZGU6IDApOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3N0b3JhZ2UvZnJhbWV3b3JrL3ZpZXdzL2RhY2RjNzNiNTRiMjU4N2NhYWExYjVhM2JmZTI3MWZiOTlhZjdlYjIucGhwOjE5KQpbc3RhY2t0cmFjZV0KIzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L0VuZ2luZXMvUGhwRW5naW5lLnBocCg0NSk6IElsbHVtaW5hdGVcXFZpZXdcXEVuZ2luZXNcXENvbXBpbGVyRW5naW5lLT5oYW5kbGVWaWV3RXhjZXB0aW9uKE9iamVjdChFcnJvckV4Y2VwdGlvbiksIDEpCiMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9FbmdpbmVzL0NvbXBpbGVyRW5naW5lLnBocCg1OSk6IElsbHVtaW5hdGVcXFZpZXdcXEVuZ2luZXNcXFBocEVuZ2luZS0+ZXZhbHVhdGVQYXRoKCcvaG9tZS9zaW1vbi9naXQuLi4nLCBBcnJheSkKIzIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L1ZpZXcucGhwKDEzNyk6IElsbHVtaW5hdGVcXFZpZXdcXEVuZ2luZXNcXENvbXBpbGVyRW5naW5lLT5nZXQoJy9ob21lL3NpbW9uL2dpdC4uLicsIEFycmF5KQojMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1ZpZXcvVmlldy5waHAoMTIwKTogSWxsdW1pbmF0ZVxcVmlld1xcVmlldy0+Z2V0Q29udGVudHMoKQojNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1ZpZXcvVmlldy5waHAoODUpOiBJbGx1bWluYXRlXFxWaWV3XFxWaWV3LT5yZW5kZXJDb250ZW50cygpCiM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYXJrZG93bi5waHAoNjEpOiBJbGx1bWluYXRlXFxWaWV3XFxWaWV3LT5yZW5kZXIoKQojNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGFibGUucGhwKDIxNyk6IElsbHVtaW5hdGVcXE1haWxcXE1hcmtkb3duLT5yZW5kZXIoJ21haWxzLmFwcC5tYXJrZC4uLicsIEFycmF5KQojNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGFibGUucGhwKDE4OSk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxhYmxlLT5idWlsZE1hcmtkb3duVmlldygpCiM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYWlsYWJsZS5waHAoMTE5KTogSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGFibGUtPmJ1aWxkVmlldygpCiM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYWlsZXIucGhwKDI1MCk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxhYmxlLT5zZW5kKE9iamVjdChJbGx1bWluYXRlXFxNYWlsXFxNYWlsZXIpKQojMTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxlci5waHAoMjA1KTogSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGVyLT5zZW5kTWFpbGFibGUoT2JqZWN0KEFwcFxcTWFpbFxcQ29udGFjdFNlbmQpKQojMTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL1BlbmRpbmdNYWlsLnBocCg5OSk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxlci0+c2VuZChPYmplY3QoQXBwXFxNYWlsXFxDb250YWN0U2VuZCkpCiMxMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL1NlcnZpY2VzL0NvbnRhY3RTZXJ2aWNlLnBocCgyOSk6IElsbHVtaW5hdGVcXE1haWxcXFBlbmRpbmdNYWlsLT5zZW5kKE9iamVjdChBcHBcXE1haWxcXENvbnRhY3RTZW5kKSkKIzEzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9Db250cm9sbGVycy9BcGkvdjEvQ29udGFjdHNDb250cm9sbGVyLnBocCg1MSk6IEFwcFxcU2VydmljZXNcXENvbnRhY3RTZXJ2aWNlLT5zZW5kQ29udGFjdE1haWwoJ3N1cHBvcnRAcGVyc29mbC4uLicsIE9iamVjdChBcHBcXE1vZGVsc1xcQ29udGFjdCkpCiMxNCBbaW50ZXJuYWwgZnVuY3Rpb25dOiBBcHBcXEh0dHBcXENvbnRyb2xsZXJzXFxBcGlcXHYxXFxDb250YWN0c0NvbnRyb2xsZXItPmNyZWF0ZSgpCiMxNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvQ29udHJvbGxlci5waHAoNTQpOiBjYWxsX3VzZXJfZnVuY19hcnJheShBcnJheSwgQXJyYXkpCiMxNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvQ29udHJvbGxlckRpc3BhdGNoZXIucGhwKDQ1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcQ29udHJvbGxlci0+Y2FsbEFjdGlvbignY3JlYXRlJywgQXJyYXkpCiMxNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGUucGhwKDIxMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXENvbnRyb2xsZXJEaXNwYXRjaGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoQXBwXFxIdHRwXFxDb250cm9sbGVyc1xcQXBpXFx2MVxcQ29udGFjdHNDb250cm9sbGVyKSwgJ2NyZWF0ZScpCiMxOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGUucGhwKDE2OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlLT5ydW5Db250cm9sbGVyKCkKIzE5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDY1OCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlLT5ydW4oKQojMjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzIxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9hcHAvSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlQXBpVjEucGhwKDI2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBBcHBcXEh0dHBcXE1pZGRsZXdhcmVcXFZhbGlkYXRlQXBpVjEtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzIzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZUNvcnMucGhwKDU5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcQ29yc1xcSGFuZGxlQ29ycy0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojMjYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyNyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvTWlkZGxld2FyZS9TdWJzdGl0dXRlQmluZGluZ3MucGhwKDQxKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxTdWJzdGl0dXRlQmluZGluZ3MtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvVGhyb3R0bGVSZXF1ZXN0cy5waHAoNTcpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXE1pZGRsZXdhcmVcXFRocm90dGxlUmVxdWVzdHMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSwgNjAsICcxJykKIzMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NjApOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPnRoZW4oT2JqZWN0KENsb3N1cmUpKQojMzUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjM1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5ydW5Sb3V0ZVdpdGhpblN0YWNrKE9iamVjdChJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZSksIE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYwMSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpKQojMzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNTkwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaFRvUm91dGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvS2VybmVsLnBocCgxNzYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPmRpc3BhdGNoKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPklsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtZGVidWdiYXIvc3JjL01pZGRsZXdhcmUvSW5qZWN0RGVidWdiYXIucGhwKDY1KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBCYXJyeXZkaFxcRGVidWdiYXJcXE1pZGRsZXdhcmVcXEluamVjdERlYnVnYmFyLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvZmlkZWxvcGVyL3Byb3h5L3NyYy9UcnVzdFByb3hpZXMucGhwKDU2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBGaWRlbG9wZXJcXFByb3h5XFxUcnVzdFByb3hpZXMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzQ1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9UcmFuc2Zvcm1zUmVxdWVzdC5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXE1pZGRsZXdhcmVcXFRyYW5zZm9ybXNSZXF1ZXN0LT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1ZhbGlkYXRlUG9zdFNpemUucGhwKDI3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZVBvc3RTaXplLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM1NCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUucGhwKDQ2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxDaGVja0Zvck1haW50ZW5hbmNlTW9kZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1OCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2JhcnJ5dmRoL2xhcmF2ZWwtY29ycy9zcmMvSGFuZGxlUHJlZmxpZ2h0LnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTkgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZVByZWZsaWdodC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNjAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2MSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxMDIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzYyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTUxKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzYzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTE2KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5zZW5kUmVxdWVzdFRocm91Z2hSb3V0ZXIoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNjQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3B1YmxpYy9pbmRleC5waHAoNTUpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxLZXJuZWwtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2NSAvaG9tZS9zaW1vbi8uY29tcG9zZXIvdmVuZG9yL2NwcmllZ28vdmFsZXQtbGludXgvc2VydmVyLnBocCgyMDQpOiByZXF1aXJlKCcvaG9tZS9zaW1vbi9naXQuLi4nKQojNjYge21haW59CiJ9IApbMjAxOC0wMy0yMCAxNjoyNDo1N10gbG9jYWwuREVCVUc6IE1lc3NhZ2UtSUQ6IDw0ZjdmNGY4ZGJmZTRkYWE3YzM0NGVjY2UxNjUwNTY1NUBzd2lmdC5nZW5lcmF0ZWQ+CkRhdGU6IFR1ZSwgMjAgTWFyIDIwMTggMTY6MjQ6NTcgKzAxMDAKU3ViamVjdDogQ29udGFjdCBTZW5kCkZyb206IFBlcnNvRmxlZXQgPGluZm9AcGVyc29mbGVldC5kZT4KVG86IHNpbW9ubHVkd2lnQGxpdmUuZGUKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvYWx0ZXJuYXRpdmU7CiBib3VuZGFyeT0iXz1fc3dpZnRfMTUyMTU1OTQ5N18wYTQyM2UzZTM5OTIzMjRmODc5ZWU1MTBjMzdiNDE3MV89XyIKCjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiLS8vVzNDLy9EVEQgWEhUTUwgMS4wIFRyYW5zaXRpb25hbC8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPgo8aGVhZD4KPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0YyRjRGNjsgY29sb3I6ICM3NDc4N0U7IGhlaWdodDogMTAwJTsgbGluZS1oZWlnaHQ6IDEuNDsgbWFyZ2luOiAwOyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7Ij4KPHN0eWxlPgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgICAuaW5uZXItYm9keSB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQoKICAgICAgICAuZm9vdGVyIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9CgogICAgQG1lZGlhICBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHsKICAgICAgICAuYnV0dG9uIHsKICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9Cjwvc3R5bGU+Cjx0YWJsZSBjbGFzcz0id3JhcHBlciIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjhmYTsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPjx0cj4KPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7Ij4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJjb250ZW50IiB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+Cjx0cj4KPHRkIGNsYXNzPSJoZWFkZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDI1cHggMDsgdGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgPGEgaHJlZj0iaHR0cDovL3BlcnNvZmxlZXQudGVzdCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICNiYmJmYzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgdGV4dC1zaGFkb3c6IDAgMXB4IDAgd2hpdGU7Ij4KICAgICAgICAgICAgUGVyc29GbGVldAogICAgICAgIDwvYT4KICAgIDwvdGQ+CjwvdHI+CjwhLS0gRW1haWwgQm9keSAtLT48dHI+Cjx0ZCBjbGFzcz0iYm9keSIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFREVGRjI7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjRURFRkYyOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IHdpZHRoOiAxMDAlOyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiAxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iaW5uZXItYm9keSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjU3MCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyBtYXJnaW46IDAgYXV0bzsgcGFkZGluZzogMDsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPgo8IS0tIEJvZHkgY29udGVudCAtLT48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMSBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzJGMzEzMzsgZm9udC1zaXplOiAxOXB4OyBmb250LXdlaWdodDogYm9sZDsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPktvbnRha3RhdWZuYWhtZTwvaDE+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkRlciBCZW51dHplciBzbHVkd2lnIGhhdCBmb2xnZW5kZXMgZ2VzY2hyaWViZW46PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij50ZXN0PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij50ZXN0PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5XZWl0ZXJlIEluZm9ybWF0aW9uZW46PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5FbWFpbDogPGEgaHJlZj0ibWFpbHRvOnNpbW9uLmx1ZHdpZ0B3ZWJmYWN0b3IuZGUiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjMzg2OUQ0OyI+c2ltb24ubHVkd2lnQHdlYmZhY3Rvci5kZTwvYT48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlRlbGVmb246IDEtNjQzLTU3Ny0yMzk3PC9wPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5GaXJtYTogR2l3ZHVsIFNvbHV0aW9uczwvcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KPHRyPgo8dGQgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsiPgogICAgICAgIDx0YWJsZSBjbGFzcz0iZm9vdGVyIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iNTcwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IG1hcmdpbjogMCBhdXRvOyBwYWRkaW5nOiAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij48dHI+Cjx0ZCBjbGFzcz0iY29udGVudC1jZWxsIiBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAzNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyBjb2xvcjogI0FFQUVBRTsgZm9udC1zaXplOiAxMnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij7CqSAyMDE4IFBlcnNvRmxlZXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9wPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj48L3RhYmxlPgo8L3RkPgo8L3RyPgo8L3RhYmxlPgo8L3RkPgogICAgPC90cj48L3RhYmxlPgo8L2JvZHk+CjwvaHRtbD4KCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBxdW90ZWQtcHJpbnRhYmxlCgojIEtvbnRha3RhdWZuYWhtZQoKRGVyIEJlbnV0emVyIHNsdWR3aWcgaGF0IGZvbGdlbmRlcyBnZXNjaHJpZWJlbjoKCnRlc3QKCnRlc3QKCldlaXRlcmUgSW5mb3JtYXRpb25lbjoKCkVtYWlsOiA8c2ltb24ubHVkd2lnQHdlYmZhY3Rvci5kZT4KClRlbGVmb246IDEtNjQzLTU3Ny0yMzk3ICAKWzIwMTgtMDMtMjAgMTY6MzA6MjVdIGxvY2FsLkVSUk9SOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgKFZpZXc6IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9yZXNvdXJjZXMvdmlld3MvbWFpbHMvYXBwL21hcmtkb3duL2NvbnRhY3QuYmxhZGUucGhwKSB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IChWaWV3OiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcmVzb3VyY2VzL3ZpZXdzL21haWxzL2FwcC9tYXJrZG93bi9jb250YWN0LmJsYWRlLnBocCkgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3N0b3JhZ2UvZnJhbWV3b3JrL3ZpZXdzL2RhY2RjNzNiNTRiMjU4N2NhYWExYjVhM2JmZTI3MWZiOTlhZjdlYjIucGhwOjE5LCBFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9zdG9yYWdlL2ZyYW1ld29yay92aWV3cy9kYWNkYzczYjU0YjI1ODdjYWFhMWI1YTNiZmUyNzFmYjk5YWY3ZWIyLnBocDoxOSkKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9FbmdpbmVzL1BocEVuZ2luZS5waHAoNDUpOiBJbGx1bWluYXRlXFxWaWV3XFxFbmdpbmVzXFxDb21waWxlckVuZ2luZS0+aGFuZGxlVmlld0V4Y2VwdGlvbihPYmplY3QoRXJyb3JFeGNlcHRpb24pLCAxKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1ZpZXcvRW5naW5lcy9Db21waWxlckVuZ2luZS5waHAoNTkpOiBJbGx1bWluYXRlXFxWaWV3XFxFbmdpbmVzXFxQaHBFbmdpbmUtPmV2YWx1YXRlUGF0aCgnL2hvbWUvc2ltb24vZ2l0Li4uJywgQXJyYXkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9WaWV3LnBocCgxMzcpOiBJbGx1bWluYXRlXFxWaWV3XFxFbmdpbmVzXFxDb21waWxlckVuZ2luZS0+Z2V0KCcvaG9tZS9zaW1vbi9naXQuLi4nLCBBcnJheSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L1ZpZXcucGhwKDEyMCk6IElsbHVtaW5hdGVcXFZpZXdcXFZpZXctPmdldENvbnRlbnRzKCkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L1ZpZXcucGhwKDg1KTogSWxsdW1pbmF0ZVxcVmlld1xcVmlldy0+cmVuZGVyQ29udGVudHMoKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFya2Rvd24ucGhwKDYxKTogSWxsdW1pbmF0ZVxcVmlld1xcVmlldy0+cmVuZGVyKCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxhYmxlLnBocCgyMTcpOiBJbGx1bWluYXRlXFxNYWlsXFxNYXJrZG93bi0+cmVuZGVyKCdtYWlscy5hcHAubWFya2QuLi4nLCBBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxhYmxlLnBocCgxODkpOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsYWJsZS0+YnVpbGRNYXJrZG93blZpZXcoKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGFibGUucGhwKDExOSk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxhYmxlLT5idWlsZFZpZXcoKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGVyLnBocCgyNTApOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsYWJsZS0+c2VuZChPYmplY3QoSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGVyKSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYWlsZXIucGhwKDIwNSk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxlci0+c2VuZE1haWxhYmxlKE9iamVjdChBcHBcXE1haWxcXENvbnRhY3RTZW5kKSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9QZW5kaW5nTWFpbC5waHAoOTkpOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsZXItPnNlbmQoT2JqZWN0KEFwcFxcTWFpbFxcQ29udGFjdFNlbmQpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TZXJ2aWNlcy9Db250YWN0U2VydmljZS5waHAoMjkpOiBJbGx1bWluYXRlXFxNYWlsXFxQZW5kaW5nTWFpbC0+c2VuZChPYmplY3QoQXBwXFxNYWlsXFxDb250YWN0U2VuZCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvQ29udHJvbGxlcnMvQXBpL3YxL0NvbnRhY3RzQ29udHJvbGxlci5waHAoNTEpOiBBcHBcXFNlcnZpY2VzXFxDb250YWN0U2VydmljZS0+c2VuZENvbnRhY3RNYWlsKCdzdXBwb3J0QHBlcnNvZmwuLi4nLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbnRhY3QpKQojMTQgW2ludGVybmFsIGZ1bmN0aW9uXTogQXBwXFxIdHRwXFxDb250cm9sbGVyc1xcQXBpXFx2MVxcQ29udGFjdHNDb250cm9sbGVyLT5jcmVhdGUoKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL0NvbnRyb2xsZXIucGhwKDU0KTogY2FsbF91c2VyX2Z1bmNfYXJyYXkoQXJyYXksIEFycmF5KQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL0NvbnRyb2xsZXJEaXNwYXRjaGVyLnBocCg0NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXENvbnRyb2xsZXItPmNhbGxBY3Rpb24oJ2NyZWF0ZScsIEFycmF5KQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlLnBocCgyMTIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxDb250cm9sbGVyRGlzcGF0Y2hlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KEFwcFxcSHR0cFxcQ29udHJvbGxlcnNcXEFwaVxcdjFcXENvbnRhY3RzQ29udHJvbGxlciksICdjcmVhdGUnKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlLnBocCgxNjkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZS0+cnVuQ29udHJvbGxlcigpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NTgpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZS0+cnVuKCkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0OSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzU3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzYwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM2MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzY0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNjUgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzY2IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTY6MzE6MThdIGxvY2FsLkVSUk9SOiBUcnlpbmcgdG8gZ2V0IHByb3BlcnR5IG9mIG5vbi1vYmplY3QgKFZpZXc6IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9yZXNvdXJjZXMvdmlld3MvbWFpbHMvYXBwL21hcmtkb3duL2NvbnRhY3QuYmxhZGUucGhwKSB7ImV4Y2VwdGlvbiI6IltvYmplY3RdIChFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IChWaWV3OiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvcmVzb3VyY2VzL3ZpZXdzL21haWxzL2FwcC9tYXJrZG93bi9jb250YWN0LmJsYWRlLnBocCkgYXQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3N0b3JhZ2UvZnJhbWV3b3JrL3ZpZXdzL2RhY2RjNzNiNTRiMjU4N2NhYWExYjVhM2JmZTI3MWZiOTlhZjdlYjIucGhwOjE5LCBFcnJvckV4Y2VwdGlvbihjb2RlOiAwKTogVHJ5aW5nIHRvIGdldCBwcm9wZXJ0eSBvZiBub24tb2JqZWN0IGF0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9zdG9yYWdlL2ZyYW1ld29yay92aWV3cy9kYWNkYzczYjU0YjI1ODdjYWFhMWI1YTNiZmUyNzFmYjk5YWY3ZWIyLnBocDoxOSkKW3N0YWNrdHJhY2VdCiMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9FbmdpbmVzL1BocEVuZ2luZS5waHAoNDUpOiBJbGx1bWluYXRlXFxWaWV3XFxFbmdpbmVzXFxDb21waWxlckVuZ2luZS0+aGFuZGxlVmlld0V4Y2VwdGlvbihPYmplY3QoRXJyb3JFeGNlcHRpb24pLCAxKQojMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1ZpZXcvRW5naW5lcy9Db21waWxlckVuZ2luZS5waHAoNTkpOiBJbGx1bWluYXRlXFxWaWV3XFxFbmdpbmVzXFxQaHBFbmdpbmUtPmV2YWx1YXRlUGF0aCgnL2hvbWUvc2ltb24vZ2l0Li4uJywgQXJyYXkpCiMyIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvVmlldy9WaWV3LnBocCgxMzcpOiBJbGx1bWluYXRlXFxWaWV3XFxFbmdpbmVzXFxDb21waWxlckVuZ2luZS0+Z2V0KCcvaG9tZS9zaW1vbi9naXQuLi4nLCBBcnJheSkKIzMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L1ZpZXcucGhwKDEyMCk6IElsbHVtaW5hdGVcXFZpZXdcXFZpZXctPmdldENvbnRlbnRzKCkKIzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9WaWV3L1ZpZXcucGhwKDg1KTogSWxsdW1pbmF0ZVxcVmlld1xcVmlldy0+cmVuZGVyQ29udGVudHMoKQojNSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFya2Rvd24ucGhwKDYxKTogSWxsdW1pbmF0ZVxcVmlld1xcVmlldy0+cmVuZGVyKCkKIzYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxhYmxlLnBocCgyMTcpOiBJbGx1bWluYXRlXFxNYWlsXFxNYXJrZG93bi0+cmVuZGVyKCdtYWlscy5hcHAubWFya2QuLi4nLCBBcnJheSkKIzcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9NYWlsL01haWxhYmxlLnBocCgxODkpOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsYWJsZS0+YnVpbGRNYXJrZG93blZpZXcoKQojOCAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGFibGUucGhwKDExOSk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxhYmxlLT5idWlsZFZpZXcoKQojOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL01haWwvTWFpbGVyLnBocCgyNTApOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsYWJsZS0+c2VuZChPYmplY3QoSWxsdW1pbmF0ZVxcTWFpbFxcTWFpbGVyKSkKIzEwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9NYWlsZXIucGhwKDIwNSk6IElsbHVtaW5hdGVcXE1haWxcXE1haWxlci0+c2VuZE1haWxhYmxlKE9iamVjdChBcHBcXE1haWxcXENvbnRhY3RTZW5kKSkKIzExIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvTWFpbC9QZW5kaW5nTWFpbC5waHAoOTkpOiBJbGx1bWluYXRlXFxNYWlsXFxNYWlsZXItPnNlbmQoT2JqZWN0KEFwcFxcTWFpbFxcQ29udGFjdFNlbmQpKQojMTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L2FwcC9TZXJ2aWNlcy9Db250YWN0U2VydmljZS5waHAoMjkpOiBJbGx1bWluYXRlXFxNYWlsXFxQZW5kaW5nTWFpbC0+c2VuZChPYmplY3QoQXBwXFxNYWlsXFxDb250YWN0U2VuZCkpCiMxMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvQ29udHJvbGxlcnMvQXBpL3YxL0NvbnRhY3RzQ29udHJvbGxlci5waHAoNTEpOiBBcHBcXFNlcnZpY2VzXFxDb250YWN0U2VydmljZS0+c2VuZENvbnRhY3RNYWlsKCdzdXBwb3J0QHBlcnNvZmwuLi4nLCBPYmplY3QoQXBwXFxNb2RlbHNcXENvbnRhY3QpKQojMTQgW2ludGVybmFsIGZ1bmN0aW9uXTogQXBwXFxIdHRwXFxDb250cm9sbGVyc1xcQXBpXFx2MVxcQ29udGFjdHNDb250cm9sbGVyLT5jcmVhdGUoKQojMTUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL0NvbnRyb2xsZXIucGhwKDU0KTogY2FsbF91c2VyX2Z1bmNfYXJyYXkoQXJyYXksIEFycmF5KQojMTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL0NvbnRyb2xsZXJEaXNwYXRjaGVyLnBocCg0NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXENvbnRyb2xsZXItPmNhbGxBY3Rpb24oJ2NyZWF0ZScsIEFycmF5KQojMTcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlLnBocCgyMTIpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxDb250cm9sbGVyRGlzcGF0Y2hlci0+ZGlzcGF0Y2goT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSwgT2JqZWN0KEFwcFxcSHR0cFxcQ29udHJvbGxlcnNcXEFwaVxcdjFcXENvbnRhY3RzQ29udHJvbGxlciksICdjcmVhdGUnKQojMTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlLnBocCgxNjkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZS0+cnVuQ29udHJvbGxlcigpCiMxOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2NTgpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZS0+cnVuKCkKIzIwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoMzApOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMyMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvYXBwL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZUFwaVYxLnBocCgyNik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQXBwXFxIdHRwXFxNaWRkbGV3YXJlXFxWYWxpZGF0ZUFwaVYxLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyMyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzI0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvYmFycnl2ZGgvbGFyYXZlbC1jb3JzL3NyYy9IYW5kbGVDb3JzLnBocCgzNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjUgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXENvcnNcXEhhbmRsZUNvcnMtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzI2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjcgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL01pZGRsZXdhcmUvU3Vic3RpdHV0ZUJpbmRpbmdzLnBocCg0MSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMjggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcTWlkZGxld2FyZVxcU3Vic3RpdHV0ZUJpbmRpbmdzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiMyOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9NaWRkbGV3YXJlL1Rocm90dGxlUmVxdWVzdHMucGhwKDU3KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzMSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxNaWRkbGV3YXJlXFxUaHJvdHRsZVJlcXVlc3RzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSksIDYwLCAnMScpCiMzMiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzMzIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDEwMik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojMzQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1JvdXRlci5waHAoNjYwKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT50aGVuKE9iamVjdChDbG9zdXJlKSkKIzM1IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDYzNSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+cnVuUm91dGVXaXRoaW5TdGFjayhPYmplY3QoSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGUpLCBPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzNiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUm91dGVyLnBocCg2MDEpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxSb3V0ZXItPnJ1blJvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlKSkKIzM3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9Sb3V0ZXIucGhwKDU5MCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFJvdXRlci0+ZGlzcGF0Y2hUb1JvdXRlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzM4IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL0tlcm5lbC5waHAoMTc2KTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUm91dGVyLT5kaXNwYXRjaChPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiMzOSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDMwKTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5JbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWRlYnVnYmFyL3NyYy9NaWRkbGV3YXJlL0luamVjdERlYnVnYmFyLnBocCg2NSk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogQmFycnl2ZGhcXERlYnVnYmFyXFxNaWRkbGV3YXJlXFxJbmplY3REZWJ1Z2Jhci0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2ZpZGVsb3Blci9wcm94eS9zcmMvVHJ1c3RQcm94aWVzLnBocCg1Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNDQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogRmlkZWxvcGVyXFxQcm94eVxcVHJ1c3RQcm94aWVzLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpLCBPYmplY3QoQ2xvc3VyZSkpCiM0NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1JvdXRpbmcvUGlwZWxpbmUucGhwKDUzKTogSWxsdW1pbmF0ZVxcUGlwZWxpbmVcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxQaXBlbGluZVxce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzQ2IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvRm91bmRhdGlvbi9IdHRwL01pZGRsZXdhcmUvVHJhbnNmb3Jtc1JlcXVlc3QucGhwKDMwKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0NyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL1BpcGVsaW5lL1BpcGVsaW5lLnBocCgxNDkpOiBJbGx1bWluYXRlXFxGb3VuZGF0aW9uXFxIdHRwXFxNaWRkbGV3YXJlXFxUcmFuc2Zvcm1zUmVxdWVzdC0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNDggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM0OSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL1RyYW5zZm9ybXNSZXF1ZXN0LnBocCgzMCk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTAgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVHJhbnNmb3Jtc1JlcXVlc3QtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzUxIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTIgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Gb3VuZGF0aW9uL0h0dHAvTWlkZGxld2FyZS9WYWxpZGF0ZVBvc3RTaXplLnBocCgyNyk6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTMgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcVmFsaWRhdGVQb3N0U2l6ZS0+aGFuZGxlKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSwgT2JqZWN0KENsb3N1cmUpKQojNTQgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9Sb3V0aW5nL1BpcGVsaW5lLnBocCg1Myk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUGlwZWxpbmVcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM1NSAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9NaWRkbGV3YXJlL0NoZWNrRm9yTWFpbnRlbmFuY2VNb2RlLnBocCg0Nik6IElsbHVtaW5hdGVcXFJvdXRpbmdcXFBpcGVsaW5lLT5JbGx1bWluYXRlXFxSb3V0aW5nXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTYgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTQ5KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcTWlkZGxld2FyZVxcQ2hlY2tGb3JNYWludGVuYW5jZU1vZGUtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzU3IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNTggL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9iYXJyeXZkaC9sYXJhdmVsLWNvcnMvc3JjL0hhbmRsZVByZWZsaWdodC5waHAoNDYpOiBJbGx1bWluYXRlXFxSb3V0aW5nXFxQaXBlbGluZS0+SWxsdW1pbmF0ZVxcUm91dGluZ1xce2Nsb3N1cmV9KE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzU5IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUGlwZWxpbmUvUGlwZWxpbmUucGhwKDE0OSk6IEJhcnJ5dmRoXFxDb3JzXFxIYW5kbGVQcmVmbGlnaHQtPmhhbmRsZShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCksIE9iamVjdChDbG9zdXJlKSkKIzYwIC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC92ZW5kb3IvbGFyYXZlbC9mcmFtZXdvcmsvc3JjL0lsbHVtaW5hdGUvUm91dGluZy9QaXBlbGluZS5waHAoNTMpOiBJbGx1bWluYXRlXFxQaXBlbGluZVxcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFBpcGVsaW5lXFx7Y2xvc3VyZX0oT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNjEgL2hvbWUvc2ltb24vZ2l0L3dlYi9wZXJzb2ZsZWV0L3ZlbmRvci9sYXJhdmVsL2ZyYW1ld29yay9zcmMvSWxsdW1pbmF0ZS9QaXBlbGluZS9QaXBlbGluZS5waHAoMTAyKTogSWxsdW1pbmF0ZVxcUm91dGluZ1xcUGlwZWxpbmUtPklsbHVtaW5hdGVcXFJvdXRpbmdcXHtjbG9zdXJlfShPYmplY3QoSWxsdW1pbmF0ZVxcSHR0cFxcUmVxdWVzdCkpCiM2MiAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDE1MSk6IElsbHVtaW5hdGVcXFBpcGVsaW5lXFxQaXBlbGluZS0+dGhlbihPYmplY3QoQ2xvc3VyZSkpCiM2MyAvaG9tZS9zaW1vbi9naXQvd2ViL3BlcnNvZmxlZXQvdmVuZG9yL2xhcmF2ZWwvZnJhbWV3b3JrL3NyYy9JbGx1bWluYXRlL0ZvdW5kYXRpb24vSHR0cC9LZXJuZWwucGhwKDExNik6IElsbHVtaW5hdGVcXEZvdW5kYXRpb25cXEh0dHBcXEtlcm5lbC0+c2VuZFJlcXVlc3RUaHJvdWdoUm91dGVyKE9iamVjdChJbGx1bWluYXRlXFxIdHRwXFxSZXF1ZXN0KSkKIzY0IC9ob21lL3NpbW9uL2dpdC93ZWIvcGVyc29mbGVldC9wdWJsaWMvaW5kZXgucGhwKDU1KTogSWxsdW1pbmF0ZVxcRm91bmRhdGlvblxcSHR0cFxcS2VybmVsLT5oYW5kbGUoT2JqZWN0KElsbHVtaW5hdGVcXEh0dHBcXFJlcXVlc3QpKQojNjUgL2hvbWUvc2ltb24vLmNvbXBvc2VyL3ZlbmRvci9jcHJpZWdvL3ZhbGV0LWxpbnV4L3NlcnZlci5waHAoMjA0KTogcmVxdWlyZSgnL2hvbWUvc2ltb24vZ2l0Li4uJykKIzY2IHttYWlufQoifSAKWzIwMTgtMDMtMjAgMTY6MzE6MjNdIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8ODg3ZWViMTMyYWRhNzlmMWU1NDA4MzgwNGNmNmEyZGZAc3dpZnQuZ2VuZXJhdGVkPgpEYXRlOiBUdWUsIDIwIE1hciAyMDE4IDE2OjMxOjIzICswMTAwClN1YmplY3Q6IENvbnRhY3QgU2VuZApGcm9tOiBQZXJzb0ZsZWV0IDxpbmZvQHBlcnNvZmxlZXQuZGU+ClRvOiBzdXBwb3J0QHBlcnNvZmxlZXQuY29tCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NTk4ODNfMmVkY2Q0YmJiMzAwMDE5YWI3ZDUwZDU3NWIyNGViZDFfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Lb250YWt0YXVmbmFobWU8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5EZXIgQmVudXR6ZXIgb3B0aW9uYWwgKHJlcXVpcmVkIHdoZW4gbG9nZ2VkIGluKSBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+U3ViamVjdDwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+bG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPldlaXRlcmUgSW5mb3JtYXRpb25lbjo8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkVtYWlsOiA8YSBocmVmPSJtYWlsdG86dGVzdEB0ZXN0LmRlIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzM4NjlENDsiPnRlc3RAdGVzdC5kZTwvYT48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlRlbGVmb246PC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCiMgS29udGFrdGF1Zm5haG1lCgpEZXIgQmVudXR6ZXIgb3B0aW9uYWwgKHJlcXVpcmVkIHdoZW4gbG9nZ2VkIGluKSBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOgoKU3ViamVjdAoKbG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQKCldlaXRlcmUgSW5mb3JtYXRpb25lbjoKCkVtYWlsOiA8dGVzdEB0ZXN0LmRlPgoKVGVsZWZvbjogICAKWzIwMTgtMDMtMjAgMTY6MzI6MDZdIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8ZjkwNjVlOWQ2ZTE5NjkyNTRmODcxNjc4YmMyMWY1NGFAc3dpZnQuZ2VuZXJhdGVkPgpEYXRlOiBUdWUsIDIwIE1hciAyMDE4IDE2OjMyOjA2ICswMTAwClN1YmplY3Q6IENvbnRhY3QgU2VuZApGcm9tOiBQZXJzb0ZsZWV0IDxpbmZvQHBlcnNvZmxlZXQuZGU+ClRvOiBzdXBwb3J0QHBlcnNvZmxlZXQuY29tCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NTk5MjZfNmM5NmFlYzQ5MGE1NjJjODBkNDZkYTEzNGJiMmIxNDNfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Lb250YWt0YXVmbmFobWU8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5EZXIgQmVudXR6ZXIgb3B0aW9uYWwgKHJlcXVpcmVkIHdoZW4gbG9nZ2VkIGluKSBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+U3ViamVjdDwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+bG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPldlaXRlcmUgSW5mb3JtYXRpb25lbjo8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkVtYWlsOiA8YSBocmVmPSJtYWlsdG86dGVzdEB0ZXN0LmRlIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzM4NjlENDsiPnRlc3RAdGVzdC5kZTwvYT48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlRlbGVmb246PC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCiMgS29udGFrdGF1Zm5haG1lCgpEZXIgQmVudXR6ZXIgb3B0aW9uYWwgKHJlcXVpcmVkIHdoZW4gbG9nZ2VkIGluKSBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOgoKU3ViamVjdAoKbG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQKCldlaXRlcmUgSW5mb3JtYXRpb25lbjoKCkVtYWlsOiA8dGVzdEB0ZXN0LmRlPgoKVGVsZWZvbjogICAKWzIwMTgtMDMtMjAgMTY6MzM6NThdIGxvY2FsLkRFQlVHOiBNZXNzYWdlLUlEOiA8MDg1MDVkZDU1ZWNlMTg5NDE5ZTk2MjZhZWJmY2NiODhAc3dpZnQuZ2VuZXJhdGVkPgpEYXRlOiBUdWUsIDIwIE1hciAyMDE4IDE2OjMzOjU4ICswMTAwClN1YmplY3Q6IENvbnRhY3QgU2VuZApGcm9tOiBQZXJzb0ZsZWV0IDxpbmZvQHBlcnNvZmxlZXQuZGU+ClRvOiBzdXBwb3J0QHBlcnNvZmxlZXQuY29tCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOwogYm91bmRhcnk9Il89X3N3aWZ0XzE1MjE1NjAwMzhfYThiNDZhNTE4MTFhYjE5ZDg0NWVkMjU3N2ZhNzE1YzBfPV8iCgo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGMkY0RjY7IGNvbG9yOiAjNzQ3ODdFOyBoZWlnaHQ6IDEwMCU7IGxpbmUtaGVpZ2h0OiAxLjQ7IG1hcmdpbjogMDsgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyI+CjxzdHlsZT4KICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgICAgICAgLmlubmVyLWJvZHkgewogICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgLmZvb3RlciB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSAgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7CiAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgICAgICAgfQogICAgfQo8L3N0eWxlPgo8dGFibGUgY2xhc3M9IndyYXBwZXIiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNmNWY4ZmE7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgd2lkdGg6IDEwMCU7IC1wcmVtYWlsZXItY2VsbHBhZGRpbmc6IDA7IC1wcmVtYWlsZXItY2VsbHNwYWNpbmc6IDA7IC1wcmVtYWlsZXItd2lkdGg6IDEwMCU7Ij48dHI+Cjx0ZCBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iY29udGVudCIgd2lkdGg9IjEwMCUiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgo8dHI+Cjx0ZCBjbGFzcz0iaGVhZGVyIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAyNXB4IDA7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wZXJzb2ZsZWV0LnRlc3QiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjYmJiZmMzOyBmb250LXNpemU6IDE5cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRleHQtc2hhZG93OiAwIDFweCAwIHdoaXRlOyI+CiAgICAgICAgICAgIFBlcnNvRmxlZXQKICAgICAgICA8L2E+CiAgICA8L3RkPgo8L3RyPgo8IS0tIEVtYWlsIEJvZHkgLS0+PHRyPgo8dGQgY2xhc3M9ImJvZHkiIHdpZHRoPSIxMDAlIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRURFRkYyOyBib3JkZXItdG9wOiAxcHggc29saWQgI0VERUZGMjsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB3aWR0aDogMTAwJTsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogMTAwJTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubmVyLWJvZHkiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHdpZHRoOiA1NzBweDsgLXByZW1haWxlci1jZWxscGFkZGluZzogMDsgLXByZW1haWxlci1jZWxsc3BhY2luZzogMDsgLXByZW1haWxlci13aWR0aDogNTcwcHg7Ij4KPCEtLSBCb2R5IGNvbnRlbnQgLS0+PHRyPgo8dGQgY2xhc3M9ImNvbnRlbnQtY2VsbCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgcGFkZGluZzogMzVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICMyRjMxMzM7IGZvbnQtc2l6ZTogMTlweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5Lb250YWt0YXVmbmFobWU8L2gxPgo8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzc0Nzg3RTsgZm9udC1zaXplOiAxNnB4OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IHRleHQtYWxpZ246IGxlZnQ7Ij5EZXIgQmVudXR6ZXIgb3B0aW9uYWwgKHJlcXVpcmVkIHdoZW4gbG9nZ2VkIGluKSBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOjwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+U3ViamVjdDwvcD4KPHAgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgY29sb3I6ICM3NDc4N0U7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyBtYXJnaW4tdG9wOiAwOyB0ZXh0LWFsaWduOiBsZWZ0OyI+bG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPldlaXRlcmUgSW5mb3JtYXRpb25lbjo8L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPkVtYWlsOiA8YSBocmVmPSJtYWlsdG86dGVzdEB0ZXN0LmRlIiBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBjb2xvcjogIzM4NjlENDsiPnRlc3RAdGVzdC5kZTwvYT48L3A+CjxwIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGNvbG9yOiAjNzQ3ODdFOyBmb250LXNpemU6IDE2cHg7IGxpbmUtaGVpZ2h0OiAxLjVlbTsgbWFyZ2luLXRvcDogMDsgdGV4dC1hbGlnbjogbGVmdDsiPlRlbGVmb246PC9wPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJmb290ZXIiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSI1NzAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgYm94LXNpemluZzogYm9yZGVyLWJveDsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6IDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDU3MHB4OyAtcHJlbWFpbGVyLWNlbGxwYWRkaW5nOiAwOyAtcHJlbWFpbGVyLWNlbGxzcGFjaW5nOiAwOyAtcHJlbWFpbGVyLXdpZHRoOiA1NzBweDsiPjx0cj4KPHRkIGNsYXNzPSJjb250ZW50LWNlbGwiIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LWZhbWlseTogQXZlbmlyLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IHBhZGRpbmc6IDM1cHg7Ij4KICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0iZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBsaW5lLWhlaWdodDogMS41ZW07IG1hcmdpbi10b3A6IDA7IGNvbG9yOiAjQUVBRUFFOyBmb250LXNpemU6IDEycHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPsKpIDIwMTggUGVyc29GbGVldC4gQWxsIHJpZ2h0cyByZXNlcnZlZC48L3A+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8L3RyPjwvdGFibGU+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvdGQ+CiAgICA8L3RyPjwvdGFibGU+CjwvYm9keT4KPC9odG1sPgoKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCiMgS29udGFrdGF1Zm5haG1lCgpEZXIgQmVudXR6ZXIgb3B0aW9uYWwgKHJlcXVpcmVkIHdoZW4gbG9nZ2VkIGluKSBoYXQgZm9sZ2VuZGVzIGdlc2NocmllYmVuOgoKU3ViamVjdAoKbG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQKCldlaXRlcmUgSW5mb3JtYXRpb25lbjoKCkVtYWlsOiA8dGVzdEB0ZXN0LmRlPgoKVGVsZWZvbjogICA=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">PC90ZD4K</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">PC90YWJsZT4K</text>
      </register>
      <register name="s" type="2">
        <text encoding="base64">PD9waHAKCnVzZSBJbGx1bWluYXRlXERhdGFiYXNlXFNlZWRlcjsKdXNlIFNwYXRpZVxQZXJtaXNzaW9uXE1vZGVsc1xSb2xlOwoKY2xhc3MgVXNlcnNUYWJsZVNlZWRlciBleHRlbmRzIFNlZWRlcgp7CgogICAgLyoqCiAgICAgKiBSdW4gdGhlIGRhdGFiYXNlIHNlZWRzLgogICAgICoKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gcnVuKCkKICAgIHsKICAgICAgICAkcm9sZXMgPSBjb2xsZWN0KFsKICAgICAgICAgICAgJ2FkbWluJyA9PiBSb2xlOjpmaW5kQnlOYW1lKCdhZG1pbicpCiAgICAgICAgXSk7CgogICAgICAgICRkZWZhdWx0VXNlcnMgPSBjb2xsZWN0KFsKICAgICAgICAgICAgWydPbGl2ZXInLCAnWmllZ2xlcicsICdvbGl2ZXIuemllZ2xlckB3ZWJmYWN0b3IuZGUnLCAnKzQ5MTYwMTU4NzI5NyddLAogICAgICAgICAgICBbJ01hdXJpY2UnLCAnU3dpbW0nLCAnbWF1cmljZS5zd2ltbUB3ZWJmYWN0b3IuZGUnLCAnKzQ5MTc2MjQ2NzAzODUnXSwKICAgICAgICAgICAgWydUaG9tYXMnLCAnU3dvbmtlJywgJ3Rob21hcy5zd29ua2VAd2ViZmFjdG9yLmRlJywgJys0OTE3OTkwODYzNzQnXSwKICAgICAgICAgICAgWydDaHJpc3RpYW4nLCAnS2FzcGVyYmF1ZXInLCAnY2hyaXN0aWFuLmthc3BlcmJhdWVyQHdlYmZhY3Rvci5kZScsICcrNDkxNzYyMzE1MjgxOSddLAogICAgICAgICAgICBbJ1N2ZW4nLCAnVmFuIEdlbGRlcicsICdzdmVuLnZhbi5nZWxkZXJAd2ViZmFjdG9yLmRlJywgJys0OTE3NjMxMjAxMDkyJ10sCiAgICAgICAgICAgIFsnQXN0cmlkJywgJ0Zpc2NoZXInLCAnYXN0cmlkLmZpc2NoZXJAd2ViZmFjdG9yLmRlJywgJys0OTE1MTE3OTA3MjI4J10sCiAgICAgICAgICAgIFsnUGV0ZXInLCAnV2Fzc2VybWFubicsICdwZXRlci53YXNzZXJtYW5uQHdlYmZhY3Rvci5kZScsICcrNDkxNTEyMzgwNzg3NiddLAogICAgICAgICAgICBbJ1NpbW9uJywgJ0x1ZHdpZycsICdzaW1vbi5sdWR3aWdAd2ViZmFjdG9yLmRlJywgJys0OTE2MzE4NzcyOTQnXSwKICAgICAgICBdKTsKICAgICAgICAka2V5cyA9IGNvbGxlY3QoWydmb3JlbmFtZScsICdzdXJuYW1lJywgJ2VtYWlsJywgJ3Bob25lJywgJ3Bhc3N3b3JkJywgJ2FjdGl2ZSddKTsKICAgICAgICAkcGFzcyA9IGJjcnlwdCgndGVzdDEyMycpOwoKICAgICAgICAkZGVmYXVsdFVzZXJzLT5tYXAoZnVuY3Rpb24gKCR1c2VyKSB1c2UgKCRrZXlzLCAkcGFzcykgewogICAgICAgICAgICAkdXNlclsncGFzc3dvcmQnXSA9ICRwYXNzOwogICAgICAgICAgICAkdXNlclsnYWN0aXZlJ10gPSAxOwogICAgICAgICAgICByZXR1cm4gJGtleXMtPmNvbWJpbmUoJHVzZXIpLT50b0FycmF5KCk7CiAgICAgICAgfSktPmVhY2goZnVuY3Rpb24gKCR1c2VyZGF0YSkgdXNlICgkcm9sZXMpIHsKICAgICAgICAgICAgJHVzZXIgPSBmYWN0b3J5KFxBcHBcTW9kZWxzXFVzZXI6OmNsYXNzKS0+Y3JlYXRlKFsKICAgICAgICAgICAgICAgICdlbWFpbCcgICAgPT4gJHVzZXJkYXRhWydlbWFpbCddLAogICAgICAgICAgICAgICAgJ3Bhc3N3b3JkJyA9PiAkdXNlcmRhdGFbJ3Bhc3N3b3JkJ10sCiAgICAgICAgICAgICAgICAnZXh0cmFzJyAgID0+IGpzb25fZW5jb2RlKFsKICAgICAgICAgICAgICAgICAgICAnZm9yZW5hbWUnID0+ICR1c2VyZGF0YVsnZm9yZW5hbWUnXSwKICAgICAgICAgICAgICAgICAgICAnc3VybmFtZScgID0+ICR1c2VyZGF0YVsnc3VybmFtZSddLAogICAgICAgICAgICAgICAgICAgICdwaG9uZScgICAgPT4gJHVzZXJkYXRhWydwaG9uZSddCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKTsKCiAgICAgICAgICAgICR1c2VyLT5hc3NpZ25Sb2xlKCRyb2xlcyk7CiAgICAgICAgfSk7CiAgICB9Cn0K</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4K</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICBkZCgkcmVxdWVzdClzCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICBkZCgkcmVxdWVzdCk7Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICBkZCgneW9sbycpOwo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICBWCiAgICAgICAgJGNyZWRlbnRpYWxzWyduYW1lJ10gPSAkY3JlZGVudGlhbHNbJ3VzZXJuYW1lJ107CiAgICAgICAgdW5zZXQoJGNyZWRlbnRpYWxzWyd1c2VybmFtZSddKTsK</text>
      </register>
      <register name=":" type="4">
        <text>%s/company/job/g</text>
      </register>
    </registers>
    <search>
      <last-search>eager</last-search>
      <last-offset />
      <last-pattern>eager</last-pattern>
      <last-replace>job</last-replace>
      <last-substitute>resolve</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>CustomMessa</entry>
        <entry>old_pass</entry>
        <entry>Image</entry>
        <entry>tiny</entry>
        <entry>summernote</entry>
        <entry encoding="base64">XDwnXD4=</entry>
        <entry>]</entry>
        <entry encoding="base64">XDxtYWluXD4=</entry>
        <entry encoding="base64">XDxhZnRlclw+</entry>
        <entry>resolve</entry>
        <entry encoding="base64">XDxyZXNvbHZlXD4=</entry>
        <entry>devtool</entry>
        <entry>loaders</entry>
        <entry>router</entry>
        <entry>287</entry>
        <entry>persoflicon</entry>
        <entry>ionicon</entry>
        <entry encoding="base64">XDx3ZmNtc1w+</entry>
        <entry>with</entry>
        <entry>eager</entry>
      </history-search>
      <history-cmd>
        <entry>%s/aligner-item/col-md-4/g</entry>
        <entry>{</entry>
        <entry>tagsw</entry>
        <entry>tags</entry>
        <entry>h</entry>
        <entry>q</entry>
        <entry>helpclose</entry>
        <entry>reg</entry>
        <entry>w</entry>
        <entry>close</entry>
        <entry>i</entry>
        <entry>64ggyy</entry>
        <entry>64ggyyp</entry>
        <entry>64gg</entry>
        <entry>s/forename/name</entry>
        <entry>s/name/surname/g</entry>
        <entry>%s/contact/job/g</entry>
        <entry>s/status/priority/g</entry>
        <entry>%s/company/job/g</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>